{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neo/Desktop/mall_vue/app-h5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/neo/Desktop/mall_vue/app-h5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"vant/es/popup/style\";\nimport _Popup from \"vant/es/popup\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { apigetCoinList, apiSubmitRecharge, apiPhpRecharge, apiGcash2Recharge, apiGcash3Recharge, apiMayaRecharge, apiGCashPayRecharge } from '@/API/common';\nimport { session_token } from '@/API/user';\nexport default {\n  components: {\n    [_Toast.name]: _Toast,\n    [_Popup.name]: _Popup\n  },\n  data() {\n    return {\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      coinList: [],\n      max: '',\n      min: '',\n      form: {\n        currency: '',\n        price: ''\n      },\n      session_token: '',\n      btnDis: true,\n      isGcash: true,\n      showPopup: false,\n      path: ''\n    };\n  },\n  computed: {\n    payName() {\n      var _this$$route$query;\n      return ((_this$$route$query = this.$route.query) === null || _this$$route$query === void 0 ? void 0 : _this$$route$query.type) == 'Maya' ? 'Maya' : 'GCash';\n    }\n  },\n  created() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _this$$route$query2, type, min, max, res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            session_token({}).then(function (res) {\n              _this.session_token = res.session_token;\n            });\n            _this$$route$query2 = _this.$route.query, type = _this$$route$query2.type, min = _this$$route$query2.min, max = _this$$route$query2.max;\n            _this.isGcash = type != 'Bank';\n            if (!(type == 'Bank')) {\n              _context.next = 22;\n              break;\n            }\n            _Toast.loading({\n              message: _this.$t('加载中...'),\n              forbidClick: true,\n              duration: 0\n            });\n            _context.prev = 5;\n            _context.next = 8;\n            return apigetCoinList();\n          case 8:\n            res = _context.sent;\n            _this.coinList = res.filter(function (item) {\n              return item.productType == type;\n            })[0].range;\n            _this.form.currency = _this.coinList[27].bank_code;\n            _this.max = _this.coinList[27].max_amount;\n            _this.min = _this.coinList[27].min_amount;\n            _Toast.clear();\n            _context.next = 20;\n            break;\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            _Toast.clear();\n            _this.$router.back();\n          case 20:\n            _context.next = 24;\n            break;\n          case 22:\n            _this.max = max;\n            _this.min = min;\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[5, 16]]);\n    }))();\n  },\n  methods: {\n    onSubmit() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this2$$route$query, _this2$$route$query2, _window, typeToApiMap, requestFn, params, path, _window2, _path;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.$toast.loading();\n              if (!(_this2.form.price == '')) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", _this2.$notify(_this2.$t('请输入充值数量')));\n            case 3:\n              _context2.next = 5;\n              return session_token({}).then(function (res) {\n                _this2.session_token = res.session_token;\n              });\n            case 5:\n              if (!_this2.isGcash) {\n                _context2.next = 16;\n                break;\n              }\n              typeToApiMap = {\n                'GCash2.0': apiGcash2Recharge,\n                'GCash3.0': apiGcash3Recharge,\n                'Maya': apiMayaRecharge,\n                'GCash pay': apiGCashPayRecharge\n              };\n              requestFn = typeToApiMap[(_this2$$route$query = _this2.$route.query) === null || _this2$$route$query === void 0 ? void 0 : _this2$$route$query.type] || apiPhpRecharge;\n              params = {\n                amount: _this2.form.price,\n                session_token: _this2.session_token,\n                token: localStorage.getItem('token')\n              };\n              if (['GCash2.0', 'GCash3.0', 'Maya', 'GCash pay'].includes((_this2$$route$query2 = _this2.$route.query) === null || _this2$$route$query2 === void 0 ? void 0 : _this2$$route$query2.type)) {\n                params.pageUrl = window.location.href.split('#/')[0] + '#/me';\n              }\n              _context2.next = 12;\n              return requestFn(params);\n            case 12:\n              path = _context2.sent;\n              if ((_window = window) !== null && _window !== void 0 && _window.plus) {\n                plus.runtime.openURL(path);\n              } else {\n                if (_this2.isIos()) {\n                  _this2.path = path;\n                  _this2.showPopup = true;\n                } else {\n                  window.open(path);\n                }\n              }\n              _context2.next = 20;\n              break;\n            case 16:\n              _context2.next = 18;\n              return apiSubmitRecharge({\n                amount: _this2.form.price,\n                frenchCurrency: _this2.form.currency,\n                session_token: _this2.session_token\n              });\n            case 18:\n              _path = _context2.sent;\n              if ((_window2 = window) !== null && _window2 !== void 0 && _window2.plus) {\n                plus.runtime.openURL(_path);\n              } else {\n                if (_this2.isIos()) {\n                  _this2.path = _path;\n                  _this2.showPopup = true;\n                } else {\n                  window.open(_path);\n                }\n              }\n            case 20:\n              _this2.$toast.clear();\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    // 判断是否是IOS\n    isIos() {\n      var u = navigator.userAgent;\n      return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n    },\n    handleChange(val) {\n      this.form.price = '';\n      var tempArr = this.coinList.filter(function (item) {\n        return item.bank_code == val;\n      });\n      this.max = tempArr[0].max_amount;\n      this.min = tempArr[0].min_amount;\n    },\n    // 申请金额不能大于最大值\n    handleInput() {\n      this.form.price = this.form.price.replace(/[^\\d.]/g, \"\"); // 非数字和小数点替换为空字符串\n      this.form.price = this.form.price.replace(/\\.{2,}/g, \".\"); // 连续出现多个小数点替换为单个小数点\n      this.form.price = this.form.price.replace(/^\\./g, \"\"); // 第一个字符如果是小数点则替换为空字符串\n      this.form.price = this.form.price.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\"); // 将第一个小数点替换为$#$，去除所有小数点，再将$#$替换回小数点\n      this.form.price = this.form.price.replace(/^(\\-)*(\\d+)\\.(\\d{0,2}).*$/, \"$1$2.$3\"); // 最多允许输入2位小数\n      if (this.form.price > this.max) {\n        this.form.price = this.max;\n      } else if (this.form.price < 1) {\n        this.form.price = '';\n      }\n      this.btnDis = this.form.price < this.min;\n    },\n    // 申请金额不能小于最小值\n    handleInputChange() {\n      if (this.form.price < this.min) {\n        this.form.price = '';\n        this.$notify(\"\".concat(this.$t('申请金额不能小于')).concat(this.min));\n        return;\n      }\n      this.form.price = Number(this.form.price).toFixed(2);\n    },\n    // 查询Gcash最大最小值\n    handleGcashQuery(params) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return apigetCoinList(params);\n            case 2:\n              data = _context3.sent;\n              return _context3.abrupt(\"return\", data[0]);\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    handleAccess() {\n      this.showPopup = false;\n      window.open(this.path);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}