{"ast":null,"code":"import \"vant/es/notify/style\";\nimport _Notify from \"vant/es/notify\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport router from '@/router/router.js';\nimport i18n from \"@/i18n\";\nimport multiItem from '../store/modules/multiItem';\n// import * as https from \"https\";\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n// 配置 环境的接口地址\nvar BASE_URL = process.env.NODE_ENV === 'production' ? '/wap' : process.env.VUE_APP_BASE_URL + 'wap';\n\n// 创建\nvar request = axios.create({\n  baseURL: process.env.VUE_APP_IS_APP ? multiItem.state[process.env.VUE_APP_ITEM_NAME].app_url + '/wap' : BASE_URL,\n  timeout: 100000,\n  // 超时时间\n\n  //   withCredentials: true,\n  withCredentials: false,\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8'\n  }\n  //   transformRequest: [function(data) {\n  //     return data\n  //   }]\n});\n\n// 拦截请求\nrequest.interceptors.request.use(function (config) {\n  if (config.loading) {\n    _Toast.loading({\n      duration: 0,\n      forbidClick: true\n    });\n  }\n  if (!config.params) {\n    // 放在哪里\n    config.params = {};\n  }\n  if (localStorage.getItem('token')) {\n    config.params['token'] = localStorage.getItem('token');\n  }\n  if (!config.params.lang) {\n    // if (i18n.i18n.locale == 'en') {\n    //     config.params['lang'] = 'en'\n    // } else if (i18n.i18n.locale == 'cn') {\n    //     config.params['lang'] = 'cn'\n    // } else if (i18n.i18n.locale == 'tw') {\n    //     config.params['lang'] = 'tw'\n    // }\n    config.params['lang'] = i18n.i18n.locale;\n  }\n  return config;\n}, function (error) {\n  Promise.reject(error);\n});\n\n/**\n * 烤猫, [7/27/2022 9:08 PM]\n * 0 成功\n1 直接显示\n105 直接提示“当前还需交易“ + 返回的金额值 + ”,才可提币\"\n401 是需要实名认证，问客户”未实名认证，是否认证？\"\n403 无登录信息，跳转登录页面\n506 \"帐户异常需要进行C3认证，请联系在线客服。\"\n */\n\n// 拦截响应\nrequest.interceptors.response.use(function (res) {\n  // 200开头的\n  if (res.config.loading) {\n    _Toast.clear();\n  }\n  var _res$data = res.data,\n    code = _res$data.code,\n    data = _res$data.data,\n    msg = _res$data.msg;\n  switch (code / 1) {\n    case 0:\n      return Promise.resolve(data);\n    case 403:\n      localStorage.removeItem('token');\n      if (router.currentRoute.path !== '/me') {\n        router.push({\n          path: '/login'\n        });\n      }\n      return;\n    default:\n      _Notify({\n        type: 'danger',\n        message: i18n.i18n.t(msg)\n      });\n      console.log('错误1', res);\n      return Promise.reject(res.data);\n  }\n}, function (error) {\n  if (error && error.response) {\n    switch (error.response.status) {\n      case 400:\n        error.message = '请求错误';\n        break;\n      case 401:\n        error.message = '未授权，请登录';\n        break;\n      case 403:\n        error.message = '拒绝访问';\n        break;\n      case 404:\n        error.message = \"\\u8BF7\\u6C42\\u5730\\u5740\\u4E0D\\u5B58\\u5728: \".concat(error.response.config.url);\n        break;\n      case 408:\n        error.message = '请求超时';\n        break;\n      case 500:\n        error.message = '服务器内部错误';\n        break;\n      case 501:\n        error.message = '服务未实现';\n        break;\n      case 502:\n        error.message = '网关错误';\n        break;\n      case 503:\n        error.message = '服务不可用';\n        break;\n      case 504:\n        error.message = '网关超时';\n        break;\n      case 505:\n        error.message = 'HTTP版本不受支持';\n        break;\n      default:\n        //     error.message = Toast.fail({\n        //     // icon: 'none',\n        //     // message: i18n.t(msg)\n        //     message: i18n.t('网络波动请刷新页面')\n        //   });\n        _Notify({\n          type: 'danger',\n          message: i18n.i18n.t('网络波动请刷新页面')\n        });\n        // Promise.reject(error)\n        break;\n    }\n  }\n  // eslint-disable-next-line prefer-promise-reject-errors\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"names":["axios","router","i18n","multiItem","defaults","headers","post","BASE_URL","process","env","NODE_ENV","VUE_APP_BASE_URL","request","create","baseURL","VUE_APP_IS_APP","state","VUE_APP_ITEM_NAME","app_url","timeout","withCredentials","interceptors","use","config","loading","_Toast","duration","forbidClick","params","localStorage","getItem","lang","locale","error","Promise","reject","response","res","clear","_res$data","data","code","msg","resolve","removeItem","currentRoute","path","push","_Notify","type","message","t","console","log","status","concat","url"],"sources":["/Users/neo/Desktop/mallV2/app-h5/src/request/index.js"],"sourcesContent":["import axios from 'axios'\nimport router from '@/router/router.js'\nimport { Toast, Notify } from 'vant';\nimport i18n from \"@/i18n\";\nimport multiItem from '../store/modules/multiItem'\n// import * as https from \"https\";\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'\n// 配置 环境的接口地址\nconst BASE_URL = process.env.NODE_ENV === 'production' ? '/wap' : process.env.VUE_APP_BASE_URL + 'wap'\n\n\n\n// 创建\nconst request = axios.create({\n    baseURL: process.env.VUE_APP_IS_APP ? multiItem.state[process.env.VUE_APP_ITEM_NAME].app_url + '/wap' : BASE_URL,\n    timeout: 100000, // 超时时间\n\n    //   withCredentials: true,\n    withCredentials: false,\n    headers: {\n        'Content-Type': 'application/json;charset=UTF-8'\n    },\n    //   transformRequest: [function(data) {\n    //     return data\n    //   }]\n})\n\n// 拦截请求\nrequest.interceptors.request.use(config => {\n    if (config.loading) {\n        Toast.loading({ duration: 0, forbidClick: true })\n    }\n    if (!config.params) { // 放在哪里\n        config.params = {}\n    }\n    if (localStorage.getItem('token')) {\n        config.params['token'] = localStorage.getItem('token')\n    }\n\n    if (!config.params.lang) {\n        // if (i18n.i18n.locale == 'en') {\n        //     config.params['lang'] = 'en'\n        // } else if (i18n.i18n.locale == 'cn') {\n        //     config.params['lang'] = 'cn'\n        // } else if (i18n.i18n.locale == 'tw') {\n        //     config.params['lang'] = 'tw'\n        // }\n        config.params['lang'] = i18n.i18n.locale\n    }\n\n    return config\n}, error => {\n    Promise.reject(error)\n})\n\n/**\n * 烤猫, [7/27/2022 9:08 PM]\n * 0 成功\n1 直接显示\n105 直接提示“当前还需交易“ + 返回的金额值 + ”,才可提币\"\n401 是需要实名认证，问客户”未实名认证，是否认证？\"\n403 无登录信息，跳转登录页面\n506 \"帐户异常需要进行C3认证，请联系在线客服。\"\n */\n\n// 拦截响应\nrequest.interceptors.response.use(res => { // 200开头的\n    if (res.config.loading) {\n        Toast.clear()\n    }\n    const { code, data, msg } = res.data\n    switch (code / 1) {\n        case 0:\n            return Promise.resolve(data)\n        case 403:\n            localStorage.removeItem('token')\n            if (router.currentRoute.path !== '/me') {\n                router.push({ path: '/login' })\n            }\n            return\n        default:\n            Notify({ type: 'danger', message: i18n.i18n.t(msg) });\n            console.log('错误1', res)\n            return Promise.reject(res.data)\n    }\n}, error => {\n    if (error && error.response) {\n        switch (error.response.status) {\n            case 400: error.message = '请求错误'; break\n            case 401: error.message = '未授权，请登录'; break\n            case 403: error.message = '拒绝访问'; break\n            case 404: error.message = `请求地址不存在: ${error.response.config.url}`; break\n            case 408: error.message = '请求超时'; break\n            case 500: error.message = '服务器内部错误'; break\n            case 501: error.message = '服务未实现'; break\n            case 502: error.message = '网关错误'; break\n            case 503: error.message = '服务不可用'; break\n            case 504: error.message = '网关超时'; break\n            case 505: error.message = 'HTTP版本不受支持'; break\n            default:\n                //     error.message = Toast.fail({\n                //     // icon: 'none',\n                //     // message: i18n.t(msg)\n                //     message: i18n.t('网络波动请刷新页面')\n                //   });\n                Notify({ type: 'danger', message: i18n.i18n.t('网络波动请刷新页面') });\n                // Promise.reject(error)\n                break\n        }\n    }\n    // eslint-disable-next-line prefer-promise-reject-errors\n    return Promise.reject(error)\n}\n)\nexport default request\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}