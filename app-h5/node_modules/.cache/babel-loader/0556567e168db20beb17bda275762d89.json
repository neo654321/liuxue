{"ast":null,"code":"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict';\n\nvar _classCallCheck = require(\"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _possibleConstructorReturn = require(\"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\").default;\nvar _isNativeReflectConstruct = require(\"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\").default;\nvar _getPrototypeOf = require(\"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _assertThisInitialized = require(\"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/@babel/runtime/helpers/inherits.js\").default;\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.symbol.to-primitive.js\");\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.includes.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.array-buffer.constructor.js\");\nrequire(\"core-js/modules/es.array-buffer.slice.js\");\nrequire(\"core-js/modules/es.date.to-json.js\");\nrequire(\"core-js/modules/es.date.to-primitive.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.reflect.construct.js\");\nrequire(\"core-js/modules/es.reflect.to-string-tag.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.regexp.to-string.js\");\nrequire(\"core-js/modules/es.string.includes.js\");\nrequire(\"core-js/modules/es.string.replace.js\");\nrequire(\"core-js/modules/es.string.trim.js\");\nrequire(\"core-js/modules/es.typed-array.uint8-array.js\");\nrequire(\"core-js/modules/es.typed-array.at.js\");\nrequire(\"core-js/modules/es.typed-array.copy-within.js\");\nrequire(\"core-js/modules/es.typed-array.every.js\");\nrequire(\"core-js/modules/es.typed-array.fill.js\");\nrequire(\"core-js/modules/es.typed-array.filter.js\");\nrequire(\"core-js/modules/es.typed-array.find.js\");\nrequire(\"core-js/modules/es.typed-array.find-index.js\");\nrequire(\"core-js/modules/es.typed-array.find-last.js\");\nrequire(\"core-js/modules/es.typed-array.find-last-index.js\");\nrequire(\"core-js/modules/es.typed-array.for-each.js\");\nrequire(\"core-js/modules/es.typed-array.includes.js\");\nrequire(\"core-js/modules/es.typed-array.index-of.js\");\nrequire(\"core-js/modules/es.typed-array.iterator.js\");\nrequire(\"core-js/modules/es.typed-array.join.js\");\nrequire(\"core-js/modules/es.typed-array.last-index-of.js\");\nrequire(\"core-js/modules/es.typed-array.map.js\");\nrequire(\"core-js/modules/es.typed-array.reduce.js\");\nrequire(\"core-js/modules/es.typed-array.reduce-right.js\");\nrequire(\"core-js/modules/es.typed-array.reverse.js\");\nrequire(\"core-js/modules/es.typed-array.set.js\");\nrequire(\"core-js/modules/es.typed-array.slice.js\");\nrequire(\"core-js/modules/es.typed-array.some.js\");\nrequire(\"core-js/modules/es.typed-array.sort.js\");\nrequire(\"core-js/modules/es.typed-array.to-locale-string.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.to-string.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nrequire(\"core-js/modules/web.url.to-json.js\");\nvar base64 = require('base64-js');\nvar ieee754 = require('ieee754');\nvar customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' // eslint-disable-line dot-notation\n? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n: null;\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\nvar K_MAX_LENGTH = 0x7fffffff;\nexports.kMaxLength = K_MAX_LENGTH;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n  console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n}\nfunction typedArraySupport() {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1);\n    var proto = {\n      foo: function foo() {\n        return 42;\n      }\n    };\n    Object.setPrototypeOf(proto, Uint8Array.prototype);\n    Object.setPrototypeOf(arr, proto);\n    return arr.foo() === 42;\n  } catch (e) {\n    return false;\n  }\n}\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function get() {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.buffer;\n  }\n});\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function get() {\n    if (!Buffer.isBuffer(this)) return undefined;\n    return this.byteOffset;\n  }\n});\nfunction createBuffer(length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length);\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError('The \"string\" argument must be of type string. Received type number');\n    }\n    return allocUnsafe(arg);\n  }\n  return from(arg, encodingOrOffset, length);\n}\nBuffer.poolSize = 8192; // not used by this implementation\n\nfunction from(value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset);\n  }\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value);\n  }\n  if (value == null) {\n    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n  }\n  if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n  }\n  var valueOf = value.valueOf && value.valueOf();\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length);\n  }\n  var b = fromObject(value);\n  if (b) return b;\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);\n  }\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length);\n};\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\nObject.setPrototypeOf(Buffer, Uint8Array);\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number');\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n  }\n}\nfunction alloc(size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(size);\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n  }\n  return createBuffer(size);\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding);\n};\nfunction allocUnsafe(size) {\n  assertSize(size);\n  return createBuffer(size < 0 ? 0 : checked(size) | 0);\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size);\n};\nfunction fromString(string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding);\n  }\n  var length = byteLength(string, encoding) | 0;\n  var buf = createBuffer(length);\n  var actual = buf.write(string, encoding);\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual);\n  }\n  return buf;\n}\nfunction fromArrayLike(array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  var buf = createBuffer(length);\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255;\n  }\n  return buf;\n}\nfunction fromArrayView(arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView);\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n  }\n  return fromArrayLike(arrayView);\n}\nfunction fromArrayBuffer(array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds');\n  }\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds');\n  }\n  var buf;\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array);\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset);\n  } else {\n    buf = new Uint8Array(array, byteOffset, length);\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype);\n  return buf;\n}\nfunction fromObject(obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    var buf = createBuffer(len);\n    if (buf.length === 0) {\n      return buf;\n    }\n    obj.copy(buf, 0, 0, len);\n    return buf;\n  }\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0);\n    }\n    return fromArrayLike(obj);\n  }\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data);\n  }\n}\nfunction checked(length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n  }\n  return length | 0;\n}\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length);\n}\nBuffer.isBuffer = function isBuffer(b) {\n  return b != null && b._isBuffer === true && b !== Buffer.prototype; // so Buffer.isBuffer(Buffer.prototype) will be false\n};\nBuffer.compare = function compare(a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n  }\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n    default:\n      return false;\n  }\n};\nBuffer.concat = function concat(list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf);\n        buf.copy(buffer, pos);\n      } else {\n        Uint8Array.prototype.set.call(buffer, buf, pos);\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    } else {\n      buf.copy(buffer, pos);\n    }\n    pos += buf.length;\n  }\n  return buffer;\n};\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength;\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);\n  }\n  var len = string.length;\n  var mustMatch = arguments.length > 2 && arguments[2] === true;\n  if (!mustMatch && len === 0) return 0;\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length;\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n      case 'hex':\n        return len >>> 1;\n      case 'base64':\n        return base64ToBytes(string).length;\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length; // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return '';\n  }\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n  if (end <= 0) {\n    return '';\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n  if (end <= start) {\n    return '';\n  }\n  if (!encoding) encoding = 'utf8';\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n      case 'ascii':\n        return asciiSlice(this, start, end);\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n      case 'base64':\n        return base64Slice(this, start, end);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true;\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this;\n};\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this;\n};\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this;\n};\nBuffer.prototype.toString = function toString() {\n  var length = this.length;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();\n  if (this.length > max) str += ' ... ';\n  return '<Buffer ' + str + '>';\n};\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;\n}\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength);\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);\n  }\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n  if (start >= end) {\n    return 1;\n  }\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1;\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset; // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n  throw new TypeError('val must be string, number or Buffer');\n}\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n      if (found) return i;\n    }\n  }\n  return -1;\n}\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n  var strLen = string.length;\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  var i;\n  for (i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (numberIsNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n  return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n    // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0;\n    if (isFinite(length)) {\n      length = length >>> 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length);\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n    if (i + bytesPerSequence <= end) {\n      var secondByte = void 0,\n        thirdByte = void 0,\n        fourthByte = void 0,\n        tempCodePoint = void 0;\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break;\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break;\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret;\n}\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret;\n}\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]];\n  }\n  return out;\n}\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res;\n}\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n  if (end < start) end = start;\n  var newBuf = this.subarray(start, end);\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype);\n  return newBuf;\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\nBuffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n  return val;\n};\nBuffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\nBuffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\nBuffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\nBuffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\nBuffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  var first = this[offset];\n  var last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  var lo = first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24);\n  var hi = this[++offset] + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + last * Math.pow(2, 24);\n  return BigInt(lo) + (BigInt(hi) << BigInt(32));\n});\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  var first = this[offset];\n  var last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  var hi = first * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n  var lo = this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last;\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n});\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  var first = this[offset];\n  var last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  var val = this[offset + 4] + this[offset + 5] * Math.pow(2, 8) + this[offset + 6] * Math.pow(2, 16) + (last << 24); // Overflow\n\n  return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * Math.pow(2, 8) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 24));\n});\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n  offset = offset >>> 0;\n  validateNumber(offset, 'offset');\n  var first = this[offset];\n  var last = this[offset + 7];\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8);\n  }\n  var val = (first << 24) +\n  // Overflow\n  this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + this[++offset];\n  return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * Math.pow(2, 24) + this[++offset] * Math.pow(2, 16) + this[++offset] * Math.pow(2, 8) + last);\n});\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  offset = offset >>> 0;\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\nBuffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  byteLength = byteLength >>> 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset + 3] = value >>> 24;\n  this[offset + 2] = value >>> 16;\n  this[offset + 1] = value >>> 8;\n  this[offset] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nfunction wrtBigUInt64LE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  var lo = Number(value & BigInt(0xffffffff));\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  lo = lo >> 8;\n  buf[offset++] = lo;\n  var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  hi = hi >> 8;\n  buf[offset++] = hi;\n  return offset;\n}\nfunction wrtBigUInt64BE(buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7);\n  var lo = Number(value & BigInt(0xffffffff));\n  buf[offset + 7] = lo;\n  lo = lo >> 8;\n  buf[offset + 6] = lo;\n  lo = lo >> 8;\n  buf[offset + 5] = lo;\n  lo = lo >> 8;\n  buf[offset + 4] = lo;\n  var hi = Number(value >> BigInt(32) & BigInt(0xffffffff));\n  buf[offset + 3] = hi;\n  hi = hi >> 8;\n  buf[offset + 2] = hi;\n  hi = hi >> 8;\n  buf[offset + 1] = hi;\n  hi = hi >> 8;\n  buf[offset] = hi;\n  return offset + 8;\n}\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'));\n});\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n  return offset + byteLength;\n};\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  return offset + 2;\n};\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  this[offset] = value >>> 8;\n  this[offset + 1] = value & 0xff;\n  return offset + 2;\n};\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  this[offset] = value & 0xff;\n  this[offset + 1] = value >>> 8;\n  this[offset + 2] = value >>> 16;\n  this[offset + 3] = value >>> 24;\n  return offset + 4;\n};\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  this[offset] = value >>> 24;\n  this[offset + 1] = value >>> 16;\n  this[offset + 2] = value >>> 8;\n  this[offset + 3] = value & 0xff;\n  return offset + 4;\n};\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'));\n});\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  value = +value;\n  offset = offset >>> 0;\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0;\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n  var len = end - start;\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end);\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n  }\n  return len;\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code;\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } else if (typeof val === 'boolean') {\n    val = Number(val);\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n  if (end <= start) {\n    return this;\n  }\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);\n    var len = bytes.length;\n    if (len === 0) {\n      throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n  return this;\n};\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nvar errors = {};\nfunction E(sym, getMessage, Base) {\n  errors[sym] = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    function NodeError() {\n      var _this;\n      _classCallCheck(this, NodeError);\n      _this = _callSuper(this, NodeError);\n      Object.defineProperty(_assertThisInitialized(_this), 'message', {\n        value: getMessage.apply(_assertThisInitialized(_this), arguments),\n        writable: true,\n        configurable: true\n      });\n\n      // Add the error code to the name to include it in the stack trace.\n      _this.name = \"\".concat(_this.name, \" [\").concat(sym, \"]\");\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      _this.stack; // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete _this.name;\n      return _this;\n    }\n    _createClass(NodeError, [{\n      key: \"code\",\n      get: function get() {\n        return sym;\n      },\n      set: function set(value) {\n        Object.defineProperty(this, 'code', {\n          configurable: true,\n          enumerable: true,\n          value,\n          writable: true\n        });\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"\".concat(this.name, \" [\").concat(sym, \"]: \").concat(this.message);\n      }\n    }]);\n    return NodeError;\n  }(Base);\n}\nE('ERR_BUFFER_OUT_OF_BOUNDS', function (name) {\n  if (name) {\n    return \"\".concat(name, \" is outside of buffer bounds\");\n  }\n  return 'Attempt to access memory outside buffer bounds';\n}, RangeError);\nE('ERR_INVALID_ARG_TYPE', function (name, actual) {\n  return \"The \\\"\".concat(name, \"\\\" argument must be of type number. Received type \").concat(typeof actual);\n}, TypeError);\nE('ERR_OUT_OF_RANGE', function (str, range, input) {\n  var msg = \"The value of \\\"\".concat(str, \"\\\" is out of range.\");\n  var received = input;\n  if (Number.isInteger(input) && Math.abs(input) > Math.pow(2, 32)) {\n    received = addNumericalSeparator(String(input));\n  } else if (typeof input === 'bigint') {\n    received = String(input);\n    if (input > Math.pow(BigInt(2), BigInt(32)) || input < -Math.pow(BigInt(2), BigInt(32))) {\n      received = addNumericalSeparator(received);\n    }\n    received += 'n';\n  }\n  msg += \" It must be \".concat(range, \". Received \").concat(received);\n  return msg;\n}, RangeError);\nfunction addNumericalSeparator(val) {\n  var res = '';\n  var i = val.length;\n  var start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = \"_\".concat(val.slice(i - 3, i)).concat(res);\n  }\n  return \"\".concat(val.slice(0, i)).concat(res);\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds(buf, offset, byteLength) {\n  validateNumber(offset, 'offset');\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1));\n  }\n}\nfunction checkIntBI(value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    var n = typeof min === 'bigint' ? 'n' : '';\n    var range;\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = \">= 0\".concat(n, \" and < 2\").concat(n, \" ** \").concat((byteLength + 1) * 8).concat(n);\n      } else {\n        range = \">= -(2\".concat(n, \" ** \").concat((byteLength + 1) * 8 - 1).concat(n, \") and < 2 ** \") + \"\".concat((byteLength + 1) * 8 - 1).concat(n);\n      }\n    } else {\n      range = \">= \".concat(min).concat(n, \" and <= \").concat(max).concat(n);\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value);\n  }\n  checkBounds(buf, offset, byteLength);\n}\nfunction validateNumber(value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value);\n  }\n}\nfunction boundsError(value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type);\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value);\n  }\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n  }\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset', \">= \".concat(type ? 1 : 0, \" and <= \").concat(length), value);\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\nfunction base64clean(str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0];\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return '';\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str;\n}\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction asciiToBytes(str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray;\n}\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n  return byteArray;\n}\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\nfunction blitBuffer(src, dst, offset, length) {\n  var i;\n  for (i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n  return i;\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance(obj, type) {\n  return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n}\nfunction numberIsNaN(obj) {\n  // For IE11 support\n  return obj !== obj; // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = function () {\n  var alphabet = '0123456789abcdef';\n  var table = new Array(256);\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16;\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j];\n    }\n  }\n  return table;\n}();\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod(fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn;\n}\nfunction BufferBigIntNotDefined() {\n  throw new Error('BigInt not supported');\n}","map":{"version":3,"names":["_classCallCheck","require","default","_createClass","_possibleConstructorReturn","_isNativeReflectConstruct","_getPrototypeOf","_assertThisInitialized","_inherits","_callSuper","t","o","e","Reflect","construct","constructor","apply","base64","ieee754","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","console","error","arr","Uint8Array","proto","foo","Object","setPrototypeOf","prototype","defineProperty","enumerable","get","isBuffer","undefined","buffer","byteOffset","createBuffer","length","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","value","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","allocUnsafeSlow","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","i","arrayView","copy","obj","len","numberIsNaN","type","Array","isArray","data","toString","_isBuffer","compare","a","offset","x","y","Math","min","String","toLowerCase","concat","list","pos","set","call","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","swap16","swap32","swap64","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","includes","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","isFinite","Error","toJSON","_arr","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","newBuf","subarray","checkOffset","ext","readUintLE","readUIntLE","noAssert","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","lo","pow","hi","BigInt","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","checkInt","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","checkIEEE754","writeFloat","littleEndian","writeFloatLE","writeFloatBE","writeDouble","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","charCodeAt","errors","E","sym","getMessage","Base","_Base","NodeError","_this","writable","configurable","name","stack","key","message","range","input","msg","received","isInteger","abs","addNumericalSeparator","checkBounds","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","c","toByteArray","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined"],"sources":["/Users/neo/Desktop/node/liuxue/app-h5/node_modules/buffer/index.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}