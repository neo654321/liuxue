{"ast":null,"code":"'use strict';\n\n// Use direct extract instead of `regenerate` to reduse browserified size\nvar src_Any = exports.src_Any = require('uc.micro/properties/Any/regex').source;\nvar src_Cc = exports.src_Cc = require('uc.micro/categories/Cc/regex').source;\nvar src_Z = exports.src_Z = require('uc.micro/categories/Z/regex').source;\nvar src_P = exports.src_P = require('uc.micro/categories/P/regex').source;\n\n// \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\nvar src_ZPCc = exports.src_ZPCc = [src_Z, src_P, src_Cc].join('|');\n\n// \\p{\\Z\\Cc} (white spaces + control)\nvar src_ZCc = exports.src_ZCc = [src_Z, src_Cc].join('|');\n\n// All possible word characters (everything without punctuation, spaces & controls)\n// Defined via punctuation & spaces to save space\n// Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\nvar src_pseudo_letter = '(?:(?!>|<|' + src_ZPCc + ')' + src_Any + ')';\n// The same as abothe but without [0-9]\n// var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar src_ip4 = exports.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n// Prohibit [@/] in user/pass to avoid wrong domain fetch.\nexports.src_auth = '(?:(?:(?!' + src_ZCc + '|[@/]).)+@)?';\nvar src_port = exports.src_port = '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\nvar src_host_terminator = exports.src_host_terminator = '(?=$|>|<|' + src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + src_ZPCc + '))';\nvar src_path = exports.src_path = '(?:' + '[/?#]' + '(?:' + '(?!' + src_ZCc + '|[()[\\\\]{}.,\"\\'?!\\\\-<>]).|' + '\\\\[(?:(?!' + src_ZCc + '|\\\\]).)*\\\\]|' + '\\\\((?:(?!' + src_ZCc + '|[)]).)*\\\\)|' + '\\\\{(?:(?!' + src_ZCc + '|[}]).)*\\\\}|' + '\\\\\"(?:(?!' + src_ZCc + '|[\"]).)+\\\\\"|' + \"\\\\'(?:(?!\" + src_ZCc + \"|[']).)+\\\\'|\" + \"\\\\'(?=\" + src_pseudo_letter + ').|' +\n// allow `I'm_king` if no pair found\n'\\\\.{2,3}[a-zA-Z0-9%/]|' +\n// github has ... in commit range links. Restrict to\n// - english\n// - percent-encoded\n// - parts of file path\n// until more examples found.\n'\\\\.(?!' + src_ZCc + '|[.]).|' + '\\\\-(?!--(?:[^-]|$))(?:-*)|' +\n// `---` => long dash, terminate\n'\\\\,(?!' + src_ZCc + ').|' +\n// allow `,,,` in paths\n'\\\\!(?!' + src_ZCc + '|[!]).|' + '\\\\?(?!' + src_ZCc + '|[?]).' + ')+' + '|\\\\/' + ')?';\nvar src_email_name = exports.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]+';\nvar src_xn = exports.src_xn = 'xn--[a-z0-9\\\\-]{1,59}';\n\n// More to read about domain names\n// http://serverfault.com/questions/638260/\n\nvar src_domain_root = exports.src_domain_root =\n// Allow letters & digits (http://test1)\n'(?:' + src_xn + '|' + src_pseudo_letter + '{1,63}' + ')';\nvar src_domain = exports.src_domain = '(?:' + src_xn + '|' + '(?:' + src_pseudo_letter + ')' + '|' +\n// don't allow `--` in domain names, because:\n// - that can conflict with markdown &mdash; / &ndash;\n// - nobody use those anyway\n'(?:' + src_pseudo_letter + '(?:-(?!-)|' + src_pseudo_letter + '){0,61}' + src_pseudo_letter + ')' + ')';\nvar src_host = exports.src_host = '(?:' +\n// Don't need IP check, because digits are already allowed in normal domain names\n//   src_ip4 +\n// '|' +\n'(?:(?:(?:' + src_domain + ')\\\\.)*' + src_domain_root + ')' + ')';\nvar tpl_host_fuzzy = exports.tpl_host_fuzzy = '(?:' + src_ip4 + '|' + '(?:(?:(?:' + src_domain + ')\\\\.)+(?:%TLDS%))' + ')';\nvar tpl_host_no_ip_fuzzy = exports.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + src_domain + ')\\\\.)+(?:%TLDS%))';\nexports.src_host_strict = src_host + src_host_terminator;\nvar tpl_host_fuzzy_strict = exports.tpl_host_fuzzy_strict = tpl_host_fuzzy + src_host_terminator;\nexports.src_host_port_strict = src_host + src_port + src_host_terminator;\nvar tpl_host_port_fuzzy_strict = exports.tpl_host_port_fuzzy_strict = tpl_host_fuzzy + src_port + src_host_terminator;\nvar tpl_host_port_no_ip_fuzzy_strict = exports.tpl_host_port_no_ip_fuzzy_strict = tpl_host_no_ip_fuzzy + src_port + src_host_terminator;\n\n////////////////////////////////////////////////////////////////////////////////\n// Main rules\n\n// Rude test fuzzy links by host, for quick deny\nexports.tpl_host_fuzzy_test = 'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + src_ZPCc + '|>|$))';\nexports.tpl_email_fuzzy = '(^|<|>|\\\\(|' + src_ZCc + ')(' + src_email_name + '@' + tpl_host_fuzzy_strict + ')';\nexports.tpl_link_fuzzy =\n// Fuzzy link can't be prepended with .:/\\- and non punctuation.\n// but can start with > (markdown blockquote)\n'(^|(?![.:/\\\\-_@])(?:[$+<=>^`|]|' + src_ZPCc + '))' + '((?![$+<=>^`|])' + tpl_host_port_fuzzy_strict + src_path + ')';\nexports.tpl_link_no_ip_fuzzy =\n// Fuzzy link can't be prepended with .:/\\- and non punctuation.\n// but can start with > (markdown blockquote)\n'(^|(?![.:/\\\\-_@])(?:[$+<=>^`|]|' + src_ZPCc + '))' + '((?![$+<=>^`|])' + tpl_host_port_no_ip_fuzzy_strict + src_path + ')';","map":null,"metadata":{},"sourceType":"script"}