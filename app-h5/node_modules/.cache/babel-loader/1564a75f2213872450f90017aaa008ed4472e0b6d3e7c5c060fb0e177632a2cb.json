{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/dialog/style\";\nimport _Dialog from \"vant/es/dialog\";\nimport \"vant/es/action-sheet/style\";\nimport _ActionSheet from \"vant/es/action-sheet\";\nimport { orderCancel } from '@/API/user';\nexport default {\n  name: 'CancelDialog',\n  components: {\n    [_ActionSheet.name]: _ActionSheet,\n    [_Dialog.name]: _Dialog\n  },\n  props: {\n    dialogShow: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    dialogData: {\n      type: Object,\n      required: true,\n      default: function _default() {}\n    }\n  },\n  computed: {\n    visible: {\n      get() {\n        return this.dialogShow;\n      },\n      set() {\n        this.$emit('update:dialogShow', false);\n      }\n    }\n  },\n  watch: {\n    visible(val) {\n      if (!val) {\n        this.currentIndex = null;\n      }\n    }\n  },\n  data() {\n    return {\n      checkIcon: require('@/assets/image/me/check1.png'),\n      currentIndex: null,\n      reasonData: [{\n        id: 1,\n        txt: this.$t('不想要了')\n      }, {\n        id: 2,\n        txt: this.$t('下错商品')\n      }, {\n        id: 3,\n        txt: this.$t('订单重复')\n      }, {\n        id: 4,\n        txt: this.$t('无法签收')\n      }, {\n        id: 5,\n        txt: this.$t('其他原因')\n      }]\n    };\n  },\n  methods: {\n    cancelHandle() {\n      var _this = this;\n      _Dialog.confirm({\n        title: this.$t('提示'),\n        message: this.$t('确认取消吗？'),\n        confirmButtonText: this.$t('确认'),\n        cancelButtonText: this.$t('取消')\n      }).then(function () {\n        _Toast.loading({\n          duration: 0,\n          message: _this.$t('提交中'),\n          forbidClick: true\n        });\n        var params = {\n          orderId: _this.dialogData.id,\n          returnReason: _this.reasonData[_this.currentIndex].id\n        };\n        orderCancel(params).then(function () {\n          _Toast.clear();\n          _this.$emit('update:dialogShow', false);\n          _this.$emit('done', false);\n        }).catch(function () {\n          _Toast.clear();\n        });\n      }).catch(function () {\n        _this.$emit('update:dialogShow', false);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAeA,SACAA,mBACA;AACA;EACAC;EACAC;IACA;IACA;EACA;EACAC;IACAC;MACAC;MACAC;MACAC;IACA;IACAC;MACAH;MACAC;MACAC;IACA;EACA;EACAE;IACAC;MACAC;QACA;MACA;MACAC;QACA;MACA;IACA;EACA;EACAC;IACAH;MACA;QACA;MACA;IACA;EACA;EACAI;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;QACAD;QACAC;MACA;QACAD;QACAC;MACA;QACAD;QACAC;MACA;QACAD;QACAC;MACA;IACA;EACA;EACAC;IACAC;MAAA;MACA;QACAC;QACAC;QACAC;QACAC;MACA;QACA;UACAC;UACAH;UACAI;QACA;QAEA;UACAC;UACAC;QACA;QAEA7B;UACA;UACA;UACA;QACA;UACA;QACA;MACA;QACA;MACA;IACA;EACA;AACA","names":["orderCancel","name","components","props","dialogShow","type","required","default","dialogData","computed","visible","get","set","watch","data","checkIcon","currentIndex","reasonData","id","txt","methods","cancelHandle","title","message","confirmButtonText","cancelButtonText","duration","forbidClick","orderId","returnReason"],"sourceRoot":"src/page/Order/components","sources":["CancelDialog.vue"],"sourcesContent":["<template>\n  <div class=\"dialog-content\">\n    <van-action-sheet v-model=\"visible\" :title=\"$t('请选择订单取消原因')\" :round=\"false\">\n      <div class=\"cancel-content\">\n        <div class=\"item\" v-for=\"(item, index) in reasonData\" :key=\"index\" :class=\"{'active': currentIndex === index}\" @click=\"currentIndex = index\">{{ item.txt }} <img v-if=\"currentIndex === index\" :src=\"checkIcon\" alt=\"\" /></div>\n      </div>\n      <div class=\"btn-content\">\n        <div class=\"btn\" :class=\"{'active': currentIndex !== null}\" @click=\"cancelHandle\">{{ $t('确认取消') }}</div>\n      </div>\n    </van-action-sheet>\n  </div>\n</template>\n\n<script>\nimport { ActionSheet, Dialog, Toast } from 'vant'\nimport {\n  orderCancel\n} from '@/API/user'\nexport default {\n  name: 'CancelDialog',\n  components:{\n    [ActionSheet.name]:ActionSheet,\n    [Dialog.name]:Dialog\n  },\n  props: {\n    dialogShow: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    dialogData: {\n      type: Object,\n      required: true,\n      default: () => {}\n    }\n  },\n  computed: {\n    visible: {\n      get() {\n        return this.dialogShow\n      },\n      set() {\n        this.$emit('update:dialogShow', false)\n      }\n    }\n  },\n  watch: {\n    visible(val) {\n      if (!val) {\n        this.currentIndex = null\n      }\n    }\n  },\n  data() {\n    return {\n      checkIcon: require('@/assets/image/me/check1.png'),\n      currentIndex: null,\n      reasonData: [{\n        id: 1,\n        txt: this.$t('不想要了')\n      }, {\n        id: 2,\n        txt: this.$t('下错商品')\n      }, {\n        id: 3,\n        txt: this.$t('订单重复')\n      }, {\n        id: 4,\n        txt: this.$t('无法签收')\n      }, {\n        id: 5,\n        txt: this.$t('其他原因')\n      }]\n    }\n  },\n  methods: {\n    cancelHandle() {\n      Dialog.confirm({\n        title: this.$t('提示'),\n        message: this.$t('确认取消吗？'),\n        confirmButtonText: this.$t('确认'),\n        cancelButtonText: this.$t('取消')\n      }).then(() => {\n        Toast.loading({\n          duration: 0,\n          message: this.$t('提交中'),\n          forbidClick: true\n        })\n\n        const params = {\n          orderId: this.dialogData.id,\n          returnReason: this.reasonData[this.currentIndex].id\n        }\n\n        orderCancel(params).then(() => {\n          Toast.clear()\n          this.$emit('update:dialogShow', false)\n          this.$emit('done', false)\n        }).catch(() => {\n          Toast.clear()\n        })\n      }).catch(() => {\n        this.$emit('update:dialogShow', false)\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  .dialog-content {\n    * {\n      box-sizing: border-box;\n    }\n    /deep/ .van-action-sheet__close {\n      color: #333;\n      font-size: 14px;\n    }\n    .cancel-content {\n      padding: 0 10px;\n      > .item {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 15px 0;\n        color: #999;\n        font-size: 16px;\n        border-top: 1px solid #eee;\n        > img {\n          width: 14px;\n          height: 14px;\n          margin-left: 20px;\n        }\n        &.active {\n        //   color: var(--main-color);\n        color: var(--main-color);\n        }\n      }\n    }\n    .btn-content {\n      padding: 10px 10px 30px 10px;\n      > .btn {\n        width: 100%;\n        height: 44px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border-radius: 4px;\n        background-color: #eee;\n        font-size: 16px;\n        color: #888CA1;\n        pointer-events: none;\n        &.active {\n          background-color: var(--main-color);\n          color: #fff;\n          pointer-events: auto;\n        }\n      }\n    }\n  }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}