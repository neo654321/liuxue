{"ast":null,"code":"import _Dropdown2 from \"element-ui/lib/theme-chalk/dropdown.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dropdown from \"element-ui/lib/dropdown\";\nimport _DropdownItem2 from \"element-ui/lib/theme-chalk/dropdown-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownItem from \"element-ui/lib/dropdown-item\";\nimport _DropdownMenu2 from \"element-ui/lib/theme-chalk/dropdown-menu.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownMenu from \"element-ui/lib/dropdown-menu\";\nimport _objectSpread from \"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/.pnpm/@babel+runtime@7.20.7/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapGetters, mapMutations } from \"vuex\";\nexport default {\n  name: 'mer-chant-header',\n  data() {\n    return {\n      logo: require(\"@/assets/Argos/logo.\".concat(this.$store.state.multiItem[process.env.VUE_APP_ITEM_NAME].suffix)),\n      lang: [{\n        title: '简体中文',\n        key: 'cn',\n        icon: require('@/assets/image/language/cn.png')\n      }, {\n        title: 'English',\n        key: 'en',\n        icon: require('@/assets/image/language/usa.png')\n      }, {\n        title: '繁体中文',\n        key: 'tw',\n        icon: require('@/assets/image/language/tw.png')\n      }]\n    };\n  },\n  computed: _objectSpread({\n    languageIcon() {\n      var language = this.$store.getters.language || 'tw';\n      var icon = {\n        'cn': require('@/assets/image/language/cn.png'),\n        'en': require('@/assets/image/language/usa.png'),\n        'tw': require('@/assets/image/language/tw.png')\n      };\n      return icon[language];\n    }\n  }, mapGetters({\n    activeLang: 'language'\n  })),\n  created() {},\n  components: {\n    [_DropdownMenu.name]: _DropdownMenu,\n    [_DropdownItem.name]: _DropdownItem,\n    [_Dropdown.name]: _Dropdown\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations(['setLanguage'])), {}, {\n    handleSetLang(index) {\n      console.log(index);\n      // 设置i18n.locale 组件库会按照上面的配置使用对应的文案文件\n      this.$i18n.locale = this.lang[index].key;\n      // // 提交mutations\n      this.setLanguage(this.lang[index].key);\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;AAsCA;AACA;EACAA;EACAC;IACA;MACAC;MACAC,OACA;QACAC;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA,GACA;QACAF;QACAC;QACAC;MACA;IAEA;EACA;EACAC;IACAC;MACA;MACA;QACA;QACA;QACA;MACA;MACA;IACA;EAAA,GACAC;IACAC;EACA,GACA;EACAC,WAEA;EACAC;IACA;IACA;IACA;EAEA;EACAC,yCACAC;IACAC;MACAC;MACA;MACA;MACA;MACA;IACA;EAAA;AAEA","names":["name","data","logo","lang","title","key","icon","computed","languageIcon","mapGetters","activeLang","created","components","methods","mapMutations","handleSetLang","console"],"sourceRoot":"src/page/Merchant/components","sources":["mer-chant-header.vue"],"sourcesContent":["<template>\n    <div class=\"mer-chant-header\">\n        <div class=\"down-header\">\n            <router-link to=\"/\" class=\"left\">\n                <img :src=\"logo\" />\n            </router-link>\n\n            <div class=\"right\">\n\n                <el-dropdown @command=\"handleSetLang\" :trigger=\"'click'\">\n                    <div class=\"cn-wrap\">\n                        <img class=\"cn-img\" :src=\"languageIcon\" />\n                        <img class=\"down-img\" src=\"@/assets/image/Merchant/down.png\" />\n                    </div>\n                    <el-dropdown-menu slot=\"dropdown\">\n                        <el-dropdown-item :command=\"index\" v-for=\"(item, index) in lang\" :key=\"index\">\n                            <div class=\"lang-item\">\n                                <img :src=\"item.icon\" />\n                                {{ item.title }}\n                            </div>\n                        </el-dropdown-item>\n                    </el-dropdown-menu>\n                </el-dropdown>\n            </div>\n        </div>\n        <div class=\"content\">\n            <img src=\"@/assets/image/Merchant/image38.png\" />\n            <div class=\"content-text\">\n                <p class=\"title\">{{ $t('商户入驻协议') }}</p>\n                <p>{{ $t('招商政策全面升级诚商优质商') }}</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nimport { DropdownMenu, DropdownItem, Dropdown } from 'element-ui'\nimport { mapGetters, mapMutations } from \"vuex\";\nexport default {\n    name: 'mer-chant-header',\n    data() {\n        return {\n            logo: require(`@/assets/Argos/logo.${this.$store.state.multiItem[process.env.VUE_APP_ITEM_NAME].suffix}`),\n            lang: [\n                {\n                    title: '简体中文',\n                    key: 'cn',\n                    icon: require('@/assets/image/language/cn.png')\n                },\n                {\n                    title: 'English',\n                    key: 'en',\n                    icon: require('@/assets/image/language/usa.png')\n                },\n                {\n                    title: '繁体中文',\n                    key: 'tw',\n                    icon: require('@/assets/image/language/tw.png')\n                }\n            ],\n        }\n    },\n    computed: {\n        languageIcon() {\n            const language = this.$store.getters.language || 'tw'\n            const icon = {\n                'cn': require('@/assets/image/language/cn.png'),\n                'en': require('@/assets/image/language/usa.png'),\n                'tw': require('@/assets/image/language/tw.png')\n            }\n            return icon[language]\n        },\n        ...mapGetters({\n            activeLang: 'language'\n        })\n    },\n    created() {\n\n    },\n    components: {\n        [DropdownMenu.name]: DropdownMenu,\n        [DropdownItem.name]: DropdownItem,\n        [Dropdown.name]: Dropdown\n\n    },\n    methods: {\n        ...mapMutations(['setLanguage']),\n        handleSetLang(index) {\n            console.log(index)\n            // 设置i18n.locale 组件库会按照上面的配置使用对应的文案文件\n            this.$i18n.locale = this.lang[index].key\n            // // 提交mutations\n            this.setLanguage(this.lang[index].key)\n        },\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mer-chant-header {\n    background: #212121;\n    font-size: 14Px;\n    min-width: 1200Px;\n\n    .down-header {\n        height: 70Px;\n        width: 1200Px;\n        margin: 0 auto;\n        display: flex;\n        align-items: center;\n\n        .left {\n            flex: 1;\n            cursor: pointer;\n\n            img {\n                height: 43Px;\n            }\n        }\n\n        .right {\n            display: flex;\n            cursor: pointer;\n\n            .cn-wrap {\n                display: flex;\n                align-items: center;\n\n                .cn-img {\n                    width: 20Px;\n                    height: 20Px;\n                }\n\n                .down-img {\n                    margin-left: 5Px;\n                }\n\n            }\n\n\n        }\n    }\n\n    .content {\n        width: 1200Px;\n        margin: 0 auto;\n        position: relative;\n        padding-bottom: 100Px;\n\n        img {\n            width: 100%;\n        }\n\n        .content-text {\n            width: 58%;\n            position: absolute;\n            top: 30%;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: flex-start;\n\n            p {\n                width: 100%;\n                font-size: 24Px;\n                color: rgba(166, 166, 166, 1);\n            }\n\n            .title {\n                color: var(--main-color);\n                font-size: 48Px;\n                margin-bottom: 4Px;\n            }\n        }\n    }\n}\n\n@media screen and (max-width:500Px) {\n    .mer-chant-header {\n        min-width: 100% !important;\n        background: #212121;\n        font-size: 14Px;\n\n        .down-header {\n            width: 100% !important;\n\n            .left {\n                padding-left: 15Px !important;\n            }\n\n            .right {\n                padding-right: 15Px;\n            }\n        }\n\n        .content {\n            width: 92%;\n            margin: 0 auto;\n            position: relative;\n\n            img {\n                width: 100%;\n            }\n\n            .content-text {\n                width: 58%;\n                position: absolute;\n                top: 13%;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: flex-start;\n\n                p {\n                    width: 100%;\n                    font-size: 12Px;\n                    color: rgba(166, 166, 166, 1);\n                }\n\n                .title {\n                    color: var(--main-color);\n                    font-size: 14Px;\n                }\n            }\n        }\n    }\n}\n\n.lang-item {\n    display: flex;\n    align-items: center;\n\n    img {\n        width: 20Px;\n        height: 20Px;\n        margin-right: 5px;\n    }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}