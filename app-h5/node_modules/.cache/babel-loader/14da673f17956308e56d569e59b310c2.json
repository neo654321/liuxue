{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport _objectSpread from \"/Users/neo/Desktop/mallV2/app-h5/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/neo/Desktop/mallV2/app-h5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/neo/Desktop/mallV2/app-h5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"vant/es/number-keyboard/style\";\nimport _NumberKeyboard from \"vant/es/number-keyboard\";\nimport \"vant/es/password-input/style\";\nimport _PasswordInput from \"vant/es/password-input\";\nimport \"vant/es/dialog/style\";\nimport _Dialog from \"vant/es/dialog\";\nimport \"vant/es/overlay/style\";\nimport _Overlay from \"vant/es/overlay\";\nimport \"vant/es/uploader/style\";\nimport _Uploader from \"vant/es/uploader\";\nimport \"vant/es/tabs/style\";\nimport _Tabs from \"vant/es/tabs\";\nimport \"vant/es/tab/style\";\nimport _Tab from \"vant/es/tab\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport QRCode from 'qrcode';\nimport { session_token, shifoushzhi_zijinmima_post, shouxufeibaifenbi_post, tixian_post, tupianshangchuan_post, zhifutongdao_post, apiWithdrawBefore, apiBindAddress, apiRealTimeExchangeRates } from \"@/API/user\";\nimport { mapGetters } from 'vuex';\nimport Footer from '@/components/Footer';\nimport { isLogin, priceFormat, priceFormat8, deduplication } from '@/utils/utis';\nexport default {\n  data() {\n    return {\n      priceFormat,\n      priceFormat8,\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      data: {},\n      codes: '',\n      currentChainName: {},\n      imgUrl: '',\n      tongdao: [],\n      it: {\n        input1: '',\n        input2: ''\n      },\n      card: {\n        bankName: '',\n        bankUserName: '',\n        bankCardNo: ''\n      },\n      fileList: [],\n      shangchuanurl: '',\n      session_token: '',\n      withdraw_fee: '',\n      coinType: '',\n      value: '',\n      allowEditWithdrawAddress: false,\n      showKeyboard: true,\n      show: false,\n      bindShow: false,\n      bindData: {\n        coin: '',\n        blockchain_name: '',\n        channel_address: ''\n      },\n      blockchainNetwork: [''],\n      withdrawBefore: {},\n      linkProtocol: [],\n      linkProtocolOptions: [],\n      selectValue: '0',\n      selectCurrency: '',\n      withdrawalMethod: [],\n      currentRate: 0\n    };\n  },\n  components: {\n    Footer,\n    QRCode: QRCode,\n    [_Icon.name]: _Icon,\n    [_Tab.name]: _Tab,\n    [_Tabs.name]: _Tabs,\n    [_Uploader.name]: _Uploader,\n    [_Overlay.name]: _Overlay,\n    [_Dialog.name]: _Dialog,\n    [_PasswordInput.name]: _PasswordInput,\n    [_NumberKeyboard.name]: _NumberKeyboard\n  },\n  created() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (isLogin()) {\n                _context.next = 4;\n                break;\n              }\n              _this.$router.push('/');\n              _context.next = 8;\n              break;\n            case 4:\n              _this.$store.dispatch(\"getUserMoney\");\n              _context.next = 7;\n              return _this.requestWithdrawBefore();\n            case 7:\n              _this.zhifutongdao();\n            case 8:\n              if (sessionStorage.getItem('withdraw_price')) {\n                _this.it.input1 = sessionStorage.getItem('withdraw_price');\n                _this.it.input2 = sessionStorage.getItem('withdraw_address');\n                _this.card.bankName = sessionStorage.getItem('withdraw_bankName');\n                _this.card.bankUserName = sessionStorage.getItem('withdraw_bankUserName');\n                _this.card.bankCardNo = sessionStorage.getItem('withdraw_bankCardNo');\n                _this.selectValue = sessionStorage.getItem('withdraw_index');\n              }\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    userMoney: \"userMoney\"\n  })), {}, {\n    exchangeRateConversion() {\n      var _this$userMoney2;\n      if (!this.currentRate) return 0;\n      if (['BTC', 'ETH'].includes(this.selectCurrency)) {\n        var _this$userMoney;\n        return this.priceFormat8(((_this$userMoney = this.userMoney) === null || _this$userMoney === void 0 ? void 0 : _this$userMoney.money) / this.currentRate);\n      }\n      return this.priceFormat(((_this$userMoney2 = this.userMoney) === null || _this$userMoney2 === void 0 ? void 0 : _this$userMoney2.money) / this.currentRate);\n    }\n  }),\n  methods: {\n    // 获取实时汇率\n    requestLiveRates(symbol) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return apiRealTimeExchangeRates({\n                  symbol\n                });\n              case 2:\n                res = _context2.sent;\n                _this2.currentRate = res.price;\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    // 选择币种\n    selectCurrencyChange(val) {\n      var _this3 = this;\n      this.it.input1 = '';\n      this.blockchainNetwork = [];\n      var tempItem = this.linkProtocol.filter(function (item) {\n        return item.coin == val;\n      });\n      tempItem.forEach(function (item) {\n        _this3.blockchainNetwork.push(item.blockchain_name);\n      });\n      this.coinType = val;\n      this.currentChainName = this.blockchainNetwork[0];\n      this.requestLiveRates(val);\n      this.shouxufei();\n    },\n    requestWithdrawBefore() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return apiWithdrawBefore();\n              case 2:\n                res = _context3.sent;\n                if (!((res === null || res === void 0 ? void 0 : res.openWithdrawAddressBinding) == 0)) {\n                  _context3.next = 5;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 5:\n                _this4.allowEditWithdrawAddress = !!res.existWithdrawAddress;\n                _this4.bindShow = !res.existWithdrawAddress;\n                _this4.it.input2 = res.existWithdrawAddress;\n                _this4.blockchainNetwork = [res.chainName];\n                _this4.currentChainName = _this4.blockchainNetwork[0];\n                _this4.session_token = res.session_token;\n                _this4.coinType = res.coinType;\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    // 弹框 - 绑定按钮\n    requestHandleBind() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(_this5.bindData.coin == '')) {\n                  _context4.next = 3;\n                  break;\n                }\n                _this5.$notify(_this5.$t('请选择取款方式'));\n                return _context4.abrupt(\"return\");\n              case 3:\n                if (!(_this5.bindData.blockchain_name == '')) {\n                  _context4.next = 6;\n                  break;\n                }\n                _this5.$notify(_this5.$t('请选择链接协议'));\n                return _context4.abrupt(\"return\");\n              case 6:\n                if (!(_this5.bindData.channel_address == '')) {\n                  _context4.next = 9;\n                  break;\n                }\n                _this5.$notify(_this5.$t('请输入钱包地址'));\n                return _context4.abrupt(\"return\");\n              case 9:\n                _Toast.loading({\n                  message: _this5.$t('加载中...'),\n                  forbidClick: true\n                });\n                _context4.prev = 10;\n                _context4.next = 13;\n                return apiBindAddress(_this5.bindData);\n              case 13:\n                _this5.$notify(_this5.$t('绑定提现地址成功'), 'success');\n                _this5.bindShow = false;\n                _Toast.clear();\n                _this5.blockchainNetwork = [_this5.bindData.blockchain_name];\n                _this5.it.input2 = _this5.bindData.channel_address;\n                _this5.allowEditWithdrawAddress = true;\n                _context4.next = 24;\n                break;\n              case 21:\n                _context4.prev = 21;\n                _context4.t0 = _context4[\"catch\"](10);\n                _Toast.clear();\n              case 24:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[10, 21]]);\n      }))();\n    },\n    // 弹框 - 取款方式变更时\n    handleCoinChange(val) {\n      var tempArr = this.linkProtocol.filter(function (item) {\n        return item.coin == val;\n      });\n      this.linkProtocolOptions = tempArr.map(function (item) {\n        return _objectSpread({\n          value: item.blockchain_name,\n          label: item.blockchain_name\n        }, item);\n      });\n      this.bindData.blockchain_name = this.linkProtocolOptions[0].value;\n    },\n    shouxufei() {\n      var _this6 = this;\n      shouxufeibaifenbi_post({\n        channel: this.coinType\n      }).then(function (res) {\n        _this6.withdraw_fee = res.withdraw_fee;\n      });\n    },\n    biaodan_tijiao2() {\n      var _this$userMoney3,\n        _this7 = this;\n      if (this.it.input1.trim() === '') {\n        _Toast(this.$t('请输入金额'));\n        return;\n      }\n      if (((_this$userMoney3 = this.userMoney) === null || _this$userMoney3 === void 0 ? void 0 : _this$userMoney3.money) < this.it.input1.trim()) {\n        return _Toast(this.$t('账户余额不足'));\n      }\n      if (this.selectValue == 0) {\n        // 虚拟币\n        if (this.it.input2.trim() === '') {\n          _Toast(this.$t('请输入地址'));\n          return;\n        }\n      } else {\n        // 银行卡\n        if (this.card.bankName.trim() === '') return _Toast(this.$t('请输入开户行'));\n        if (this.card.bankUserName.trim() === '') return _Toast(this.$t('请输入姓名'));\n        if (this.card.bankCardNo.trim() === '') return _Toast(this.$t('请输入卡号'));\n      }\n      shifoushzhi_zijinmima_post({}).then(function (res) {\n        if (res.safeword == 1) {\n          _this7.show = true;\n          _this7.showKeyboard = true;\n          if (sessionStorage.getItem('withdraw_price')) {\n            sessionStorage.removeItem('withdraw_price');\n            sessionStorage.removeItem('withdraw_address');\n            sessionStorage.removeItem('withdraw_bankName');\n            sessionStorage.removeItem('withdraw_bankUserName');\n            sessionStorage.removeItem('withdraw_bankCardNo');\n            sessionStorage.removeItem('withdraw_index');\n          }\n        } else {\n          sessionStorage.setItem('withdraw_index', _this7.selectValue);\n          if (_this7.selectValue == 0) {\n            sessionStorage.setItem('withdraw_price', _this7.it.input1);\n            sessionStorage.setItem('withdraw_address', _this7.it.input2);\n          } else {\n            sessionStorage.setItem('withdraw_bankName', _this7.card.bankName);\n            sessionStorage.setItem('withdraw_bankUserName', _this7.card.bankUserName);\n            sessionStorage.setItem('withdraw_bankCardNo', _this7.card.bankCardNo);\n          }\n          _this7.$router.push({\n            path: '/FundPasswordSettings'\n          });\n        }\n      });\n    },\n    biaodan_tijiao() {\n      var _this8 = this;\n      session_token({}).then(function (res) {\n        _this8.session_token = res.session_token;\n        if (_this8.selectValue == 0) {\n          _this8.chongzhitijiao();\n        } else {\n          var params = _objectSpread(_objectSpread({}, _this8.card), {}, {\n            session_token: _this8.session_token,\n            amount: _this8.it.input1,\n            channel: 'bank',\n            safeword: _this8.value\n          });\n          tixian_post(params).then(function (res) {\n            // Toast(this.$t('提交成功'));\n            Object.keys(_this8.card).forEach(function (key) {\n              _this8.card[key] = '';\n            });\n            _this8.$router.push('/SubmitCompleted?path=withdrawRecord');\n          }).finally(function () {\n            _this8.it.input1 = '';\n            _this8.fileList = [];\n            _this8.shangchuanurl = '';\n            _this8.value = '';\n            _this8.show = false;\n          });\n        }\n      });\n    },\n    chongzhitijiao() {\n      var _this9 = this;\n      var data = {\n        'session_token': this.session_token,\n        'amount': this.it.input1,\n        'from': this.it.input2,\n        'channel': this.coinType,\n        'safeword': this.value\n      };\n      this.show = false;\n      this.value = '';\n      tixian_post(data).then(function (res) {\n        // Toast(this.$t('提交成功'));\n        _this9.it.input1 = '';\n        _this9.fileList = [];\n        _this9.shangchuanurl = '';\n        _this9.$router.push('/SubmitCompleted?path=withdrawRecord');\n      }).then();\n    },\n    tongdao_qiehuan(e) {\n      this.currentChainName = e;\n      // this.useqrcode1()\n    },\n    zhifutongdao() {\n      var _this10 = this;\n      zhifutongdao_post({}).then(function (res22) {\n        // this.code = this.$route.query.usercode\n        // this.withdrawalMethod = res22\n        var tempArr = res22.map(function (item) {\n          return {\n            label: item.coin,\n            value: item.coin\n          };\n        });\n        _this10.withdrawalMethod = deduplication(tempArr, 'value');\n        _this10.coinType = _this10.selectCurrency = _this10.withdrawalMethod[0].value;\n        _this10.linkProtocol = res22;\n        for (var i = 0; i < res22.length; i++) {\n          _this10.tongdao.push(res22[i]);\n        }\n        if (_this10.allowEditWithdrawAddress) return;\n        // this.blockchainNetwork = this.tongdao.map(item => item.blockchain_name)\n        var tempItem = _this10.linkProtocol.filter(function (item) {\n          return item.coin == _this10.selectCurrency;\n        });\n        tempItem.forEach(function (item) {\n          item.blockchain_name && _this10.blockchainNetwork.push(item.blockchain_name);\n        });\n        _this10.blockchainNetwork = _this10.blockchainNetwork.filter(function (item) {\n          return item;\n        });\n        _this10.currentChainName = _this10.blockchainNetwork[0];\n        _this10.requestLiveRates(_this10.selectCurrency);\n        _this10.shouxufei();\n        // this.bindData.coin = this.tongdao[0]\n        // this.useqrcode1()\n      });\n    },\n    afterRead(file) {\n      var _this11 = this;\n      var formData = new FormData(); //通过formdata上传\n      formData.append('file', file.file);\n      tupianshangchuan_post(formData).then(function (res) {\n        _this11.shangchuanurl = res;\n      }).catch(function (err) {\n        this.fileList = [];\n        _Toast(this.$t('添加失败'));\n      });\n    },\n    copyData(ea) {\n      var _this12 = this;\n      //如果需要回调：\n      this.$copyText(ea).then(function (e) {\n        alert(_this12.$t('复制成功'));\n      }, function (e) {\n        alert(this.$t('复制失败'));\n      });\n    },\n    copyData2(ea) {\n      //如果需要回调：\n      this.$copyText(ea).then(function (e) {\n        // alert('复制成功')\n      }, function (e) {\n        // alert('复制失败')\n      });\n    },\n    // useqrcode1() {//生成二维码\n    //     let canvas = document.getElementById('canvas')\n    //     let url = this.currentChainName.address\n    //     QRCode.toCanvas(canvas, url, function (error) {\n    //         if (error) {\n    //         } else {\n    //         }\n    //     })\n    //     this.saveImg()//保存图片\n    // },\n    baocunhaibao() {\n      var myCanvas = document.getElementsByTagName('canvas');\n      this.imgUrl = myCanvas[0].toDataURL('image/png');\n      this.getUrlBase64(this.imgUrl).then(function (base64) {\n        var link = document.createElement('a');\n        link.href = base64;\n        link.download = 'qrCode.png';\n        link.click();\n      });\n    },\n    getUrlBase64(url) {\n      return new Promise(function (resolve) {\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var img = new Image();\n        img.crossOrigin = 'Anonymous'; //允许跨域\n        img.src = url;\n        img.onload = function () {\n          canvas.height = 300;\n          canvas.width = 300;\n          ctx.drawImage(img, 0, 0, 300, 300);\n          var dataURL = canvas.toDataURL('image/png');\n          canvas = null;\n          resolve(dataURL);\n        };\n      });\n    },\n    //保存图片\n    saveImg() {\n      var myCanvas = document.getElementsByTagName('canvas');\n      this.imgUrl = myCanvas[0].toDataURL('image/png');\n    },\n    onClickLeft() {\n      if (sessionStorage.getItem('withdraw_price')) {\n        sessionStorage.removeItem('withdraw_price');\n        sessionStorage.removeItem('withdraw_address');\n        sessionStorage.removeItem('withdraw_bankName');\n        sessionStorage.removeItem('withdraw_bankUserName');\n        sessionStorage.removeItem('withdraw_bankCardNo');\n        sessionStorage.removeItem('withdraw_index');\n      }\n      this.$router.push({\n        path: '/me',\n        dir: 'left'\n      });\n      // this.$router.go(-1)\n    },\n    onClick1() {\n      this.$router.push({\n        path: '/withdrawRecord'\n      });\n    },\n    onCoinChange(val) {\n      if (val == 1) {\n        this.coinType = 'bank';\n        this.shouxufei();\n      } else {\n        this.coinType = this.selectCurrency;\n        this.shouxufei();\n      }\n      if (['SM-wholesaleShop', 'FamilyShop'].includes(this.itemName)) {\n        this.$router.push({\n          path: '/customerServiceIndex?path=customerService'\n        });\n        return;\n      }\n      this.it.input1 = '';\n    },\n    handleInput(val) {\n      var _this$userMoney4;\n      if (val > ((_this$userMoney4 = this.userMoney) === null || _this$userMoney4 === void 0 ? void 0 : _this$userMoney4.money)) {\n        var _this$userMoney5;\n        this.it.input1 = (_this$userMoney5 = this.userMoney) === null || _this$userMoney5 === void 0 ? void 0 : _this$userMoney5.money;\n        return;\n      } else {\n        this.it.input1 = this.it.input1.replace(/[^\\d.]/g, \"\"); // 非数字和小数点替换为空字符串\n        this.it.input1 = this.it.input1.replace(/\\.{2,}/g, \".\"); // 连续出现多个小数点替换为单个小数点\n        this.it.input1 = this.it.input1.replace(/^\\./g, \"\"); // 第一个字符如果是小数点则替换为空字符串\n        this.it.input1 = this.it.input1.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\"); // 将第一个小数点替换为$#$，去除所有小数点，再将$#$替换回小数点\n        if (['BTC', 'ETH'].includes(this.selectCurrency)) {\n          this.it.input1 = this.it.input1.replace(/^(\\-)*(\\d+)\\.(\\d{0,10}).*$/, \"$1$2.$3\"); // 最多允许输入10位小数\n          this.it.input1 = this.it.input1.replace(/^\\D*(\\d{0,10}(?:\\.\\d{0,10})?).*$/g, \"$1\"); // 最多允许输入10位数字\n        } else {\n          this.it.input1 = this.it.input1.replace(/^(\\-)*(\\d+)\\.(\\d{0,2}).*$/, \"$1$2.$3\"); // 最多允许输入2位小数\n          // this.it.input1 = this.it.input1.replace(/^\\D*(\\d{0,2}(?:\\.\\d{0,10})?).*$/g, \"$1\"); // 最多允许输入10位数字\n        }\n\n        // this.it.input1 = val\n      }\n    }\n  },\n  watch: {\n    value(value) {\n      if (value.length === 6) {\n        this.showKeyboard = false;\n        this.biaodan_tijiao();\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}