{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/.pnpm/@babel+runtime@7.20.7/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/.pnpm/@babel+runtime@7.20.7/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"vant/es/popup/style\";\nimport _Popup from \"vant/es/popup\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { apigetCoinList, apiSubmitRecharge, apiPhpRecharge, apiGcash2Recharge, apiGcash3Recharge, apiMayaRecharge, apiGCashPayRecharge } from '@/API/common';\nimport { session_token } from '@/API/user';\nexport default {\n  components: {\n    [_Toast.name]: _Toast,\n    [_Popup.name]: _Popup\n  },\n  data() {\n    return {\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      coinList: [],\n      max: '',\n      min: '',\n      form: {\n        currency: '',\n        price: ''\n      },\n      session_token: '',\n      btnDis: true,\n      isGcash: true,\n      showPopup: false,\n      path: ''\n    };\n  },\n  computed: {\n    payName() {\n      var _this$$route$query;\n      return ((_this$$route$query = this.$route.query) === null || _this$$route$query === void 0 ? void 0 : _this$$route$query.type) == 'Maya' ? 'Maya' : 'GCash';\n    }\n  },\n  created() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _this$$route$query2, type, min, max, res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            session_token({}).then(function (res) {\n              _this.session_token = res.session_token;\n            });\n            _this$$route$query2 = _this.$route.query, type = _this$$route$query2.type, min = _this$$route$query2.min, max = _this$$route$query2.max;\n            _this.isGcash = type != 'Bank';\n            if (!(type == 'Bank')) {\n              _context.next = 22;\n              break;\n            }\n            _Toast.loading({\n              message: _this.$t('加载中...'),\n              forbidClick: true,\n              duration: 0\n            });\n            _context.prev = 5;\n            _context.next = 8;\n            return apigetCoinList();\n          case 8:\n            res = _context.sent;\n            _this.coinList = res.filter(function (item) {\n              return item.productType == type;\n            })[0].range;\n            _this.form.currency = _this.coinList[27].bank_code;\n            _this.max = _this.coinList[27].max_amount;\n            _this.min = _this.coinList[27].min_amount;\n            _Toast.clear();\n            _context.next = 20;\n            break;\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            _Toast.clear();\n            _this.$router.back();\n          case 20:\n            _context.next = 24;\n            break;\n          case 22:\n            _this.max = max;\n            _this.min = min;\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[5, 16]]);\n    }))();\n  },\n  methods: {\n    onSubmit() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this2$$route$query, _this2$$route$query2, _window, typeToApiMap, requestFn, params, path, _window2, _path;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.$toast.loading();\n              if (!(_this2.form.price == '')) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", _this2.$notify(_this2.$t('请输入充值数量')));\n            case 3:\n              _context2.next = 5;\n              return session_token({}).then(function (res) {\n                _this2.session_token = res.session_token;\n              });\n            case 5:\n              if (!_this2.isGcash) {\n                _context2.next = 16;\n                break;\n              }\n              typeToApiMap = {\n                'GCash2.0': apiGcash2Recharge,\n                'GCash3.0': apiGcash3Recharge,\n                'Maya': apiMayaRecharge,\n                'GCash pay': apiGCashPayRecharge\n              };\n              requestFn = typeToApiMap[(_this2$$route$query = _this2.$route.query) === null || _this2$$route$query === void 0 ? void 0 : _this2$$route$query.type] || apiPhpRecharge;\n              params = {\n                amount: _this2.form.price,\n                session_token: _this2.session_token,\n                token: localStorage.getItem('token')\n              };\n              if (['GCash2.0', 'GCash3.0', 'Maya', 'GCash pay'].includes((_this2$$route$query2 = _this2.$route.query) === null || _this2$$route$query2 === void 0 ? void 0 : _this2$$route$query2.type)) {\n                params.pageUrl = window.location.href.split('#/')[0] + '#/me';\n              }\n              _context2.next = 12;\n              return requestFn(params);\n            case 12:\n              path = _context2.sent;\n              if ((_window = window) !== null && _window !== void 0 && _window.plus) {\n                plus.runtime.openURL(path);\n              } else {\n                if (_this2.isIos()) {\n                  _this2.path = path;\n                  _this2.showPopup = true;\n                } else {\n                  window.open(path);\n                }\n              }\n              _context2.next = 20;\n              break;\n            case 16:\n              _context2.next = 18;\n              return apiSubmitRecharge({\n                amount: _this2.form.price,\n                frenchCurrency: _this2.form.currency,\n                session_token: _this2.session_token\n              });\n            case 18:\n              _path = _context2.sent;\n              if ((_window2 = window) !== null && _window2 !== void 0 && _window2.plus) {\n                plus.runtime.openURL(_path);\n              } else {\n                if (_this2.isIos()) {\n                  _this2.path = _path;\n                  _this2.showPopup = true;\n                } else {\n                  window.open(_path);\n                }\n              }\n            case 20:\n              _this2.$toast.clear();\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    // 判断是否是IOS\n    isIos() {\n      var u = navigator.userAgent;\n      return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n    },\n    handleChange(val) {\n      this.form.price = '';\n      var tempArr = this.coinList.filter(function (item) {\n        return item.bank_code == val;\n      });\n      this.max = tempArr[0].max_amount;\n      this.min = tempArr[0].min_amount;\n    },\n    // 申请金额不能大于最大值\n    handleInput() {\n      this.form.price = this.form.price.replace(/[^\\d.]/g, \"\"); // 非数字和小数点替换为空字符串\n      this.form.price = this.form.price.replace(/\\.{2,}/g, \".\"); // 连续出现多个小数点替换为单个小数点\n      this.form.price = this.form.price.replace(/^\\./g, \"\"); // 第一个字符如果是小数点则替换为空字符串\n      this.form.price = this.form.price.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\"); // 将第一个小数点替换为$#$，去除所有小数点，再将$#$替换回小数点\n      this.form.price = this.form.price.replace(/^(\\-)*(\\d+)\\.(\\d{0,2}).*$/, \"$1$2.$3\"); // 最多允许输入2位小数\n      if (this.form.price > this.max) {\n        this.form.price = this.max;\n      } else if (this.form.price < 1) {\n        this.form.price = '';\n      }\n      this.btnDis = this.form.price < this.min;\n    },\n    // 申请金额不能小于最小值\n    handleInputChange() {\n      if (this.form.price < this.min) {\n        this.form.price = '';\n        this.$notify(\"\".concat(this.$t('申请金额不能小于')).concat(this.min));\n        return;\n      }\n      this.form.price = Number(this.form.price).toFixed(2);\n    },\n    // 查询Gcash最大最小值\n    handleGcashQuery(params) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return apigetCoinList(params);\n            case 2:\n              data = _context3.sent;\n              return _context3.abrupt(\"return\", data[0]);\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    handleAccess() {\n      this.showPopup = false;\n      window.open(this.path);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;AAsCA;AACA;AAEA;EACAA;IACA;IACA;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MAAA;MACA;IACA;EACA;EACAC;IAAA;IAAA;MAAA;MAAA;QAAA;UAAA;YACAP;cACA;YACA;YAAA,sBACA;YACA;YAAA,MAGAQ;cAAA;cAAA;YAAA;YACA;cACAC;cACAC;cACAC;YACA;YAAA;YAAA;YAAA,OAEAC;UAAA;YAAAC;YACA;cAAA;YAAA;YACA;YACA;YACA;YACA;YAAA;YAAA;UAAA;YAAA;YAAA;YAEA;YACA;UAAA;YAAA;YAAA;UAAA;YAGA;YACA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAEA;EACAC;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cACA;cAAA,MACA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;cAAA,OACAf;gBACA;cACA;YAAA;cAAA,KACA;gBAAA;gBAAA;cAAA;cACAgB;gBACA;gBACA;gBACA;gBACA;cACA;cACAC;cAEAC;gBACAC;gBACAnB;gBACAoB;cACA;cACA;gBACAF;cACA;cAAA;cAAA,OACAD;YAAA;cAAAb;cACA;gBACAiB;cACA;gBACA;kBACA;kBACA;gBACA;kBACAC;gBACA;cACA;cAAA;cAAA;YAAA;cAAA;cAAA,OAEAC;gBACAJ;gBACAK;gBACAxB;cACA;YAAA;cAJAI;cAKA;gBACAiB;cACA;gBAEA;kBACA;kBACA;gBACA;kBACAC;gBACA;cACA;YAAA;cAEA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAEA;IACA;IACAG;MACA;MACA;IACA;IAEAC;MACA;MACA;QAAA;MAAA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;IACA;IACA;IACAC;MACA;QACA;QACA;QACA;MACA;MACA;IACA;IACA;IACAC;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACAjB;YAAA;cAAApB;cAAA,kCACAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAsC;MACA;MACAR;IACA;EACA;AACA","names":["components","data","itemName","coinList","max","min","form","currency","price","session_token","btnDis","isGcash","showPopup","path","computed","payName","created","type","message","forbidClick","duration","apigetCoinList","res","methods","onSubmit","typeToApiMap","requestFn","params","amount","token","plus","window","apiSubmitRecharge","frenchCurrency","isIos","handleChange","handleInput","handleInputChange","handleGcashQuery","handleAccess"],"sourceRoot":"src/page/recharge/bankCard","sources":["index.vue"],"sourcesContent":["<template>\n    <div class=\"bank_card\">\n        <van-nav-bar safe-area-inset-top fixed :title=\"itemName == 'Hive' ? $t('加值') : $t('充值')\" left-arrow\n            @click-left=\"$router.push({ path: '/rechargeList', dir: 'left' })\" :right-text=\"$t('记录')\"\n            @click-right=\"$router.push({ path: '/rechargeRecord' })\" />\n        <div style=\"width: 100%;\" class=\"h46\"></div>\n        <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n            <el-form-item :label=\"$t('选择币种')\" v-if=\"!isGcash\">\n                <el-select v-model=\"form.currency\" :placeholder=\"$t('请选择币种')\" filterable :no-match-text=\"$t('无匹配数据')\"\n                    @change=\"handleChange\">\n                    <el-option v-for=\"item of coinList\" :key=\"item.bank_code\" :label=\"item.bank_code\"\n                        :value=\"item.bank_code\"></el-option>\n                </el-select>\n            </el-form-item>\n            <el-form-item :label=\"$t('充值金额')\">\n                <el-input type=\"number\" step=\"0.01\" v-model=\"form.price\" :placeholder=\"`${min}-${max}`\" @input=\"handleInput\"\n                    @change=\"handleInputChange\" clearable></el-input>\n            </el-form-item>\n        </el-form>\n        <div class=\"btn\">\n            <van-button block type=\"primary\" :disabled=\"btnDis\" @click=\"onSubmit\">{{ $t('确认') }}</van-button>\n        </div>\n        <van-popup v-model=\"showPopup\">\n            <div class=\"popup_wrap\">\n                <div class=\"title\">\n                    {{ $t('请前往') }}{{ payName }}，{{ $t('继续完成支付') }}\n                </div>\n                <div class=\"path\">\n                    {{ path }}\n                </div>\n                <div class=\"btn\">\n                    <van-button type=\"primary\" @click=\"handleAccess\">{{ $t('继续访问') }}</van-button>\n                </div>\n            </div>\n        </van-popup>\n    </div>\n</template>\n<script>\nimport { apigetCoinList, apiSubmitRecharge, apiPhpRecharge, apiGcash2Recharge, apiGcash3Recharge, apiMayaRecharge, apiGCashPayRecharge } from '@/API/common'\nimport { session_token } from '@/API/user'\nimport { Toast, Popup } from 'vant'\nexport default {\n    components: {\n        [Toast.name]: Toast,\n        [Popup.name]: Popup,\n    },\n    data() {\n        return {\n            itemName: process.env.VUE_APP_ITEM_NAME,\n            coinList: [],\n            max: '',\n            min: '',\n            form: {\n                currency: '',\n                price: ''\n            },\n            session_token: '',\n            btnDis: true,\n            isGcash: true,\n            showPopup: false,\n            path: ''\n        }\n    },\n    computed: {\n        payName() {\n            return this.$route.query?.type == 'Maya' ? 'Maya' : 'GCash'\n        }\n    },\n    async created() {\n        session_token({}).then(res => {\n            this.session_token = res.session_token\n        })\n        const { type, min, max } = this.$route.query\n        this.isGcash = type != 'Bank'\n\n        \n        if (type == 'Bank') {\n            Toast.loading({\n                message: this.$t('加载中...'),\n                forbidClick: true,\n                duration: 0\n            });\n            try {\n                const res = await apigetCoinList()\n                this.coinList = res.filter(item => item.productType == type)[0].range\n                this.form.currency = this.coinList[27].bank_code\n                this.max = this.coinList[27].max_amount\n                this.min = this.coinList[27].min_amount\n                Toast.clear()\n            } catch (error) {\n                Toast.clear()\n                this.$router.back()\n            }\n        } else {\n            this.max = max\n            this.min = min\n        }\n    },\n    methods: {\n        async onSubmit() {\n            this.$toast.loading()\n            if (this.form.price == '') return this.$notify(this.$t('请输入充值数量'))\n            await session_token({}).then(res => {\n                this.session_token = res.session_token\n            })\n            if (this.isGcash) {\n                const typeToApiMap = {\n                    'GCash2.0': apiGcash2Recharge,\n                    'GCash3.0': apiGcash3Recharge,\n                    'Maya': apiMayaRecharge,\n                    'GCash pay': apiGCashPayRecharge,\n                };\n                const requestFn = typeToApiMap[this.$route.query?.type] || apiPhpRecharge;\n\n                const params = {\n                    amount: this.form.price,\n                    session_token: this.session_token,\n                    token: localStorage.getItem('token'),\n                }\n                if (['GCash2.0', 'GCash3.0', 'Maya', 'GCash pay'].includes(this.$route.query?.type)) {\n                    params.pageUrl = window.location.href.split('#/')[0] + '#/me'\n                }\n                const path = await requestFn(params)\n                if (window?.plus) {\n                    plus.runtime.openURL(path)\n                } else {\n                    if (this.isIos()) {\n                        this.path = path\n                        this.showPopup = true\n                    } else {\n                        window.open(path)\n                    }\n                }\n            } else {\n                const path = await apiSubmitRecharge({\n                    amount: this.form.price,\n                    frenchCurrency: this.form.currency,\n                    session_token: this.session_token\n                })\n                if (window?.plus) {\n                    plus.runtime.openURL(path)\n                } else {\n\n                    if (this.isIos()) {\n                        this.path = path\n                        this.showPopup = true\n                    } else {\n                        window.open(path)\n                    }\n                }\n            }\n            this.$toast.clear()\n\n        },\n        // 判断是否是IOS\n        isIos() {\n            const u = navigator.userAgent;\n            return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\n        },\n\n        handleChange(val) {\n            this.form.price = ''\n            const tempArr = this.coinList.filter(item => item.bank_code == val)\n            this.max = tempArr[0].max_amount\n            this.min = tempArr[0].min_amount\n        },\n        // 申请金额不能大于最大值\n        handleInput() {\n            this.form.price = this.form.price.replace(/[^\\d.]/g, \"\"); // 非数字和小数点替换为空字符串\n            this.form.price = this.form.price.replace(/\\.{2,}/g, \".\"); // 连续出现多个小数点替换为单个小数点\n            this.form.price = this.form.price.replace(/^\\./g, \"\"); // 第一个字符如果是小数点则替换为空字符串\n            this.form.price = this.form.price.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\"); // 将第一个小数点替换为$#$，去除所有小数点，再将$#$替换回小数点\n            this.form.price = this.form.price.replace(/^(\\-)*(\\d+)\\.(\\d{0,2}).*$/, \"$1$2.$3\"); // 最多允许输入2位小数\n            if (this.form.price > this.max) {\n                this.form.price = this.max\n            } else if (this.form.price < 1) {\n                this.form.price = ''\n            }\n            this.btnDis = this.form.price < this.min\n        },\n        // 申请金额不能小于最小值\n        handleInputChange() {\n            if (this.form.price < this.min) {\n                this.form.price = ''\n                this.$notify(`${this.$t('申请金额不能小于')}${this.min}`)\n                return\n            }\n            this.form.price = Number(this.form.price).toFixed(2)\n        },\n        // 查询Gcash最大最小值\n        async handleGcashQuery(params) {\n            const data = await apigetCoinList(params)\n            return data[0]\n        },\n        handleAccess() {\n            this.showPopup = false\n            window.open(this.path)\n        }\n    }\n}\n\n\n</script>\n\n\n<style lang=\"scss\" scoped>\n.popup_wrap {\n    width: 86vw;\n    padding: 15px;\n    overflow: hidden;\n\n    .title {\n        font-size: 14px;\n        text-align: left;\n        line-height: 28px;\n    }\n\n    .path {\n        font-size: 12px;\n        text-align: left;\n        line-height: 28px;\n        color: #999999;\n        border-bottom: 1px solid #E5E5E5;\n        overflow: hidden;\n\n    }\n\n    .btn {\n        margin-top: 15px;\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n    }\n}\n\n.btn {\n    padding: 0 15px;\n}\n\n:deep(.el-form) {\n    padding: 0 15px;\n}\n\n:deep(.el-form-item) {\n    display: flex;\n    flex-direction: column;\n\n    .el-form-item__content {\n        margin: 0 !important;\n    }\n}\n\n:deep(.van-button) {\n    background: var(--main-color);\n}\n\n:deep(.el-form-item__label) {\n    width: 100% !important;\n    text-align: start !important;\n}\n\n:deep(.el-select) {\n    width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}