{"ast":null,"code":"require(\"core-js/modules/es.array-buffer.slice.js\");\nrequire(\"core-js/modules/es.typed-array.uint8-array.js\");\nrequire(\"core-js/modules/es.typed-array.at.js\");\nrequire(\"core-js/modules/es.typed-array.fill.js\");\nrequire(\"core-js/modules/es.typed-array.find-last.js\");\nrequire(\"core-js/modules/es.typed-array.find-last-index.js\");\nrequire(\"core-js/modules/es.typed-array.set.js\");\nrequire(\"core-js/modules/es.typed-array.sort.js\");\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nvar encodeUtf8 = require('encode-utf8');\nvar Mode = require('./mode');\nfunction ByteData(data) {\n  this.mode = Mode.BYTE;\n  if (typeof data === 'string') {\n    data = encodeUtf8(data);\n  }\n  this.data = new Uint8Array(data);\n}\nByteData.getBitsLength = function getBitsLength(length) {\n  return length * 8;\n};\nByteData.prototype.getLength = function getLength() {\n  return this.data.length;\n};\nByteData.prototype.getBitsLength = function getBitsLength() {\n  return ByteData.getBitsLength(this.data.length);\n};\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8);\n  }\n};\nmodule.exports = ByteData;","map":null,"metadata":{},"sourceType":"script"}