{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport _objectSpread from \"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/.pnpm/@babel+runtime@7.20.7/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/.pnpm/@babel+runtime@7.20.7/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/neo/Desktop/node/liuxue/app-h5/node_modules/.pnpm/@babel+runtime@7.20.7/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"vant/es/number-keyboard/style\";\nimport _NumberKeyboard from \"vant/es/number-keyboard\";\nimport \"vant/es/password-input/style\";\nimport _PasswordInput from \"vant/es/password-input\";\nimport \"vant/es/dialog/style\";\nimport _Dialog from \"vant/es/dialog\";\nimport \"vant/es/overlay/style\";\nimport _Overlay from \"vant/es/overlay\";\nimport \"vant/es/uploader/style\";\nimport _Uploader from \"vant/es/uploader\";\nimport \"vant/es/tabs/style\";\nimport _Tabs from \"vant/es/tabs\";\nimport \"vant/es/tab/style\";\nimport _Tab from \"vant/es/tab\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport QRCode from 'qrcode';\nimport { session_token, shifoushzhi_zijinmima_post, shouxufeibaifenbi_post, tixian_post, tupianshangchuan_post, zhifutongdao_post, apiWithdrawBefore, apiBindAddress, apiRealTimeExchangeRates } from \"@/API/user\";\nimport { mapGetters } from 'vuex';\nimport Footer from '@/components/Footer';\nimport { isLogin, priceFormat, priceFormat8, deduplication } from '@/utils/utis';\nexport default {\n  data() {\n    return {\n      priceFormat,\n      priceFormat8,\n      itemName: process.env.VUE_APP_ITEM_NAME,\n      data: {},\n      codes: '',\n      currentChainName: {},\n      imgUrl: '',\n      tongdao: [],\n      it: {\n        input1: '',\n        input2: ''\n      },\n      card: {\n        bankName: '',\n        bankUserName: '',\n        bankCardNo: ''\n      },\n      fileList: [],\n      shangchuanurl: '',\n      session_token: '',\n      withdraw_fee: '',\n      coinType: '',\n      value: '',\n      allowEditWithdrawAddress: false,\n      showKeyboard: true,\n      show: false,\n      bindShow: false,\n      bindData: {\n        coin: '',\n        blockchain_name: '',\n        channel_address: ''\n      },\n      blockchainNetwork: [''],\n      withdrawBefore: {},\n      linkProtocol: [],\n      linkProtocolOptions: [],\n      selectValue: '0',\n      selectCurrency: '',\n      withdrawalMethod: [],\n      currentRate: 0\n    };\n  },\n  components: {\n    Footer,\n    QRCode: QRCode,\n    [_Icon.name]: _Icon,\n    [_Tab.name]: _Tab,\n    [_Tabs.name]: _Tabs,\n    [_Uploader.name]: _Uploader,\n    [_Overlay.name]: _Overlay,\n    [_Dialog.name]: _Dialog,\n    [_PasswordInput.name]: _PasswordInput,\n    [_NumberKeyboard.name]: _NumberKeyboard\n  },\n  created() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (isLogin()) {\n              _context.next = 4;\n              break;\n            }\n            _this.$router.push('/');\n            _context.next = 8;\n            break;\n          case 4:\n            _this.$store.dispatch(\"getUserMoney\");\n            _context.next = 7;\n            return _this.requestWithdrawBefore();\n          case 7:\n            _this.zhifutongdao();\n          case 8:\n            if (sessionStorage.getItem('withdraw_price')) {\n              _this.it.input1 = sessionStorage.getItem('withdraw_price');\n              _this.it.input2 = sessionStorage.getItem('withdraw_address');\n              _this.card.bankName = sessionStorage.getItem('withdraw_bankName');\n              _this.card.bankUserName = sessionStorage.getItem('withdraw_bankUserName');\n              _this.card.bankCardNo = sessionStorage.getItem('withdraw_bankCardNo');\n              _this.selectValue = sessionStorage.getItem('withdraw_index');\n            }\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters({\n    userMoney: \"userMoney\"\n  })), {}, {\n    exchangeRateConversion() {\n      var _this$userMoney2;\n      if (!this.currentRate) return 0;\n      if (['BTC', 'ETH'].includes(this.selectCurrency)) {\n        var _this$userMoney;\n        return this.priceFormat8(((_this$userMoney = this.userMoney) === null || _this$userMoney === void 0 ? void 0 : _this$userMoney.money) / this.currentRate);\n      }\n      return this.priceFormat(((_this$userMoney2 = this.userMoney) === null || _this$userMoney2 === void 0 ? void 0 : _this$userMoney2.money) / this.currentRate);\n    }\n  }),\n  methods: {\n    // 获取实时汇率\n    requestLiveRates(symbol) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return apiRealTimeExchangeRates({\n                symbol\n              });\n            case 2:\n              res = _context2.sent;\n              _this2.currentRate = res.price;\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    // 选择币种\n    selectCurrencyChange(val) {\n      var _this3 = this;\n      this.it.input1 = '';\n      this.blockchainNetwork = [];\n      var tempItem = this.linkProtocol.filter(function (item) {\n        return item.coin == val;\n      });\n      tempItem.forEach(function (item) {\n        _this3.blockchainNetwork.push(item.blockchain_name);\n      });\n      this.coinType = val;\n      this.currentChainName = this.blockchainNetwork[0];\n      this.requestLiveRates(val);\n      this.shouxufei();\n    },\n    requestWithdrawBefore() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return apiWithdrawBefore();\n            case 2:\n              res = _context3.sent;\n              if (!((res === null || res === void 0 ? void 0 : res.openWithdrawAddressBinding) == 0)) {\n                _context3.next = 5;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 5:\n              _this4.allowEditWithdrawAddress = !!res.existWithdrawAddress;\n              _this4.bindShow = !res.existWithdrawAddress;\n              _this4.it.input2 = res.existWithdrawAddress;\n              _this4.blockchainNetwork = [res.chainName];\n              _this4.currentChainName = _this4.blockchainNetwork[0];\n              _this4.session_token = res.session_token;\n              _this4.coinType = res.coinType;\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    // 弹框 - 绑定按钮\n    requestHandleBind() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(_this5.bindData.coin == '')) {\n                _context4.next = 3;\n                break;\n              }\n              _this5.$notify(_this5.$t('请选择取款方式'));\n              return _context4.abrupt(\"return\");\n            case 3:\n              if (!(_this5.bindData.blockchain_name == '')) {\n                _context4.next = 6;\n                break;\n              }\n              _this5.$notify(_this5.$t('请选择链接协议'));\n              return _context4.abrupt(\"return\");\n            case 6:\n              if (!(_this5.bindData.channel_address == '')) {\n                _context4.next = 9;\n                break;\n              }\n              _this5.$notify(_this5.$t('请输入钱包地址'));\n              return _context4.abrupt(\"return\");\n            case 9:\n              _Toast.loading({\n                message: _this5.$t('加载中...'),\n                forbidClick: true\n              });\n              _context4.prev = 10;\n              _context4.next = 13;\n              return apiBindAddress(_this5.bindData);\n            case 13:\n              _this5.$notify(_this5.$t('绑定提现地址成功'), 'success');\n              _this5.bindShow = false;\n              _Toast.clear();\n              _this5.blockchainNetwork = [_this5.bindData.blockchain_name];\n              _this5.it.input2 = _this5.bindData.channel_address;\n              _this5.allowEditWithdrawAddress = true;\n              _context4.next = 24;\n              break;\n            case 21:\n              _context4.prev = 21;\n              _context4.t0 = _context4[\"catch\"](10);\n              _Toast.clear();\n            case 24:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[10, 21]]);\n      }))();\n    },\n    // 弹框 - 取款方式变更时\n    handleCoinChange(val) {\n      var tempArr = this.linkProtocol.filter(function (item) {\n        return item.coin == val;\n      });\n      this.linkProtocolOptions = tempArr.map(function (item) {\n        return _objectSpread({\n          value: item.blockchain_name,\n          label: item.blockchain_name\n        }, item);\n      });\n      this.bindData.blockchain_name = this.linkProtocolOptions[0].value;\n    },\n    shouxufei() {\n      var _this6 = this;\n      shouxufeibaifenbi_post({\n        channel: this.coinType\n      }).then(function (res) {\n        _this6.withdraw_fee = res.withdraw_fee;\n      });\n    },\n    biaodan_tijiao2() {\n      var _this$userMoney3,\n        _this7 = this;\n      if (this.it.input1.trim() === '') {\n        _Toast(this.$t('请输入金额'));\n        return;\n      }\n      if (((_this$userMoney3 = this.userMoney) === null || _this$userMoney3 === void 0 ? void 0 : _this$userMoney3.money) < this.it.input1.trim()) {\n        return _Toast(this.$t('账户余额不足'));\n      }\n      if (this.selectValue == 0) {\n        // 虚拟币\n        if (this.it.input2.trim() === '') {\n          _Toast(this.$t('请输入地址'));\n          return;\n        }\n      } else {\n        // 银行卡\n        if (this.card.bankName.trim() === '') return _Toast(this.$t('请输入开户行'));\n        if (this.card.bankUserName.trim() === '') return _Toast(this.$t('请输入姓名'));\n        if (this.card.bankCardNo.trim() === '') return _Toast(this.$t('请输入卡号'));\n      }\n      shifoushzhi_zijinmima_post({}).then(function (res) {\n        if (res.safeword == 1) {\n          _this7.show = true;\n          _this7.showKeyboard = true;\n          if (sessionStorage.getItem('withdraw_price')) {\n            sessionStorage.removeItem('withdraw_price');\n            sessionStorage.removeItem('withdraw_address');\n            sessionStorage.removeItem('withdraw_bankName');\n            sessionStorage.removeItem('withdraw_bankUserName');\n            sessionStorage.removeItem('withdraw_bankCardNo');\n            sessionStorage.removeItem('withdraw_index');\n          }\n        } else {\n          sessionStorage.setItem('withdraw_index', _this7.selectValue);\n          if (_this7.selectValue == 0) {\n            sessionStorage.setItem('withdraw_price', _this7.it.input1);\n            sessionStorage.setItem('withdraw_address', _this7.it.input2);\n          } else {\n            sessionStorage.setItem('withdraw_bankName', _this7.card.bankName);\n            sessionStorage.setItem('withdraw_bankUserName', _this7.card.bankUserName);\n            sessionStorage.setItem('withdraw_bankCardNo', _this7.card.bankCardNo);\n          }\n          _this7.$router.push({\n            path: '/FundPasswordSettings'\n          });\n        }\n      });\n    },\n    biaodan_tijiao() {\n      var _this8 = this;\n      session_token({}).then(function (res) {\n        _this8.session_token = res.session_token;\n        if (_this8.selectValue == 0) {\n          _this8.chongzhitijiao();\n        } else {\n          var params = _objectSpread(_objectSpread({}, _this8.card), {}, {\n            session_token: _this8.session_token,\n            amount: _this8.it.input1,\n            channel: 'bank',\n            safeword: _this8.value\n          });\n          tixian_post(params).then(function (res) {\n            // Toast(this.$t('提交成功'));\n            Object.keys(_this8.card).forEach(function (key) {\n              _this8.card[key] = '';\n            });\n            _this8.$router.push('/SubmitCompleted?path=withdrawRecord');\n          }).finally(function () {\n            _this8.it.input1 = '';\n            _this8.fileList = [];\n            _this8.shangchuanurl = '';\n            _this8.value = '';\n            _this8.show = false;\n          });\n        }\n      });\n    },\n    chongzhitijiao() {\n      var _this9 = this;\n      var data = {\n        'session_token': this.session_token,\n        'amount': this.it.input1,\n        'from': this.it.input2,\n        'channel': this.coinType,\n        'safeword': this.value\n      };\n      this.show = false;\n      this.value = '';\n      tixian_post(data).then(function (res) {\n        // Toast(this.$t('提交成功'));\n        _this9.it.input1 = '';\n        _this9.fileList = [];\n        _this9.shangchuanurl = '';\n        _this9.$router.push('/SubmitCompleted?path=withdrawRecord');\n      }).then();\n    },\n    tongdao_qiehuan(e) {\n      this.currentChainName = e;\n      // this.useqrcode1()\n    },\n\n    zhifutongdao() {\n      var _this10 = this;\n      zhifutongdao_post({}).then(function (res22) {\n        // this.code = this.$route.query.usercode\n        // this.withdrawalMethod = res22\n\n        res22 = res22.filter(function (item) {\n          return item.coin != \"BTC\";\n        });\n        var tempArr = res22.map(function (item) {\n          return {\n            label: item.coin,\n            value: item.coin\n          };\n        });\n        _this10.withdrawalMethod = deduplication(tempArr, 'value');\n        _this10.coinType = _this10.selectCurrency = _this10.withdrawalMethod[0].value;\n        _this10.linkProtocol = res22;\n        for (var i = 0; i < res22.length; i++) {\n          _this10.tongdao.push(res22[i]);\n        }\n        if (_this10.allowEditWithdrawAddress) return;\n        // this.blockchainNetwork = this.tongdao.map(item => item.blockchain_name)\n        var tempItem = _this10.linkProtocol.filter(function (item) {\n          return item.coin == _this10.selectCurrency;\n        });\n        tempItem.forEach(function (item) {\n          item.blockchain_name && _this10.blockchainNetwork.push(item.blockchain_name);\n        });\n        _this10.blockchainNetwork = _this10.blockchainNetwork.filter(function (item) {\n          return item;\n        });\n        _this10.currentChainName = _this10.blockchainNetwork[0];\n        _this10.requestLiveRates(_this10.selectCurrency);\n        _this10.shouxufei();\n        // this.bindData.coin = this.tongdao[0]\n        // this.useqrcode1()\n      });\n    },\n\n    afterRead(file) {\n      var _this11 = this;\n      var formData = new FormData(); //通过formdata上传\n      formData.append('file', file.file);\n      tupianshangchuan_post(formData).then(function (res) {\n        _this11.shangchuanurl = res;\n      }).catch(function (err) {\n        this.fileList = [];\n        _Toast(this.$t('添加失败'));\n      });\n    },\n    copyData(ea) {\n      var _this12 = this;\n      //如果需要回调：\n      this.$copyText(ea).then(function (e) {\n        alert(_this12.$t('复制成功'));\n      }, function (e) {\n        alert(this.$t('复制失败'));\n      });\n    },\n    copyData2(ea) {\n      //如果需要回调：\n      this.$copyText(ea).then(function (e) {\n        // alert('复制成功')\n      }, function (e) {\n        // alert('复制失败')\n      });\n    },\n    // useqrcode1() {//生成二维码\n    //     let canvas = document.getElementById('canvas')\n    //     let url = this.currentChainName.address\n    //     QRCode.toCanvas(canvas, url, function (error) {\n    //         if (error) {\n    //         } else {\n    //         }\n    //     })\n    //     this.saveImg()//保存图片\n    // },\n    baocunhaibao() {\n      var myCanvas = document.getElementsByTagName('canvas');\n      this.imgUrl = myCanvas[0].toDataURL('image/png');\n      this.getUrlBase64(this.imgUrl).then(function (base64) {\n        var link = document.createElement('a');\n        link.href = base64;\n        link.download = 'qrCode.png';\n        link.click();\n      });\n    },\n    getUrlBase64(url) {\n      return new Promise(function (resolve) {\n        var canvas = document.createElement('canvas');\n        var ctx = canvas.getContext('2d');\n        var img = new Image();\n        img.crossOrigin = 'Anonymous'; //允许跨域\n        img.src = url;\n        img.onload = function () {\n          canvas.height = 300;\n          canvas.width = 300;\n          ctx.drawImage(img, 0, 0, 300, 300);\n          var dataURL = canvas.toDataURL('image/png');\n          canvas = null;\n          resolve(dataURL);\n        };\n      });\n    },\n    //保存图片\n    saveImg() {\n      var myCanvas = document.getElementsByTagName('canvas');\n      this.imgUrl = myCanvas[0].toDataURL('image/png');\n    },\n    onClickLeft() {\n      if (sessionStorage.getItem('withdraw_price')) {\n        sessionStorage.removeItem('withdraw_price');\n        sessionStorage.removeItem('withdraw_address');\n        sessionStorage.removeItem('withdraw_bankName');\n        sessionStorage.removeItem('withdraw_bankUserName');\n        sessionStorage.removeItem('withdraw_bankCardNo');\n        sessionStorage.removeItem('withdraw_index');\n      }\n      this.$router.push({\n        path: '/me',\n        dir: 'left'\n      });\n      // this.$router.go(-1)\n    },\n\n    onClick1() {\n      this.$router.push({\n        path: '/withdrawRecord'\n      });\n    },\n    onCoinChange(val) {\n      if (val == 1) {\n        this.coinType = 'bank';\n        this.shouxufei();\n      } else {\n        this.coinType = this.selectCurrency;\n        this.shouxufei();\n      }\n      if (['SM-wholesaleShop', 'FamilyShop'].includes(this.itemName)) {\n        this.$router.push({\n          path: '/customerServiceIndex?path=customerService'\n        });\n        return;\n      }\n      this.it.input1 = '';\n    },\n    handleInput(val) {\n      var _this$userMoney4;\n      if (val > ((_this$userMoney4 = this.userMoney) === null || _this$userMoney4 === void 0 ? void 0 : _this$userMoney4.money)) {\n        var _this$userMoney5;\n        this.it.input1 = (_this$userMoney5 = this.userMoney) === null || _this$userMoney5 === void 0 ? void 0 : _this$userMoney5.money;\n        return;\n      } else {\n        this.it.input1 = this.it.input1.replace(/[^\\d.]/g, \"\"); // 非数字和小数点替换为空字符串\n        this.it.input1 = this.it.input1.replace(/\\.{2,}/g, \".\"); // 连续出现多个小数点替换为单个小数点\n        this.it.input1 = this.it.input1.replace(/^\\./g, \"\"); // 第一个字符如果是小数点则替换为空字符串\n        this.it.input1 = this.it.input1.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\"); // 将第一个小数点替换为$#$，去除所有小数点，再将$#$替换回小数点\n        if (['BTC', 'ETH'].includes(this.selectCurrency)) {\n          this.it.input1 = this.it.input1.replace(/^(\\-)*(\\d+)\\.(\\d{0,10}).*$/, \"$1$2.$3\"); // 最多允许输入10位小数\n          this.it.input1 = this.it.input1.replace(/^\\D*(\\d{0,10}(?:\\.\\d{0,10})?).*$/g, \"$1\"); // 最多允许输入10位数字\n        } else {\n          this.it.input1 = this.it.input1.replace(/^(\\-)*(\\d+)\\.(\\d{0,2}).*$/, \"$1$2.$3\"); // 最多允许输入2位小数\n          // this.it.input1 = this.it.input1.replace(/^\\D*(\\d{0,2}(?:\\.\\d{0,10})?).*$/g, \"$1\"); // 最多允许输入10位数字\n        }\n\n        // this.it.input1 = val\n      }\n    }\n  },\n\n  watch: {\n    value(value) {\n      if (value.length === 6) {\n        this.showKeyboard = false;\n        this.biaodan_tijiao();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AAEA,SACAA,2CACAC,qCACAC,uBACAC,mBACAC,mBACAC,gBACAC,gCACA;AACA;AACA;AACA;AACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAH;MACAI;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAvB;MACAwB;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EAEAC;IACAC;IACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;EACAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,IACAC;cAAA;cAAA;YAAA;YACA;YAAA;YAAA;UAAA;YAEA;YAAA;YAAA,OACA;UAAA;YACA;UAAA;YAEA;cACA;cACA;cACA;cACA;cACA;cACA;YACA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACA;EACAC,0CACAC;IACAC;EACA;IACAC;MAAA;MACA;MACA;QAAA;QACA;MACA;MACA;IACA;EAAA,EACA;EACAC;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACA/C;gBAAAgD;cAAA;YAAA;cAAAC;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACA;IACAC;MAAA;MACA;MACA;MACA;QAAA;MAAA;MACAC;QACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACAtD;YAAA;cAAAmD;cAAA,MAMA;gBAAA;gBAAA;cAAA;cAAA;YAAA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACA;IACAI;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,MACA;gBAAA;gBAAA;cAAA;cACA;cAAA;YAAA;cAAA,MAGA;gBAAA;gBAAA;cAAA;cACA;cAAA;YAAA;cAAA,MAGA;gBAAA;gBAAA;cAAA;cACA;cAAA;YAAA;cAGA;gBACAC;gBACAC;cACA;cAAA;cAAA;cAAA,OAEAxD;YAAA;cACA;cACA;cACA;cACA;cACA;cACA;cAAA;cAAA;YAAA;cAAA;cAAA;cAEA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAEA;IACA;IACAyD;MAEA;QAAA;MAAA;MACA;QACA;UACApC;UACAqC;QAAA,GACAC;MAEA;MACA;IACA;IACAC;MAAA;MACAhE;QACAiE;MACA;QACA;MACA;IACA;IACAC;MAAA;QAAA;MACA;QACA;QACA;MACA;MACA;QACA;MACA;MACA;QACA;QACA;UACA;UACA;QACA;MACA;QACA;QACA;QACA;QACA;MACA;MACAC;QACA;UACA;UACA;UACA;YACAC;YACAA;YACAA;YACAA;YACAA;YACAA;UACA;QACA;UACAA;UACA;YACAA;YACAA;UACA;YACAA;YACAA;YACAA;UACA;UAGA;YAAAC;UAAA;QACA;MACA;IAEA;IACAC;MAAA;MACAvE;QACA;QAEA;UACA;QACA;UACA,6CACA;YACAA;YACAwE;YACAN;YACAO;UAAA,EACA;UACAC;YACA;YACAC;cACA;YACA;YAEA;UACA;YACA;YACA;YACA;YACA;YACA;UACA;QACA;MACA;IACA;IACAC;MAAA;MACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;MACA;MACAF;QACA;QACA;QACA;QACA;QACA;MAEA,SAEA;IACA;IACAG;MACA;MACA;IACA;;IACAC;MAAA;MACA3E;QACA;QACA;;QAEA4E;UAAA;QAAA;QAGA;UAAA;YAAAhB;YAAArC;UAAA;QAAA;QACA;QACA;QACA;QACA;UACA;QACA;QAEA;QACA;QACA;UAAA;QAAA;QACA+B;UACAO;QACA;QACA;UAAA;QAAA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;;IACAgB;MAAA;MACA;MACAC;MACA/E;QACA;MACA;QACA;QACA;MACA;IACA;IACAgF;MAAA;MACA;MACA;QACAC;MACA;QACAA;MACA;IACA;IACAC;MACA;MACA;QACA;MAAA,CACA;QACA;MAAA,CACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;MACA;MACA;MACA;QACA;QACAC;QACAA;QACAA;MACA;IACA;IACAC;MACA;QACA;QACA;QACA;QACAC;QACAA;QACAA;UACAC;UACAA;UACAC;UACA;UACAD;UACAE;QACA;MACA;IACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;QACAxB;QACAA;QACAA;QACAA;QACAA;QACAA;MACA;MACA;QAAAC;QAAAwB;MAAA;MACA;IACA;;IACAC;MACA;QAAAzB;MAAA;IACA;IACA0B;MACA;QACA;QACA;MACA;QACA;QACA;MACA;MACA;QACA;UAAA1B;QAAA;QACA;MACA;MACA;IACA;IACA2B;MAAA;MACA;QAAA;QACA;QACA;MACA;QACA;QACA;QACA;QACA;QACA;UACA;UACA;QACA;UACA;UACA;QACA;;QAEA;MACA;IACA;EAEA;;EACAC;IACAxE;MACA;QACA;QACA;MACA;IACA;EACA;AACA","names":["session_token","shouxufeibaifenbi_post","tupianshangchuan_post","zhifutongdao_post","apiWithdrawBefore","apiBindAddress","apiRealTimeExchangeRates","data","priceFormat","priceFormat8","itemName","codes","currentChainName","imgUrl","tongdao","it","input1","input2","card","bankName","bankUserName","bankCardNo","fileList","shangchuanurl","withdraw_fee","coinType","value","allowEditWithdrawAddress","showKeyboard","show","bindShow","bindData","coin","blockchain_name","channel_address","blockchainNetwork","withdrawBefore","linkProtocol","linkProtocolOptions","selectValue","selectCurrency","withdrawalMethod","currentRate","components","Footer","QRCode","created","isLogin","computed","mapGetters","userMoney","exchangeRateConversion","methods","requestLiveRates","symbol","res","selectCurrencyChange","tempItem","requestWithdrawBefore","requestHandleBind","message","forbidClick","handleCoinChange","label","item","shouxufei","channel","biaodan_tijiao2","shifoushzhi_zijinmima_post","sessionStorage","path","biaodan_tijiao","amount","safeword","tixian_post","Object","chongzhitijiao","tongdao_qiehuan","zhifutongdao","res22","afterRead","formData","copyData","alert","copyData2","baocunhaibao","link","getUrlBase64","img","canvas","ctx","resolve","saveImg","onClickLeft","dir","onClick1","onCoinChange","handleInput","watch"],"sourceRoot":"src/page/withdraw","sources":["index.vue"],"sourcesContent":["<template>\n    <div class=\"recharge\">\n        <van-nav-bar safe-area-inset-top fixed :title=\"itemName == 'Hive' ? $t('提领') : $t('提现')\" left-arrow\n            @click-left=\"onClickLeft\" :right-text=\"$t('记录')\" @click-right=\"onClick1\" />\n        <div style=\"width: 100%;\" class=\"h46\"></div>\n\n        <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('取款方式') }}</div>\n        <div class=\"shuru\">\n            <el-select v-model=\"selectValue\" :placeholder=\"$t('请选择')\" @change=\"onCoinChange\">\n                <el-option :label=\"$t('加密货币')\" value=\"0\"></el-option>\n                <!-- <el-option :label=\"$t('银行卡')\" value=\"1\"></el-option> -->\n            </el-select>\n        </div>\n        <template v-if=\"selectValue == 0\">\n            <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('币种') }}</div>\n            <div class=\"shuru\">\n                <el-select v-model=\"selectCurrency\" :placeholder=\"$t('请选择')\" @change=\"selectCurrencyChange\">\n                    <el-option v-for=\"item of withdrawalMethod\" :key=\"item.label\" :label=\"item.label\"\n                        :value=\"item.value\"></el-option>\n                </el-select>\n            </div>\n            <div class=\"biaoti\">{{ $t('区块链网络') }}</div>\n            <div class=\"duoxuan\">\n                <div v-for=\"(item, indx) in blockchainNetwork\" :key=\"indx\" class=\"xuan1 \"\n                    :class=\"currentChainName === item ? 'xuanzhong' : 'weixuan'\" @click=\"tongdao_qiehuan(item)\">{{ item }}\n\n                    <van-icon class-prefix=\"icon\" v-if=\"currentChainName == item\" name=\"xuanzejiaobiao\"\n                        class=\"xuanzhong-img rtl_selected\" />\n                </div>\n            </div>\n            <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('地址') }}</div>\n            <div class=\"shuru\">\n                <el-input :placeholder=\"$t('请输入地址')\" :disabled=\"allowEditWithdrawAddress\" v-model=\"it.input2\" clearable>\n                </el-input>\n            </div>\n        </template>\n        <template v-else>\n            <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('开户行') }}</div>\n            <div class=\"shuru\">\n                <el-input :placeholder=\"$t('请输入开户行')\" v-model=\"card.bankName\" clearable>\n                </el-input>\n            </div>\n            <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('姓名') }}</div>\n            <div class=\"shuru\">\n                <el-input :placeholder=\"$t('请输入姓名')\" v-model=\"card.bankUserName\" clearable>\n                </el-input>\n            </div>\n            <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('卡号') }}</div>\n            <div class=\"shuru\">\n                <el-input :placeholder=\"$t('请输入卡号')\" v-model=\"card.bankCardNo\" clearable>\n                </el-input>\n            </div>\n        </template>\n        <div class=\"biaoti\" style=\"margin-bottom: 5px;\">\n            <span>{{ $t('金额') }}</span>\n        </div>\n        <div class=\"shuru\">\n            <el-input :placeholder=\"$t('请输入金额')\" maxlength=\"10\" v-model=\"it.input1\" @input=\"handleInput\" type=\"number\"\n                clearable>\n            </el-input>\n        </div>\n        <div class=\"biaoti current_price\">\n            {{ $t('当前余额') }}: {{ priceFormat(userMoney?.money) }} USD\n            <span v-if=\"selectValue == 0\">≈ {{ exchangeRateConversion }} {{ selectCurrency }}</span>\n        </div>\n        <div class=\"info-tips\">\n            <p>\n                {{ $t('实际到账') }}：{{ ['BTC', 'ETH'].includes(this.selectCurrency) ? priceFormat8(it.input1 - it.input1 *\n                    withdraw_fee) : priceFormat(it.input1 - it.input1 * withdraw_fee) }}\n                <span>{{ selectValue == 0 ? selectCurrency : 'USD' }}</span>\n            </p>\n            <p>{{ $t('手续费') }}：{{ (withdraw_fee * 100).toFixed(2) }}%</p>\n        </div>\n        <div class=\"tijiao\" style=\"padding-top: 20px;\">\n            <div class=\"tijiao2\" style=\"width: 100%;\" @click=\"biaodan_tijiao2\">{{ $t('提交') }}</div>\n        </div>\n        <van-overlay :show=\"show\" @click=\"show = false\">\n            <div class=\"wrapper\">\n                <!--        <div class=\"block\" />-->\n                <div style=\"width: 100%;background:  #F3F5F9;border-radius: 5px 5px 0 0 ;\" class=\"h150\">\n                    <van-password-input style=\"margin-top: 30px;\" :value=\"value\" :gutter=\"10\" :focused=\"showKeyboard\"\n                        @focus=\"showKeyboard = true\" />\n                    <div style=\"text-align: center;font-size: 14px;margin-top: 30px;\">{{ $t('资金密码') }}</div>\n                </div>\n                <!-- 数字键盘 -->\n                <van-number-keyboard v-model=\"value\" :show=\"showKeyboard\" @blur=\"showKeyboard = true\" />\n            </div>\n        </van-overlay>\n        <van-overlay :show=\"bindShow\">\n            <div class=\"bind_wrap\">\n                <div class=\"title\">\n                    <span>{{ $t('提款地址绑定') }}</span>\n                    <!-- <van-icon name=\"cross\" @click=\"bindShow = false\" /> -->\n                </div>\n                <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('取款方式') }}</div>\n                <div class=\"shuru\">\n                    <el-select v-model=\"bindData.coin\" :placeholder=\"$t('请选择取款方式')\" @change=\"handleCoinChange\">\n                        <el-option v-for=\"item in withdrawalMethod\" :key=\"item.value\" :label=\"item.label\"\n                            :value=\"item.value\">\n                        </el-option>\n                    </el-select>\n                </div>\n                <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('链接协议') }}</div>\n                <div class=\"shuru\">\n                    <el-select v-model=\"bindData.blockchain_name\" :placeholder=\"$t('请选择链接协议')\"\n                        :no-data-text=\"$t('请先选择取款方式')\">\n                        <el-option v-for=\"item in linkProtocolOptions\" :key=\"item.value\" :label=\"item.label\"\n                            :value=\"item.value\">\n                        </el-option>\n                    </el-select>\n                </div>\n                <div class=\"biaoti\" style=\"margin-bottom: 5px;\">{{ $t('收款钱包地址') }}</div>\n                <div class=\"shuru\">\n                    <el-input :placeholder=\"$t('请输入钱包地址')\" v-model=\"bindData.channel_address\" clearable>\n                    </el-input>\n                </div>\n                <div class=\"hint\">{{ $t('仅能绑定一个收款地址!') }}</div>\n                <van-button @click=\"requestHandleBind\" class=\"submit_btn\" block type=\"primary\">{{ $t('确认绑定') }}</van-button>\n            </div>\n        </van-overlay>\n        <!-- <Footer /> -->\n    </div>\n</template>\n<script>\nimport QRCode from 'qrcode'\nimport { Toast, Uploader, Overlay, PasswordInput, NumberKeyboard, Icon, Dialog, Tab, Tabs } from 'vant';\nimport {\n    session_token, shifoushzhi_zijinmima_post,\n    shouxufeibaifenbi_post, tixian_post,\n    tupianshangchuan_post,\n    zhifutongdao_post,\n    apiWithdrawBefore,\n    apiBindAddress,\n    apiRealTimeExchangeRates\n} from \"@/API/user\";\nimport { mapGetters } from 'vuex'\nimport Footer from '@/components/Footer'\nimport { isLogin, priceFormat, priceFormat8, deduplication } from '@/utils/utis'\nexport default {\n    data() {\n        return {\n            priceFormat,\n            priceFormat8,\n            itemName: process.env.VUE_APP_ITEM_NAME,\n            data: {},\n            codes: '',\n            currentChainName: {},\n            imgUrl: '',\n            tongdao: [],\n            it: {\n                input1: '',\n                input2: ''\n            },\n            card: {\n                bankName: '',\n                bankUserName: '',\n                bankCardNo: ''\n            },\n            fileList: [],\n            shangchuanurl: '',\n            session_token: '',\n            withdraw_fee: '',\n            coinType: '',\n            value: '',\n            allowEditWithdrawAddress: false,\n            showKeyboard: true,\n            show: false,\n            bindShow: false,\n            bindData: {\n                coin: '',\n                blockchain_name: '',\n                channel_address: ''\n            },\n            blockchainNetwork: [''],\n            withdrawBefore: {},\n            linkProtocol: [],\n            linkProtocolOptions: [],\n            selectValue: '0',\n            selectCurrency: '',\n            withdrawalMethod: [],\n            currentRate: 0,\n        }\n    },\n\n    components: {\n        Footer,\n        QRCode: QRCode,\n        [Icon.name]: Icon,\n        [Tab.name]: Tab,\n        [Tabs.name]: Tabs,\n        [Uploader.name]: Uploader,\n        [Overlay.name]: Overlay,\n        [Dialog.name]: Dialog,\n        [PasswordInput.name]: PasswordInput,\n        [NumberKeyboard.name]: NumberKeyboard\n    },\n    async created() {\n        if (!isLogin()) {\n            this.$router.push('/')\n        } else {\n            this.$store.dispatch(\"getUserMoney\");\n            await this.requestWithdrawBefore()\n            this.zhifutongdao()\n        }\n        if (sessionStorage.getItem('withdraw_price')) {\n            this.it.input1 = sessionStorage.getItem('withdraw_price')\n            this.it.input2 = sessionStorage.getItem('withdraw_address')\n            this.card.bankName = sessionStorage.getItem('withdraw_bankName')\n            this.card.bankUserName = sessionStorage.getItem('withdraw_bankUserName')\n            this.card.bankCardNo = sessionStorage.getItem('withdraw_bankCardNo')\n            this.selectValue = sessionStorage.getItem('withdraw_index')\n        }\n    },\n    computed: {\n        ...mapGetters({\n            userMoney: \"userMoney\",\n        }),\n        exchangeRateConversion() {\n            if (!this.currentRate) return 0\n            if (['BTC', 'ETH'].includes(this.selectCurrency)) {\n                return this.priceFormat8(this.userMoney?.money / this.currentRate)\n            }\n            return this.priceFormat(this.userMoney?.money / this.currentRate)\n        },\n    },\n    methods: {\n        // 获取实时汇率\n        async requestLiveRates(symbol) {\n            const res = await apiRealTimeExchangeRates({ symbol })\n            this.currentRate = res.price\n        },\n        // 选择币种\n        selectCurrencyChange(val) {\n            this.it.input1 = ''\n            this.blockchainNetwork = []\n            const tempItem = this.linkProtocol.filter(item => item.coin == val)\n            tempItem.forEach(item => {\n                this.blockchainNetwork.push(item.blockchain_name)\n            })\n            this.coinType = val\n            this.currentChainName = this.blockchainNetwork[0]\n            this.requestLiveRates(val)\n            this.shouxufei()\n        },\n        async requestWithdrawBefore() {\n            const res = await apiWithdrawBefore()\n            // allowEditWithdrawAddress   是否允许用户编辑提现地址  0 - 不允许 1 - 允许\n            // chainName                  币种协议 ERC20\n            // existWithdrawAddress       旧的提现地址 \n            // needBindWithdrawAddress    是否提示绑定提现地址 0 - 不提示 1 - 提示\n            // openWithdrawAddressBinding 是否开启绑定提现地址 0 - 不开启 1 - 开启\n            if (res?.openWithdrawAddressBinding == 0) return\n            this.allowEditWithdrawAddress = !!res.existWithdrawAddress\n            this.bindShow = !res.existWithdrawAddress\n            this.it.input2 = res.existWithdrawAddress\n            this.blockchainNetwork = [res.chainName]\n            this.currentChainName = this.blockchainNetwork[0]\n            this.session_token = res.session_token\n            this.coinType = res.coinType\n        },\n        // 弹框 - 绑定按钮\n        async requestHandleBind() {\n            if (this.bindData.coin == '') {\n                this.$notify(this.$t('请选择取款方式'));\n                return\n            }\n            if (this.bindData.blockchain_name == '') {\n                this.$notify(this.$t('请选择链接协议'));\n                return\n            }\n            if (this.bindData.channel_address == '') {\n                this.$notify(this.$t('请输入钱包地址'));\n                return\n            }\n            Toast.loading({\n                message: this.$t('加载中...'),\n                forbidClick: true,\n            });\n            try {\n                await apiBindAddress(this.bindData)\n                this.$notify(this.$t('绑定提现地址成功'), 'success');\n                this.bindShow = false\n                Toast.clear()\n                this.blockchainNetwork = [this.bindData.blockchain_name]\n                this.it.input2 = this.bindData.channel_address\n                this.allowEditWithdrawAddress = true\n            } catch (error) {\n                Toast.clear()\n            }\n        },\n        // 弹框 - 取款方式变更时\n        handleCoinChange(val) {\n\n            const tempArr = this.linkProtocol.filter(item => item.coin == val)\n            this.linkProtocolOptions = tempArr.map(item => {\n                return {\n                    value: item.blockchain_name,\n                    label: item.blockchain_name,\n                    ...item\n                }\n            })\n            this.bindData.blockchain_name = this.linkProtocolOptions[0].value\n        },\n        shouxufei() {\n            shouxufeibaifenbi_post({\n                channel: this.coinType,\n            }).then(res => {\n                this.withdraw_fee = res.withdraw_fee\n            })\n        },\n        biaodan_tijiao2() {\n            if (this.it.input1.trim() === '') {\n                Toast(this.$t('请输入金额'));\n                return\n            }\n            if (this.userMoney?.money < this.it.input1.trim()) {\n                return Toast(this.$t('账户余额不足'));\n            }\n            if (this.selectValue == 0) {\n                // 虚拟币\n                if (this.it.input2.trim() === '') {\n                    Toast(this.$t('请输入地址'));\n                    return;\n                }\n            } else {\n                // 银行卡\n                if (this.card.bankName.trim() === '') return Toast(this.$t('请输入开户行'))\n                if (this.card.bankUserName.trim() === '') return Toast(this.$t('请输入姓名'))\n                if (this.card.bankCardNo.trim() === '') return Toast(this.$t('请输入卡号'))\n            }\n            shifoushzhi_zijinmima_post({}).then(res => {\n                if (res.safeword == 1) {\n                    this.show = true\n                    this.showKeyboard = true\n                    if (sessionStorage.getItem('withdraw_price')) {\n                        sessionStorage.removeItem('withdraw_price')\n                        sessionStorage.removeItem('withdraw_address')\n                        sessionStorage.removeItem('withdraw_bankName')\n                        sessionStorage.removeItem('withdraw_bankUserName')\n                        sessionStorage.removeItem('withdraw_bankCardNo')\n                        sessionStorage.removeItem('withdraw_index')\n                    }\n                } else {\n                    sessionStorage.setItem('withdraw_index', this.selectValue)\n                    if (this.selectValue == 0) {\n                        sessionStorage.setItem('withdraw_price', this.it.input1)\n                        sessionStorage.setItem('withdraw_address', this.it.input2)\n                    } else {\n                        sessionStorage.setItem('withdraw_bankName', this.card.bankName)\n                        sessionStorage.setItem('withdraw_bankUserName', this.card.bankUserName)\n                        sessionStorage.setItem('withdraw_bankCardNo', this.card.bankCardNo)\n                    }\n\n\n                    this.$router.push({ path: '/FundPasswordSettings' })\n                }\n            })\n\n        },\n        biaodan_tijiao() {\n            session_token({}).then(res => {\n                this.session_token = res.session_token\n\n                if (this.selectValue == 0) {\n                    this.chongzhitijiao()\n                } else {\n                    const params = {\n                        ...this.card,\n                        session_token: this.session_token,\n                        amount: this.it.input1,\n                        channel: 'bank',\n                        safeword: this.value\n                    }\n                    tixian_post(params).then(res => {\n                        // Toast(this.$t('提交成功'));\n                        Object.keys(this.card).forEach(key => {\n                            this.card[key] = ''\n                        })\n\n                        this.$router.push('/SubmitCompleted?path=withdrawRecord')\n                    }).finally(() => {\n                        this.it.input1 = ''\n                        this.fileList = []\n                        this.shangchuanurl = ''\n                        this.value = ''\n                        this.show = false\n                    })\n                }\n            })\n        },\n        chongzhitijiao() {\n            var data = {\n                'session_token': this.session_token,\n                'amount': this.it.input1,\n                'from': this.it.input2,\n                'channel': this.coinType,\n                'safeword': this.value\n            };\n            this.show = false\n            this.value = ''\n            tixian_post(data).then(res => {\n                // Toast(this.$t('提交成功'));\n                this.it.input1 = ''\n                this.fileList = []\n                this.shangchuanurl = ''\n                this.$router.push('/SubmitCompleted?path=withdrawRecord')\n\n            }).then(\n\n            )\n        },\n        tongdao_qiehuan(e) {\n            this.currentChainName = e\n            // this.useqrcode1()\n        },\n        zhifutongdao() {\n            zhifutongdao_post({}).then(res22 => {\n                // this.code = this.$route.query.usercode\n                // this.withdrawalMethod = res22\n\n                res22 = res22.filter(item => item.coin != \"BTC\");\n\n\n                const tempArr = res22.map(item => ({ label: item.coin, value: item.coin }))\n                this.withdrawalMethod = deduplication(tempArr, 'value')\n                this.coinType = this.selectCurrency = this.withdrawalMethod[0].value\n                this.linkProtocol = res22\n                for (var i = 0; i < res22.length; i++) {\n                    this.tongdao.push(res22[i])\n                }\n\n                if (this.allowEditWithdrawAddress) return\n                // this.blockchainNetwork = this.tongdao.map(item => item.blockchain_name)\n                const tempItem = this.linkProtocol.filter(item => item.coin == this.selectCurrency)\n                tempItem.forEach(item => {\n                    item.blockchain_name && this.blockchainNetwork.push(item.blockchain_name)\n                })\n                this.blockchainNetwork = this.blockchainNetwork.filter(item => item)\n                this.currentChainName = this.blockchainNetwork[0]\n                this.requestLiveRates(this.selectCurrency)\n                this.shouxufei()\n                // this.bindData.coin = this.tongdao[0]\n                // this.useqrcode1()\n            })\n        },\n        afterRead(file) {\n            let formData = new FormData();//通过formdata上传\n            formData.append('file', file.file);\n            tupianshangchuan_post(formData).then(res => {\n                this.shangchuanurl = res\n            }).catch(function (err) {\n                this.fileList = []\n                Toast(this.$t('添加失败'));\n            })\n        },\n        copyData(ea) {\n            //如果需要回调：\n            this.$copyText(ea).then(e => {\n                alert(this.$t('复制成功'))\n            }, function (e) {\n                alert(this.$t('复制失败'))\n            })\n        },\n        copyData2(ea) {\n            //如果需要回调：\n            this.$copyText(ea).then(e => {\n                // alert('复制成功')\n            }, function (e) {\n                // alert('复制失败')\n            })\n        },\n        // useqrcode1() {//生成二维码\n        //     let canvas = document.getElementById('canvas')\n        //     let url = this.currentChainName.address\n        //     QRCode.toCanvas(canvas, url, function (error) {\n        //         if (error) {\n        //         } else {\n        //         }\n        //     })\n        //     this.saveImg()//保存图片\n        // },\n        baocunhaibao() {\n            let myCanvas = document.getElementsByTagName('canvas');\n            this.imgUrl = myCanvas[0].toDataURL('image/png')\n            this.getUrlBase64(this.imgUrl).then(base64 => {\n                let link = document.createElement('a')\n                link.href = base64\n                link.download = 'qrCode.png'\n                link.click()\n            })\n        },\n        getUrlBase64(url) {\n            return new Promise(resolve => {\n                let canvas = document.createElement('canvas')\n                let ctx = canvas.getContext('2d')\n                let img = new Image()\n                img.crossOrigin = 'Anonymous' //允许跨域\n                img.src = url\n                img.onload = function () {\n                    canvas.height = 300\n                    canvas.width = 300\n                    ctx.drawImage(img, 0, 0, 300, 300)\n                    let dataURL = canvas.toDataURL('image/png')\n                    canvas = null\n                    resolve(dataURL)\n                }\n            })\n        },\n        //保存图片\n        saveImg() {\n            let myCanvas = document.getElementsByTagName('canvas');\n            this.imgUrl = myCanvas[0].toDataURL('image/png')\n        },\n        onClickLeft() {\n            if (sessionStorage.getItem('withdraw_price')) {\n                sessionStorage.removeItem('withdraw_price')\n                sessionStorage.removeItem('withdraw_address')\n                sessionStorage.removeItem('withdraw_bankName')\n                sessionStorage.removeItem('withdraw_bankUserName')\n                sessionStorage.removeItem('withdraw_bankCardNo')\n                sessionStorage.removeItem('withdraw_index')\n            }\n            this.$router.push({ path: '/me', dir: 'left' })\n            // this.$router.go(-1)\n        },\n        onClick1() {\n            this.$router.push({ path: '/withdrawRecord' })\n        },\n        onCoinChange(val) {\n            if (val == 1) {\n                this.coinType = 'bank'\n                this.shouxufei()\n            } else {\n                this.coinType = this.selectCurrency\n                this.shouxufei()\n            }\n            if (['SM-wholesaleShop', 'FamilyShop'].includes(this.itemName)) {\n                this.$router.push({ path: '/customerServiceIndex?path=customerService' })\n                return\n            }\n            this.it.input1 = ''\n        },\n        handleInput(val) {\n            if (val > this.userMoney?.money) {\n                this.it.input1 = this.userMoney?.money\n                return\n            } else {\n                this.it.input1 = this.it.input1.replace(/[^\\d.]/g, \"\"); // 非数字和小数点替换为空字符串\n                this.it.input1 = this.it.input1.replace(/\\.{2,}/g, \".\"); // 连续出现多个小数点替换为单个小数点\n                this.it.input1 = this.it.input1.replace(/^\\./g, \"\"); // 第一个字符如果是小数点则替换为空字符串\n                this.it.input1 = this.it.input1.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\"); // 将第一个小数点替换为$#$，去除所有小数点，再将$#$替换回小数点\n                if (['BTC', 'ETH'].includes(this.selectCurrency)) {\n                    this.it.input1 = this.it.input1.replace(/^(\\-)*(\\d+)\\.(\\d{0,10}).*$/, \"$1$2.$3\"); // 最多允许输入10位小数\n                    this.it.input1 = this.it.input1.replace(/^\\D*(\\d{0,10}(?:\\.\\d{0,10})?).*$/g, \"$1\"); // 最多允许输入10位数字\n                } else {\n                    this.it.input1 = this.it.input1.replace(/^(\\-)*(\\d+)\\.(\\d{0,2}).*$/, \"$1$2.$3\"); // 最多允许输入2位小数\n                    // this.it.input1 = this.it.input1.replace(/^\\D*(\\d{0,2}(?:\\.\\d{0,10})?).*$/g, \"$1\"); // 最多允许输入10位数字\n                }\n\n                // this.it.input1 = val\n            }\n        },\n\n    },\n    watch: {\n        value(value) {\n            if (value.length === 6) {\n                this.showKeyboard = false\n                this.biaodan_tijiao()\n            }\n        },\n    }\n}\n</script>\n<style lang=\"scss\" scoped>\nhtml[dir=\"rtl\"] {\n    .rtl_selected {\n        right: -68px;\n    }\n}\n\n.current_price {\n    margin-top: 10px !important;\n    margin-bottom: 0 !important;\n    font-size: 12px !important;\n    color: #79C642 !important;\n}\n\n.price_box {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-right: 30px;\n    box-sizing: border-box;\n\n    span {\n        &:last-child {\n            color: #93CA70;\n        }\n    }\n}\n\n.bind_wrap {\n    min-height: 380px;\n    background: #fff;\n    border-radius: 8px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 20px 15px;\n\n    .title {\n        font-weight: 700;\n        font-size: 16px;\n        line-height: 19px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        .van-icon {\n            font-size: 20px;\n        }\n    }\n\n    .el-select,\n    .el-input {\n        width: 297px;\n    }\n\n    .biaoti {\n        padding: 0 !important;\n        margin-left: 0 !important;\n    }\n\n    .shuru {\n        float: none !important;\n        padding: 0 !important;\n    }\n\n    .hint {\n        font-weight: 400;\n        font-size: 14px;\n        color: #FF3E3E;\n        margin: 11px 0 21px 0;\n        transform: translateY(11px);\n    }\n\n    .submit_btn {\n        width: 302px;\n        height: 44px;\n        background: #F89900;\n        border-radius: 4px;\n        transform: translateY(11px);\n    }\n}\n\n:deep(.el-select) {\n    width: 100%;\n}\n\n.recharge {\n    width: 100%;\n    height: 100%;\n\n    /deep/ .el-input {\n        input:focus {\n            // border-color: var(--main-color);\n            border-color: var(--main-color);\n        }\n    }\n\n    .biaoti {\n        float: left;\n        margin-top: 20px;\n        width: 100%;\n        margin-bottom: 10px;\n        font-style: normal;\n        font-weight: 400;\n        font-size: 14px;\n        color: #333333;\n        margin-left: 15px;\n    }\n\n    .duoxuan {\n        width: 100%;\n\n        .xuan1 {\n            float: left;\n            margin-left: 15px;\n            width: 105px;\n            height: 40px;\n            text-align: center;\n            position: relative;\n            font-style: normal;\n            font-weight: 400;\n            font-size: 14px;\n            line-height: 40px;\n            border-radius: 4px;\n        }\n\n        .weixuan {\n            color: #999999;\n            border: 1px solid #999999;\n        }\n\n        .xuanzhong {\n\n            color: var(--main-color);\n            border: 1px solid var(--main-color);\n        }\n\n        .xuanzhong-img {\n            font-size: 40px;\n            position: absolute;\n            right: -1px;\n            bottom: 0;\n        }\n    }\n\n    .baocunerweima {\n        display: flex;\n        justify-content: center;\n        //margin-top: 30px;\n        width: 100%;\n        float: left;\n\n        .baocunerweima-buuon {\n            width: 114px;\n            height: 40px;\n            border: 1px solid #DDDDDD;\n            border-radius: 4px;\n            font-style: normal;\n            font-weight: 400;\n            font-size: 14px;\n            line-height: 40px; //\n            text-align: center;\n\n            /* 333 */\n\n            color: #333333;\n        }\n    }\n\n    .chongzhifuzhi {\n        float: left;\n        padding-left: 15px;\n        padding-right: 15px;\n        box-sizing: border-box;\n        width: 100%;\n\n        .chongzhifuzhi2 {\n            padding: 0 10px;\n            box-sizing: border-box;\n            width: 100%;\n            height: 44px;\n            border: 1px solid #DDDDDD;\n            font-style: normal;\n            font-weight: 400;\n            font-size: 14px;\n            line-height: 44px;\n            display: flex;\n\n            /* 333 */\n\n            color: #333333;\n\n            .dizhi {\n                width: 250px;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            }\n        }\n    }\n\n    .shuru {\n        width: 100%;\n        float: left;\n        padding: 0 15px;\n        box-sizing: border-box;\n    }\n\n    .tijiao {\n        width: 100%;\n        padding: 25px 15px;\n        box-sizing: border-box;\n        float: left;\n\n        .tijiao2 {\n            width: 100%;\n            height: 44px;\n            background: var(--main-color);\n            border-radius: 4px;\n            font-style: normal;\n            font-weight: 400;\n            font-size: 16px;\n            line-height: 44px;\n            /* identical to box height */\n\n            text-align: center;\n\n            color: #FFFFFF;\n        }\n    }\n\n    .wrapper {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-end;\n        height: 100%;\n    }\n\n    //   .block {\n    //     //width: 120px;\n    //     //height: 120px;\n    //     //background-color: #fff;\n    //   }\n    :deep(.van-number-keyboard) {\n        position: sticky;\n    }\n\n    .info-tips {\n        width: 100%;\n        padding: 10px 15px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        box-sizing: border-box;\n\n        >p {\n            font-size: 12px;\n            color: #999;\n\n            &:last-child {\n\n                color: var(--main-color);\n            }\n        }\n    }\n}\n\n:deep(.van-key__wrapper) {\n    &:nth-child(10) {\n        svg {\n            display: none;\n        }\n    }\n}\n\n:deep(.van-tabs) {\n    width: 70%;\n    margin: 0 auto;\n}\n\n:deep(.van-tabs__line) {\n    background: var(--main-color) !important;\n}\n\n// :deep(.van-overlay) {\n//     z-index: 9999;\n// }\n</style>\n<style>\n.van-uploader__upload {\n    width: 120px !important;\n    height: 120px !important;\n}\n\n.el-select-dropdown__item.selected {\n    color: #F89900 !important;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}