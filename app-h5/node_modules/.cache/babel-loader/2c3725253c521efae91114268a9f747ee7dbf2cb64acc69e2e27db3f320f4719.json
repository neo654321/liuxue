{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\n/*!\n * @wcjiang/notify v2.1.0\n * JS achieve the browser title flashing , scrolling, voice prompts , chrome notice.\n * \n * Copyright (c) 2022 kenny wang\n * http://jaywcjlove.github.io/iNotify\n * \n * Licensed under the MIT license.\n */\n\n// 提醒是否添加chrome通知\nif (window.Notification && window.Notification.permission !== 'granted') {\n  window.Notification.requestPermission();\n}\nvar iconURL = '';\nvar repeatableEffects = ['flash', 'scroll'];\nvar defaultNotification = {\n  title: 'iNotify !',\n  body: 'You have a new message.',\n  openurl: ''\n};\nfunction jsonArguments(news, olds) {\n  for (var a in olds) {\n    if (news[a]) {\n      olds[a] = news[a];\n    }\n  }\n  return olds;\n}\nfunction isArray(value) {\n  return Object.prototype.toString.call(value) === '[object Array]';\n}\nfunction createAudio(url) {\n  var audioElm = document.createElement('audio');\n  audioElm.autoplay = true;\n  audioElm.muted = true;\n  var source;\n  if (isArray(url) && url.length > 0) {\n    for (var i = 0; i < url.length; i++) {\n      source = document.createElement('source');\n      source.src = url[i];\n      source.type = \"audio/\".concat(getExtension(url[i]));\n      audioElm.appendChild(source);\n    }\n  } else {\n    audioElm.src = url;\n  }\n  return audioElm;\n}\nfunction getFavicon(setting) {\n  var ic = document.querySelectorAll('link[rel~=shortcut]')[0];\n  if (!ic) {\n    ic = changeFavicon('O', setting);\n  }\n  return ic;\n}\nfunction getExtension(fileName) {\n  return fileName.match(/\\.([^\\\\.]+)$/)[1];\n}\nfunction changeFavicon(num, settings) {\n  var canvas = document.createElement('canvas');\n  var head = document.getElementsByTagName('head')[0];\n  var linkTag = document.createElement('link');\n  var ctx = null;\n  canvas.height = 32;\n  canvas.width = 32;\n  ctx = canvas.getContext('2d');\n  ctx.fillStyle = settings.backgroundColor;\n  ctx.fillRect(0, 0, 32, 32);\n  ctx.textAlign = 'center';\n  ctx.font = '22px \"helvetica\", sans-serif';\n  ctx.fillStyle = settings.textColor;\n  num && ctx.fillText(num, 16, 24);\n\n  // 生成到\n  linkTag.setAttribute('rel', 'shortcut icon');\n  linkTag.setAttribute('type', 'image/x-icon');\n  linkTag.setAttribute('id', \"new\".concat(settings.id));\n  linkTag.setAttribute('href', canvas.toDataURL('image/png'));\n  iconURL = canvas.toDataURL('image/png');\n  return head.appendChild(linkTag);\n}\nfunction Notify(config) {\n  if (config) {\n    this.init(config);\n  }\n}\nNotify.prototype = {\n  init(config) {\n    if (!config) {\n      config = {};\n    }\n    this.interval = config.interval || 100; // 响应时长\n    this.effect = config.effect || 'flash'; // 效果\n    this.title = config.title || document.title; // 标题\n    this.message = config.message || this.title; // 原来的标题\n    this.onclick = config.onclick || this.onclick; // 点击事件\n    this.openurl = config.openurl || this.openurl; // 点击事件\n    this.disableFavicon = config.disableFavicon || false; // 禁用favicon 默认开启\n    this.updateFavicon = !this.disableFavicon && (config.updateFavicon || {\n      id: 'favicon',\n      textColor: '#fff',\n      backgroundColor: '#2F9A00'\n    });\n    this.audio = config.audio || '';\n    this.favicon = !this.disableFavicon && getFavicon(this.updateFavicon);\n    this.cloneFavicon = this.favicon && this.favicon.cloneNode(true);\n    iconURL = config.notification && config.notification.icon ? config.notification.icon : config.icon ? config.icon : this.favicon.href;\n    defaultNotification.icon = iconURL;\n    this.notification = config.notification || defaultNotification;\n    // 初始化生成声音文件节点\n    if (this.audio && this.audio.file) {\n      this.setURL(this.audio.file);\n    }\n    return this;\n  },\n  render() {\n    if (this.effect === 'flash') {\n      document.title = this.title === document.title ? this.message : this.title;\n    } else if (this.effect === 'scroll') {\n      var title = this.message || document.title;\n      if (!this.scrollTitle || !this.scrollTitle.slice(1)) {\n        document.title = title;\n        this.scrollTitle = title;\n      } else {\n        this.scrollTitle = this.scrollTitle.slice(1);\n        document.title = this.scrollTitle;\n      }\n    }\n    return this;\n  },\n  // 设置标题\n  setTitle(str) {\n    if (str === true) {\n      if (repeatableEffects.indexOf(this.effect) >= 0) {\n        return this.addTimer();\n      }\n    } else if (str) {\n      this.message = str;\n      this.scrollTitle = '';\n      this.addTimer();\n    } else {\n      this.clearTimer();\n    }\n    return this;\n  },\n  setURL(url) {\n    if (url) {\n      if (this.audioElm) {\n        this.audioElm.remove();\n      }\n      this.audioElm = createAudio(url);\n      document.body.appendChild(this.audioElm);\n    }\n    return this;\n  },\n  loopPlay() {\n    this.setURL();\n    this.audioElm.loop = true;\n    this.player();\n    return this;\n  },\n  stopPlay() {\n    this.audioElm && (this.audioElm.loop = false, this.audioElm.pause());\n    return this;\n  },\n  // 播放声音\n  player() {\n    if (!this.audio || !this.audio.file) {\n      return;\n    }\n    if (!this.audioElm) {\n      this.audioElm = createAudio(this.audio.file);\n      document.body.appendChild(this.audioElm);\n    }\n    this.audioElm.muted = false;\n    var resp = this.audioElm.play();\n    if (resp !== undefined) {\n      resp.then(function () {\n        // autoplay starts!\n      }).catch(function () {\n        // show error\n      });\n    }\n    return this;\n  },\n  notify(json) {\n    var nt = this.notification;\n    var url = json.openurl ? json.openurl : this.openurl;\n    var onclick = json.onclick ? json.onclick : this.onclick;\n    if (window.Notification) {\n      if (json) {\n        nt = jsonArguments(json, nt);\n      } else {\n        nt = defaultNotification;\n      }\n      var option = {};\n      option.icon = json.icon ? json.icon : iconURL;\n      option.body = nt.body || json.body;\n      if (json.dir) option.dir = json.dir;\n      var n = new Notification(nt.title || json.title, option);\n      n.onclick = function () {\n        onclick && typeof onclick === 'function' && onclick(n);\n        url && window.open(url);\n      };\n      n.onshow = function () {\n        json.onshow && typeof json.onshow === 'function' && json.onshow(n);\n      };\n      n.onclose = function () {\n        json.onclose && typeof json.onclose === 'function' && json.onclose(n);\n      };\n      n.onerror = function () {\n        json.onerror && typeof json.onerror === 'function' && json.onerror(n);\n      };\n      this.Notifiy = n;\n    }\n    return this;\n  },\n  // 是否许可弹框通知\n  isPermission() {\n    return window.Notification && Notification.permission === 'granted';\n  },\n  // 设置时间间隔\n  setInterval(num) {\n    if (num) {\n      this.interval = num;\n      this.addTimer();\n    }\n    return this;\n  },\n  // 设置网页Icon\n  setFavicon(num) {\n    if (!num && num !== 0) {\n      return this.faviconClear();\n    }\n    var oldicon = document.getElementById(\"new\".concat(this.updateFavicon.id));\n    if (this.favicon) {\n      this.favicon.remove();\n    }\n    if (oldicon) {\n      oldicon.remove();\n    }\n    this.updateFavicon.num = num;\n    changeFavicon(num, this.updateFavicon);\n    return this;\n  },\n  // 设置 Favicon 文字颜色\n  setFaviconColor(color) {\n    if (color) {\n      this.faviconRemove();\n      this.updateFavicon.textColor = color;\n      changeFavicon(this.updateFavicon.num, this.updateFavicon);\n    }\n    return this;\n  },\n  // 设置 Favicon 背景颜色\n  setFaviconBackgroundColor(color) {\n    if (color) {\n      this.faviconRemove();\n      this.updateFavicon.backgroundColor = color;\n      changeFavicon(this.updateFavicon.num, this.updateFavicon);\n    }\n    return this;\n  },\n  faviconRemove() {\n    this.faviconClear();\n    var oldicon = document.getElementById(\"new\".concat(this.updateFavicon.id));\n    if (this.favicon) {\n      this.favicon.remove();\n    }\n    if (oldicon) {\n      oldicon.remove();\n    }\n  },\n  // 添加计数器\n  addTimer() {\n    this.clearTimer();\n    if (repeatableEffects.indexOf(this.effect) >= 0) {\n      this.timer = setInterval(this.render.bind(this), this.interval);\n    }\n    return this;\n  },\n  close() {\n    if (this.Notifiy) this.Notifiy.close();\n  },\n  // 清除Icon\n  faviconClear() {\n    var newicon = document.getElementById(\"new\".concat(this.updateFavicon.id));\n    var head = document.getElementsByTagName('head')[0];\n    var ficon = document.querySelectorAll('link[rel~=shortcut]');\n    newicon && newicon.remove();\n    if (ficon.length > 0) {\n      for (var i = 0; i < ficon.length; i++) {\n        ficon[i].remove();\n      }\n    }\n    head.appendChild(this.cloneFavicon);\n    iconURL = this.cloneFavicon.href;\n    this.favicon = this.cloneFavicon;\n    return this;\n  },\n  // 清除计数器\n  clearTimer() {\n    this.timer && clearInterval(this.timer);\n    document.title = this.title;\n    return this;\n  }\n};\nexport { Notify as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}