{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n/**\n * router扩展，页面切换动画\n */\n// 负责SessionStorage存储路由历史。\nvar SessionStorage_key_Router_Extend_History = 'SessionStorage_key_Router_Extend_History';\nfunction transitionExtend(orgin) {\n  // 通过原路由对象创建一个新的对象\n  var router = Object.create(orgin);\n\n  // 扩展对象，保存当前栈数组和过渡动画名称\n  router.customRouterData = {\n    transitionName: '',\n    history: []\n  };\n\n  // 路由位置字符串在数组中的位置\n  router.indexOf = function (path) {\n    var arrLen = router.customRouterData.history.length;\n    for (var i = arrLen - 1; i >= 0; i--) {\n      if (router.customRouterData.history[i] == path) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  // 添加历史路由去路由数组\n  router.addRouterPath = function (path) {\n    router.customRouterData.history.push(path);\n    sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n  };\n\n  // 历史路由数组移除某个路由，n为参数可以移除多个\n  router.removeLastRouterPath = function () {\n    var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    if (n > 0) {\n      for (var i = 0; i < n; i++) {\n        router.customRouterData.history.pop();\n      }\n      sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n    }\n  };\n\n  // 初始化，为了页面刷新能恢复路由记录等\n  router.initRouterPaths = function (toPath) {\n    // 当存储了 router paths 时候，读取并赋值\n    var arrStr;\n    arrStr = sessionStorage.getItem(SessionStorage_key_Router_Extend_History);\n    if (arrStr && arrStr != undefined) {\n      var arr = JSON.parse(arrStr);\n      if (Array.isArray(arr) && arr.length > 0) {\n        // 进入页面\n        router.customRouterData.history = arr;\n      } else {\n        // 新进入页面\n        router.customRouterData.history = [];\n        router.customRouterData.history.push(toPath);\n      }\n    } else {\n      // 新进入页面\n      router.customRouterData.history = [];\n      router.customRouterData.history.push(toPath);\n    }\n\n    // 存储为了恢复\n    sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n  };\n\n  // push 修改路由历史，并设置动画\n  router.push = function () {\n    var _router$__proto__$pus;\n    var location = arguments[0];\n    if (typeof location == 'string') {\n      router.addRouterPath(location);\n    } else {\n      router.addRouterPath(location.path);\n    }\n    router.customRouterData.transitionName = 'van-slide-' + (location.dir || 'right');\n    (_router$__proto__$pus = router.__proto__.push).call.apply(_router$__proto__$pus, [this].concat(Array.prototype.slice.call(arguments)));\n  };\n\n  // replace 修改路由历史，并设置动画\n  router.replace = function () {\n    var _router$__proto__$rep;\n    router.removeLastRouterPath();\n    var location = arguments[0];\n    if (typeof location == 'string') {\n      router.addRouterPath(location);\n    } else {\n      router.addRouterPath(location.path);\n    }\n    router.customRouterData.transitionName = 'van-slide-right';\n    (_router$__proto__$rep = router.__proto__.replace).call.apply(_router$__proto__$rep, [this].concat(Array.prototype.slice.call(arguments)));\n  };\n\n  // go 修改路由历史，并设置动画\n  router.go = function (n) {\n    if (n > 0) {\n      // 禁止使用，这种情况比较复杂，使用较少，先忽略\n      console.error('router.go 暂不支持 前进 ！');\n      return;\n    }\n    router.removeLastRouterPath(-n);\n    router.customRouterData.transitionName = 'van-slide-left';\n    router.__proto__.go.call(this, n);\n  };\n\n  // back 修改路由历史，并设置动画\n  router.back = function () {\n    router.removeLastRouterPath();\n    router.customRouterData.transitionName = 'van-slide-left';\n    router.__proto__.go.call(this, -1);\n  };\n  router.forward = function () {\n    // 禁止使用，这种情况比较复杂，使用较少，先忽略\n    console.error('router.forward 暂不支持 ！');\n    return;\n  };\n\n  /**\n   * 按钮前进后退处理处理\n   * 返回：测滑返回，微信返回按钮，web返回按钮，以及android物理返回，android测滑返回\n   * 前进：微信上的前进按钮，web前进\n   * // 前进这里有个坑，待解决，先忽略\n   **/\n  router.otherEventTransitionName = function (toPath, fromPath) {\n    if (router.customRouterData.transitionName != '') {\n      // 没有数据意味着从，其他操作方式得到的路由变化\n      return;\n    }\n    var toIndex = router.indexOf(toPath);\n    if (toIndex == -1 || router.customRouterData.history.length - toIndex != 2) {\n      // 不存在，并且历史\n      router.addRouterPath(toPath);\n      router.customRouterData.transitionName = 'van-slide-right';\n    } else {\n      router.removeLastRouterPath();\n      router.customRouterData.transitionName = 'van-slide-left';\n    }\n  };\n\n  // 是否已经初始化\n  var isInit = false;\n\n  // 跳转之前\n  router.beforeEach(function (to, from, next) {\n    if (isInit) {\n      router.otherEventTransitionName(to.path, from.path);\n    } else {\n      isInit = true;\n      router.initRouterPaths(to.path);\n    }\n    next();\n  });\n\n  // 跳转之后\n  router.afterEach(function (to, from) {\n    setTimeout(function () {\n      // 使用动画之后立即移除\n      router.customRouterData.transitionName = '';\n    }, 300);\n  });\n  return router;\n}\nexport default transitionExtend;","map":{"version":3,"names":["SessionStorage_key_Router_Extend_History","transitionExtend","orgin","router","Object","create","customRouterData","transitionName","history","indexOf","path","arrLen","length","i","addRouterPath","push","sessionStorage","setItem","JSON","stringify","removeLastRouterPath","n","arguments","undefined","pop","initRouterPaths","toPath","arrStr","getItem","arr","parse","Array","isArray","_router$__proto__$pus","location","dir","__proto__","call","apply","concat","prototype","slice","replace","_router$__proto__$rep","go","console","error","back","forward","otherEventTransitionName","fromPath","toIndex","isInit","beforeEach","to","from","next","afterEach","setTimeout"],"sources":["/Users/neo/Desktop/mallV2/app-h5/src/utils/transition-extend.js"],"sourcesContent":["/**\n * router扩展，页面切换动画\n */\n// 负责SessionStorage存储路由历史。\nconst SessionStorage_key_Router_Extend_History = 'SessionStorage_key_Router_Extend_History'\n\nfunction transitionExtend(orgin) {\n  // 通过原路由对象创建一个新的对象\n  let router = Object.create(orgin)\n\n  // 扩展对象，保存当前栈数组和过渡动画名称\n  router.customRouterData = {\n    transitionName: '',\n    history: []\n  }\n\n  // 路由位置字符串在数组中的位置\n  router.indexOf = function (path) {\n    let arrLen = router.customRouterData.history.length\n    for (let i = arrLen - 1; i >= 0; i--) {\n      if (router.customRouterData.history[i] == path) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  // 添加历史路由去路由数组\n  router.addRouterPath = function(path) {\n    router.customRouterData.history.push(path)\n\n    sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n  }\n\n  // 历史路由数组移除某个路由，n为参数可以移除多个\n  router.removeLastRouterPath = function (n = 1) {\n    if (n > 0) {\n      for (let i = 0; i < n; i++) {\n        router.customRouterData.history.pop()\n      }\n\n      sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n    }\n  }\n\n  // 初始化，为了页面刷新能恢复路由记录等\n  router.initRouterPaths = function (toPath) {\n    // 当存储了 router paths 时候，读取并赋值\n    let arrStr\n    arrStr = sessionStorage.getItem(SessionStorage_key_Router_Extend_History);\n\n    if (arrStr && arrStr != undefined) {\n      let arr = JSON.parse(arrStr)\n      if (Array.isArray(arr) && arr.length > 0) {\n        // 进入页面\n        router.customRouterData.history = arr;\n      } else {\n        // 新进入页面\n        router.customRouterData.history = []\n        router.customRouterData.history.push(toPath)\n      }\n    } else {\n      // 新进入页面\n      router.customRouterData.history = []\n      router.customRouterData.history.push(toPath)\n    }\n\n    // 存储为了恢复\n    sessionStorage.setItem(SessionStorage_key_Router_Extend_History, JSON.stringify(router.customRouterData.history));\n  }\n\n  // push 修改路由历史，并设置动画\n  router.push = function () {\n\n    let location = arguments[0]\n    if (typeof location == 'string') {\n      router.addRouterPath(location)\n    } else {\n      router.addRouterPath(location.path)\n    }\n    \n    router.customRouterData.transitionName = 'van-slide-' + (location.dir || 'right')\n\n    router.__proto__.push.call(this, ...arguments)\n  };\n\n  // replace 修改路由历史，并设置动画\n  router.replace = function () {\n\n    router.removeLastRouterPath()\n    let location = arguments[0]\n    if (typeof location == 'string') {\n      router.addRouterPath(location)\n    } else {\n      router.addRouterPath(location.path)\n    }\n\n    router.customRouterData.transitionName = 'van-slide-right'\n\n    router.__proto__.replace.call(this, ...arguments)\n  };\n\n  // go 修改路由历史，并设置动画\n  router.go = function (n) {\n    if (n > 0) {\n      // 禁止使用，这种情况比较复杂，使用较少，先忽略\n      console.error('router.go 暂不支持 前进 ！');\n      return;\n    }\n    router.removeLastRouterPath(-n)\n\n    router.customRouterData.transitionName = 'van-slide-left'\n\n    router.__proto__.go.call(this, n)\n  };\n\n  // back 修改路由历史，并设置动画\n  router.back = function () {\n\n    router.removeLastRouterPath()\n\n    router.customRouterData.transitionName = 'van-slide-left'\n\n    router.__proto__.go.call(this, -1)\n  };\n\n  router.forward = function () {\n    // 禁止使用，这种情况比较复杂，使用较少，先忽略\n    console.error('router.forward 暂不支持 ！');\n    return ;\n  };\n\n  /**\n   * 按钮前进后退处理处理\n   * 返回：测滑返回，微信返回按钮，web返回按钮，以及android物理返回，android测滑返回\n   * 前进：微信上的前进按钮，web前进\n   * // 前进这里有个坑，待解决，先忽略\n   **/\n  router.otherEventTransitionName = function (toPath, fromPath) {\n    if (router.customRouterData.transitionName != '') {\n      // 没有数据意味着从，其他操作方式得到的路由变化\n      return;\n    }\n\n    let toIndex = router.indexOf(toPath)\n    if (toIndex == -1 || router.customRouterData.history.length - toIndex != 2) {\n      // 不存在，并且历史\n      router.addRouterPath(toPath)\n      router.customRouterData.transitionName = 'van-slide-right'\n    } else {\n      router.removeLastRouterPath()\n      router.customRouterData.transitionName = 'van-slide-left'\n    }\n  }\n\n  // 是否已经初始化\n  let isInit = false;\n\n  // 跳转之前\n  router.beforeEach((to, from, next) => {\n    if (isInit) {\n      router.otherEventTransitionName(to.path, from.path)\n    } else {\n      isInit = true;\n      router.initRouterPaths(to.path)\n    }\n    next();\n  })\n\n  // 跳转之后\n  router.afterEach((to, from) => {\n    setTimeout(() => {\n      // 使用动画之后立即移除\n      router.customRouterData.transitionName = ''\n    }, 300)\n  })\n\n  return router\n}\n\nexport default transitionExtend\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}