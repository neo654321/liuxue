{"ast":null,"code":"import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/dialog/style\";\nimport _Dialog from \"vant/es/dialog\";\nimport \"vant/es/stepper/style\";\nimport _Stepper from \"vant/es/stepper\";\nimport \"vant/es/checkbox-group/style\";\nimport _CheckboxGroup from \"vant/es/checkbox-group\";\nimport \"vant/es/checkbox/style\";\nimport _Checkbox from \"vant/es/checkbox\";\nimport \"vant/es/pull-refresh/style\";\nimport _PullRefresh from \"vant/es/pull-refresh\";\nimport \"vant/es/list/style\";\nimport _List from \"vant/es/list\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport {\n// goods_list_action_post,\ngoods_points_action_post\n// project_listProject_action_post,\n} from \"@/API/user\";\nimport { ref } from \"vue\";\nimport { priceFormat, isLogin, getStorage } from '@/utils/utis';\nexport default {\n  setup() {\n    var checked = ref([\"a\", \"b\"]);\n    var checkedAll = ref(false);\n    var checkedAllTotol = ref(true);\n    var checkboxGroup = ref(null);\n    var checkAll = function checkAll() {\n      checkboxGroup.value.toggleAll(true);\n    };\n    return {\n      checked,\n      checkedAll,\n      checkAll,\n      checkedAllTotol,\n      checkboxGroup\n    };\n  },\n  data() {\n    return {\n      priceFormat,\n      refreshing: false,\n      loop: 0,\n      list: [],\n      total: {},\n      //金额计算数据\n      lang: getStorage('lang'),\n      isNewLine: ['it', 'de', 'ms', 'pt', 'es', 'ru', 'el', 'tr', 'fr'].includes(getStorage('lang')),\n      maxBuyNum: localStorage.getItem('maxBuyNum') || 500\n    };\n  },\n  components: {\n    [_List.name]: _List,\n    [_PullRefresh.name]: _PullRefresh,\n    [_Checkbox.name]: _Checkbox,\n    [_CheckboxGroup.name]: _CheckboxGroup,\n    [_Stepper.name]: _Stepper,\n    [_Dialog.Component.name]: _Dialog.Component\n  },\n  created() {\n    //获取购物车列表\n    isLogin() && this.getCartlist();\n    //计算总金额\n    this.mathMoney();\n  },\n  methods: {\n    handlerTouchstart(index, n, id) {\n      var _this = this;\n      var productList = this.$ls.get(\"productList\") || [];\n      this.loop = setTimeout(function () {\n        _this.loop = 0;\n        // 执行长按要执行的内容\n        _Dialog.confirm({\n          title: _this.$t(\"提示\"),\n          message: _this.$t(\"确认移除商品吗?\"),\n          confirmButtonText: _this.$t(\"确认\"),\n          cancelButtonText: _this.$t(\"取消\")\n        }).then(function () {\n          if (_this.list[index].child.length == 1) {\n            _this.list.splice(index, 1);\n          } else {\n            _this.list[index].child.splice(n, 1);\n          }\n          productList.forEach(function (item, index) {\n            if (item.id == id) {\n              productList.splice(index, 1);\n            }\n          });\n          _this.$store.state.qiangdan.count = productList.length;\n          _this.$ls.set(\"productList\", productList);\n          _this.getCartlist();\n        });\n      }, 500); // 定时的时间\n      // return false\n    },\n\n    handleClearInterval() {\n      // 清除定时器\n      clearTimeout(this.loop);\n      this.loop = 0;\n    },\n    handleStepper(val) {\n      var n = this.total.piece;\n      val == \"add\" ? n += 1 : n -= 1;\n      this.$store.state.qiangdan.count = n;\n    },\n    mathMoney() {\n      var _this2 = this;\n      var productList = this.$ls.get(\"productList\") || [];\n      this.total = {\n        money: 0,\n        piece: 0\n      };\n      this.list.forEach(function (item) {\n        _this2.total.piece = _this2.total.piece += item.checkedValue.length;\n        item.child.length > 0 && item.child.forEach(function (child) {\n          productList.forEach(function (x) {\n            if (x.id == child.id) x.count = child.count;\n          });\n          //num<item.moreNum&&\n          if (item.checkedValue.includes(child.tempId)) {\n            _this2.total.money += child.price.toFixed(2) * child.count;\n            // this.total.piece += child.count;\n          }\n        });\n      });\n\n      this.total.money = this.total.money.toFixed(2);\n      this.$ls.set(\"productList\", productList);\n      // this.list.length == this.total.piece && this.handleCheckAll()\n    },\n\n    getCartlist() {\n      var _this3 = this;\n      //缓存有购物车列表直接取,没有就用productList组装\n      // if (!this.$ls.get(\"cartList\")) {\n      //     this.list = this.$ls.get(\"cartList\");\n      //     this.list.length > 0 &&\n      //         this.list.forEach((item) => {\n      //             item.moreNum = 2;\n      //         });\n      // } else {\n      //初始list为空\n      this.list = [];\n      var productList = this.$ls.get(\"productList\") || [];\n      if (productList && productList.length > 0) {\n        productList.forEach(function (item) {\n          if (_this3.list.length > 0) {\n            _this3.list.forEach(function (c) {\n              var attributes = [];\n              if (item.canSelectAttributes) {\n                attributes = item.canSelectAttributes.skus.filter(function (i) {\n                  return i.skuId == item.skuId;\n                })[0];\n              }\n              if (c.sort == item.storeName) {\n                var _attributes = [];\n                if (item.canSelectAttributes) {\n                  _attributes = item.canSelectAttributes.skus.filter(function (i) {\n                    return i.skuId == item.skuId;\n                  })[0];\n                }\n                //同商铺添加子集合里\n                var childObj = {\n                  coverImg: item.coverImg,\n                  skuId: item.skuId,\n                  img: item.imgUrl1 || _this3.$defaultGoodsImage,\n                  price: item.discountPrice ? item.discountPrice : item.sellingPrice,\n                  describe: item.name,\n                  count: item.count,\n                  id: \"\".concat(item.id),\n                  tempId: item.tempId,\n                  attributes: _attributes,\n                  freightAmount: item.freightAmount || 0,\n                  goodsTax: item.goodsTax || 0,\n                  selected: true\n                };\n                c.child.unshift(childObj);\n              } else {\n                // if (item.canSelectAttributes) {\n                //   attributes = item.canSelectAttributes.skus.filter(\n                //     (i) => i.skuId == item.skuId\n                //   )[0];\n                // }\n                // console.log(\"attributes ->\", attributes);\n\n                var obj = {\n                  // skuId: item.skuId,\n                  key: item.sellerId,\n                  sort: item.storeName,\n                  checkedAll: true,\n                  checkedValue: [],\n                  moreNum: 2,\n                  child: []\n                };\n                var _childObj = {\n                  coverImg: item.coverImg,\n                  skuId: item.skuId,\n                  img: item.imgUrl1 || _this3.$defaultGoodsImage,\n                  price: item.discountPrice ? item.discountPrice : item.sellingPrice,\n                  describe: item.name,\n                  count: item.count,\n                  id: \"\".concat(item.id),\n                  tempId: item.tempId,\n                  freightAmount: item.freightAmount || 0,\n                  goodsTax: item.goodsTax || 0,\n                  selected: true,\n                  attributes\n                };\n                obj.child.unshift(_childObj);\n                _this3.list.push(obj);\n              }\n            });\n          } else {\n            var attributes = [];\n            if (item.canSelectAttributes) {\n              attributes = item.canSelectAttributes.skus.filter(function (i) {\n                return i.skuId == item.skuId;\n              })[0];\n            }\n            var obj = {\n              // skuId: item.skuId,\n              key: item.sellerId,\n              sort: item.storeName,\n              checkedAll: true,\n              checkedValue: [],\n              moreNum: 2,\n              child: []\n            };\n            var childObj = {\n              coverImg: item.coverImg,\n              skuId: item.skuId,\n              img: item.imgUrl1 || _this3.$defaultGoodsImage,\n              price: item.discountPrice ? item.discountPrice : item.sellingPrice,\n              describe: item.name,\n              count: item.count,\n              id: item.id,\n              freightAmount: item.freightAmount || 0,\n              goodsTax: item.goodsTax || 0,\n              selected: true,\n              attributes\n            };\n            obj.child.unshift(childObj);\n            _this3.list.unshift(obj);\n          }\n        });\n        for (var i = 0; i < this.list.length - 1; i++) {\n          for (var j = i + 1; j < this.list.length; j++) {\n            if (this.list[i].sort == this.list[j].sort) {\n              this.list.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        this.$ls.set(\"cartList\", this.list);\n      }\n      // }\n\n      //全选\n      this.handleCheckAll();\n    },\n    //跳转确认页,购买\n    toBuy() {\n      var notSelected = this.list.find(function (item) {\n        return item.child.find(function (sub) {\n          return sub.selected;\n        });\n      });\n      if (!notSelected) return _Toast(this.$t(\"未选中任何商品\"));\n      var tempArr = [];\n      this.list.forEach(function (item) {\n        if (item.checkedAll) {\n          item.child = item.child.filter(function (sub) {\n            return sub.selected;\n          });\n          tempArr.push(item);\n        }\n      });\n      // let productList = this.$ls.get(\"productList\");\n      // productList.map(item => {\n      //     console.log('item.id ::>> ', item.id)\n      // })\n      // 清除productList\n      this.$ls.set(\"cartList\", tempArr);\n      this.list = [];\n      this.$router.push(\"/orderComnfirmation?isCart=1\");\n      // this.$router.push(\"/commodity\");\n    },\n\n    // 单选\n    handlecheckItemClick(item, index, n) {\n      var _this4 = this;\n      this.list[index].child[n].selected = !this.list[index].child[n].selected;\n      var count = 0;\n      var num = 0;\n      var len = this.list[index].child.length;\n      this.list[index].child.forEach(function (item) {\n        if (item.selected) count += 1;else num += 1;\n        if (count != 0) _this4.list[index].checkedAll = true;\n        if (num == len) _this4.list[index].checkedAll = false;\n      });\n    },\n    //类全选\n    handleCheckItemAll(value, index) {\n      var _this5 = this;\n      this.list[index].checkedValue = [];\n      this.$nextTick(function () {\n        _this5.list[index].child.forEach(function (item, num) {\n          item.selected = value;\n          value && _this5.list[index].checkedValue.push(item.tempId);\n        });\n      });\n      // if (value) {\n      // if (num < this.list[index].moreNum) {\n      //     this.list[index].checkedValue.push(item.id);\n      // }\n      // }\n    },\n\n    //全选\n    handleCheckAll() {\n      var _this6 = this;\n      this.list.forEach(function (i) {\n        var _i$child;\n        i.checkedValue = [];\n        i.checkedAll = _this6.checkedAllTotol;\n        (_i$child = i.child) === null || _i$child === void 0 || _i$child.forEach(function (j) {\n          j.selected = _this6.checkedAllTotol;\n          _this6.checkedAllTotol && i.checkedValue.push(j.tempId);\n        });\n      });\n    },\n    onRefresh() {\n      // 清空列表数据\n      this.finished = false;\n      this.list = [];\n      this.loading = true;\n      this.onLoad();\n    },\n    onLoad() {\n      if (this.refreshing) {\n        this.list = [];\n        this.refreshing = false;\n      }\n      this.getCartlist();\n    },\n    // tuanduimingxi_post() {\n    //   this.page_no++\n    //   var data = {\n    //     'pageNum': this.page_no,\n    //     'pageSize': 10,\n    //   }\n    //   goods_list_action_post(data).then(res => {\n\n    //   })\n    // },\n    qiehuan() {\n      this.list = [];\n      this.loading = false;\n      this.finished = false;\n      this.refreshing = false;\n      this.page_no = 0;\n      // this.onLoad()\n    },\n\n    goods_points_action() {\n      var _this7 = this;\n      this.show = true;\n      goods_points_action_post({}).then(function (res) {\n        _this7.show = false;\n        _this7.goods_points_action_data = res.points;\n      });\n    },\n    touzi(e) {\n      this.$router.push(\"/InvestmentDetails?goodsId=\" + e);\n    },\n    onClickLeft() {\n      this.$router.push(\"/me\");\n    }\n  },\n  watch: {\n    list: {\n      handler(val) {\n        this.checkedAllTotol = val.every(function (item) {\n          return item.child.every(function (sub) {\n            return sub.selected;\n          });\n        });\n      },\n      deep: true\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACAA;AACA;AAAA,OACA;AACA;AACA;AACA;EACAC;IACA;IACA;IACA;IACA;IACA;MACAC;IACA;IACA;MACAC;MACAC;MACAC;MACAC;MACAJ;IACA;EACA;EACAK;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MAAA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;EACA;EACAC;IACA;IACAC;IACA;IACA;EACA;EACAC;IACAC;MAAA;MACA;MACA;QACA;QACA;QACA;UACAC;UACAC;UACAC;UACAC;QACA;UACA;YACA;UACA;YACA;UACA;UAEAC;YACA;cACAA;YACA;UACA;UACA;UACA;UACA;QACA;MACA;MACA;IACA;;IACAC;MACA;MACAC;MACA;IACA;IAEAC;MACA;MACAC;MACA;IACA;IACAC;MAAA;MACA;MACA;QACAC;QACAC;MACA;MACA;QACA;QACAC,yBACAA;UACAR;YACA;UACA;UACA;UACA;YACA;YACA;UACA;QACA;MACA;;MACA;MACA;MACA;IACA;;IACAS;MAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAT;UACA;YACA;cACA;cACA;gBACAU,kDACA;kBAAA;gBAAA,EACA;cACA;cACA;gBACA;gBACA;kBACAA,mDACA;oBAAA;kBAAA,EACA;gBACA;gBACA;gBACA;kBACAC;kBACAC;kBACAC;kBACAC,4BACAN,qBACAA;kBACAO;kBACAC;kBACAC;kBACAC;kBACAR;kBACAS;kBACAC;kBACAC;gBACA;gBACAC;cACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;gBAEA;kBACA;kBACAC;kBACAC;kBACA7C;kBACA8C;kBACAC;kBACAC;gBACA;gBACA;kBACAhB;kBACAC;kBACAC;kBACAC,4BACAN,qBACAA;kBACAO;kBACAC;kBACAC;kBACAC;kBACAC;kBACAC;kBACAC;kBACAX;gBACA;gBACAkB;gBACA;cACA;YACA;UACA;YACA;YACA;cACAlB,kDACA;gBAAA;cAAA,EACA;YACA;YACA;cACA;cACAa;cACAC;cACA7C;cACA8C;cACAC;cACAC;YACA;YACA;cACAhB;cACAC;cACAC;cACAC,4BACAN,qBACAA;cACAO;cACAC;cACAC;cACAE;cACAC;cACAC;cACAX;YACA;YACAkB;YACA;UACA;QACA;QACA;UACA;YACA;cACA;cACAC;YACA;UACA;QACA;QACA;MACA;MACA;;MAEA;MACA;IACA;IACA;IACAC;MACA;QAAA,OACAtB;UAAA;QAAA;MAAA,EACA;MACA;MACA;MACA;QACA;UACAA;YAAA;UAAA;UACAuB;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;IACA;IACAC;MAAA;MACA;MACA;MACA;MACA;MACA;QACA,mCACAC;QACA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;MACA;QACA;UACA1B;UACA2B;QACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;IACA;IACAC;MAAA;MACA;QAAA;QACAC;QACAA;QACA;UACAR;UACA;QACA;MACA;IACA;IACAS;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;QACA;QACA;MACA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;IACAC;MAAA;MACA;MACAlE;QAGA;QACA;MACA;IACA;IACAmE;MAEA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACA1D;MACA2D;QACA;UAAA,OACArC;YAAA;UAAA;QAAA,EACA;MACA;MACAsC;IACA;EACA;AACA","names":["goods_points_action_post","setup","checkboxGroup","checked","checkedAll","checkAll","checkedAllTotol","data","priceFormat","refreshing","loop","list","total","lang","isNewLine","maxBuyNum","components","created","isLogin","methods","handlerTouchstart","title","message","confirmButtonText","cancelButtonText","productList","handleClearInterval","clearTimeout","handleStepper","val","mathMoney","money","piece","item","getCartlist","attributes","coverImg","skuId","img","price","describe","count","id","tempId","freightAmount","goodsTax","selected","c","key","sort","checkedValue","moreNum","child","obj","j","toBuy","tempArr","handlecheckItemClick","num","handleCheckItemAll","value","handleCheckAll","i","onRefresh","onLoad","qiehuan","goods_points_action","touzi","onClickLeft","watch","handler","deep"],"sourceRoot":"src/page/cart","sources":["index.vue"],"sourcesContent":["<template>\n    <div class=\"mall\">\n        <van-nav-bar safe-area-inset-top fixed :title=\"$t('购物车')\" />\n        <div style=\"width: 100%; height: 46px\"></div>\n        <!-- <van-pull-refresh v-model=\"refreshing\" @refresh=\"onRefresh\" class=\"mall-refresh\" :pulling-text=\"$t('下拉即可刷新')\"\n            :loosing-text=\"$t('释放即可刷新')\" :loading-text=\"$t('加载中')\"> -->\n        <template v-if=\"list.length > 0\">\n            <div v-for=\"(item, index) in list\" :key=\"item.key\" class=\"mall-detail\">\n                <van-checkbox class=\"mall-title\" v-model=\"item.checkedAll\"\n                    @click=\"handleCheckItemAll(item.checkedAll, index)\">{{ item.sort }}</van-checkbox>\n                <div class=\"mall-item\">\n                    <van-checkbox-group v-model=\"item.checkedValue\" @change=\"mathMoney\">\n                        <template v-for=\"(i, n) in item.child\">\n                            <van-checkbox :key=\"n\" :name=\"i.tempId\" class=\"mall-item-checkbox\" v-if=\"n < item.moreNum\"\n                                v-model=\"i.selected\" @click=\"handlecheckItemClick(item, index, n)\">\n                                <div class=\"mall-item-child\" @touchstart=\"handlerTouchstart(index, n, i.id)\"\n                                    @touchmove=\"handleClearInterval\" @touchend=\"handleClearInterval\">\n                                    <div class=\"mall-item-child-img\">\n                                        <img :src=\"i.coverImg || i.img\" class=\"img\" />\n                                    </div>\n                                    <div style=\"width: 75%; margin-left: 6px\">\n                                        <p class=\"describe\">\n                                            {{\n                                                i.describe?.length > 43\n                                                ? i.describe.slice(0, 43) + \"...\"\n                                                : i.describe\n                                            }}\n                                        </p>\n                                        <p v-if=\"i.attributes\" class=\"sku_box\">\n                                            <span class=\"attribute\" v-for=\"(j, p) in i.attributes.attrs\" :key=\"p\">\n                                                {{\n                                                    j.attrName\n                                                }}:{{ j.attrValueName }}</span>\n                                        </p>\n                                        <div class=\"price\">\n                                            <span> $ {{ priceFormat(i.price) }} </span>\n                                            <div class=\"stepper\" @click.stop=\"mathMoney\">\n                                                <van-stepper :disable-input=\"true\" v-model=\"i.count\"\n                                                    :disabled=\"item.checkedValue.length == 0\" @change=\"mathMoney\"\n                                                    :max=\"maxBuyNum\" integer @plus=\"handleStepper('add')\"\n                                                    @minus=\"handleStepper('minus')\" />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </van-checkbox>\n                        </template>\n                        <div class=\"show-more\" v-show=\"item.child.length > 1 && item.moreNum < item.child.length\n                            \" @click=\"item.moreNum += 2\">\n                            <p>{{ $t(\"查看更多\") }}</p>\n                            <img src=\"../../assets/image/index/down-icon.png\" />\n                        </div>\n                    </van-checkbox-group>\n                </div>\n            </div>\n            <div class=\"mall-bottom\">\n                <van-checkbox class=\"checkbox_cn\" v-model=\"checkedAllTotol\" v-if=\"!isNewLine\" @click=\"handleCheckAll\">\n                    {{ $t(\"全选\") }}\n                </van-checkbox>\n                <div class=\"mid\">\n                    <van-checkbox class=\"checkbox\" v-model=\"checkedAllTotol\" v-if=\"isNewLine\" @click=\"handleCheckAll\">\n                        {{ $t(\"全选\") }}\n                    </van-checkbox>\n                    <span>{{ $t(\"总计\") }}\n                        <span class=\"price\">${{ priceFormat(total.money) }}</span></span>\n                    <span>{{ $t(\"选择\") }} <span class=\"piece\">{{ total.piece }}</span>\n                        {{ $t(\"个\") }}</span>\n                </div>\n                <van-button color=\"rgba(233, 157, 56, 1)\" style=\"margin-right: 10px;\" @click=\"toBuy\">\n                    {{ $t(\"立即购买\") }}\n                </van-button>\n            </div>\n        </template>\n        <div class=\"mall-empty\" v-else>\n            <img src=\"../../assets/image/index/gouwuche1.png\" class=\"img\" />\n            <p class=\"text\">{{ $t(\"购物车空空\") }}</p>\n            <router-link to=\"/commodity\">\n                <van-button class=\"button\" color=\"rgba(233, 157, 56, 1)\">{{\n                    $t(\"立即购物\")\n                }}</van-button>\n            </router-link>\n        </div>\n        <!-- </van-pull-refresh> -->\n        <div style=\"width: 100%; height: 118px\"></div>\n    </div>\n</template>\n<script>\nimport {\n    // NavBar,\n    // Tab,\n    // Tabs,\n    PullRefresh,\n    List,\n    Checkbox,\n    CheckboxGroup,\n    Stepper,\n    Dialog,\n    Toast,\n} from \"vant\";\nimport {\n    // goods_list_action_post,\n    goods_points_action_post,\n    // project_listProject_action_post,\n} from \"@/API/user\";\nimport { ref } from \"vue\";\nimport { priceFormat, isLogin, getStorage } from '@/utils/utis'\nexport default {\n    setup() {\n        const checked = ref([\"a\", \"b\"]);\n        const checkedAll = ref(false);\n        const checkedAllTotol = ref(true);\n        const checkboxGroup = ref(null);\n        const checkAll = () => {\n            checkboxGroup.value.toggleAll(true);\n        };\n        return {\n            checked,\n            checkedAll,\n            checkAll,\n            checkedAllTotol,\n            checkboxGroup,\n        };\n    },\n    data() {\n        return {\n            priceFormat,\n            refreshing: false,\n            loop: 0,\n            list: [],\n            total: {}, //金额计算数据\n            lang: getStorage('lang'),\n            isNewLine: ['it', 'de', 'ms', 'pt', 'es', 'ru', 'el', 'tr', 'fr'].includes(getStorage('lang')),\n            maxBuyNum: localStorage.getItem('maxBuyNum') || 500,\n        };\n    },\n    components: {\n        [List.name]: List,\n        [PullRefresh.name]: PullRefresh,\n        [Checkbox.name]: Checkbox,\n        [CheckboxGroup.name]: CheckboxGroup,\n        [Stepper.name]: Stepper,\n        [Dialog.Component.name]: Dialog.Component,\n    },\n    created() {\n        //获取购物车列表\n        isLogin() && this.getCartlist();\n        //计算总金额\n        this.mathMoney();\n    },\n    methods: {\n        handlerTouchstart(index, n, id) {\n            let productList = this.$ls.get(\"productList\") || [];\n            this.loop = setTimeout(() => {\n                this.loop = 0;\n                // 执行长按要执行的内容\n                Dialog.confirm({\n                    title: this.$t(\"提示\"),\n                    message: this.$t(\"确认移除商品吗?\"),\n                    confirmButtonText: this.$t(\"确认\"),\n                    cancelButtonText: this.$t(\"取消\"),\n                }).then(() => {\n                    if (this.list[index].child.length == 1) {\n                        this.list.splice(index, 1);\n                    } else {\n                        this.list[index].child.splice(n, 1);\n                    }\n\n                    productList.forEach((item, index) => {\n                        if (item.id == id) {\n                            productList.splice(index, 1);\n                        }\n                    });\n                    this.$store.state.qiangdan.count = productList.length;\n                    this.$ls.set(\"productList\", productList);\n                    this.getCartlist();\n                });\n            }, 500); // 定时的时间\n            // return false\n        },\n        handleClearInterval() {\n            // 清除定时器\n            clearTimeout(this.loop);\n            this.loop = 0;\n        },\n\n        handleStepper(val) {\n            let n = this.total.piece;\n            val == \"add\" ? (n += 1) : (n -= 1);\n            this.$store.state.qiangdan.count = n;\n        },\n        mathMoney() {\n            let productList = this.$ls.get(\"productList\") || [];\n            this.total = {\n                money: 0,\n                piece: 0,\n            };\n            this.list.forEach((item) => {\n                this.total.piece = this.total.piece += item.checkedValue.length\n                item.child.length > 0 &&\n                    item.child.forEach((child) => {\n                        productList.forEach(x => {\n                            if (x.id == child.id) x.count = child.count\n                        })\n                        //num<item.moreNum&&\n                        if (item.checkedValue.includes(child.tempId)) {\n                            this.total.money += child.price.toFixed(2) * child.count;\n                            // this.total.piece += child.count;\n                        }\n                    });\n            });\n            this.total.money = this.total.money.toFixed(2);\n            this.$ls.set(\"productList\", productList)\n            // this.list.length == this.total.piece && this.handleCheckAll()\n        },\n        getCartlist() {\n            //缓存有购物车列表直接取,没有就用productList组装\n            // if (!this.$ls.get(\"cartList\")) {\n            //     this.list = this.$ls.get(\"cartList\");\n            //     this.list.length > 0 &&\n            //         this.list.forEach((item) => {\n            //             item.moreNum = 2;\n            //         });\n            // } else {\n            //初始list为空\n            this.list = [];\n            let productList = this.$ls.get(\"productList\") || [];\n            if (productList && productList.length > 0) {\n                productList.forEach((item) => {\n                    if (this.list.length > 0) {\n                        this.list.forEach((c) => {\n                            let attributes = [];\n                            if (item.canSelectAttributes) {\n                                attributes = item.canSelectAttributes.skus.filter(\n                                    (i) => i.skuId == item.skuId\n                                )[0];\n                            }\n                            if (c.sort == item.storeName) {\n                                let attributes = [];\n                                if (item.canSelectAttributes) {\n                                    attributes = item.canSelectAttributes.skus.filter(\n                                        (i) => i.skuId == item.skuId\n                                    )[0];\n                                }\n                                //同商铺添加子集合里\n                                let childObj = {\n                                    coverImg: item.coverImg,\n                                    skuId: item.skuId,\n                                    img: item.imgUrl1 || this.$defaultGoodsImage,\n                                    price: item.discountPrice\n                                        ? item.discountPrice\n                                        : item.sellingPrice,\n                                    describe: item.name,\n                                    count: item.count,\n                                    id: `${item.id}`,\n                                    tempId: item.tempId,\n                                    attributes,\n                                    freightAmount: item.freightAmount || 0,\n                                    goodsTax: item.goodsTax || 0,\n                                    selected: true,\n                                };\n                                c.child.unshift(childObj);\n                            } else {\n                                // if (item.canSelectAttributes) {\n                                //   attributes = item.canSelectAttributes.skus.filter(\n                                //     (i) => i.skuId == item.skuId\n                                //   )[0];\n                                // }\n                                // console.log(\"attributes ->\", attributes);\n\n                                let obj = {\n                                    // skuId: item.skuId,\n                                    key: item.sellerId,\n                                    sort: item.storeName,\n                                    checkedAll: true,\n                                    checkedValue: [],\n                                    moreNum: 2,\n                                    child: [],\n                                };\n                                let childObj = {\n                                    coverImg: item.coverImg,\n                                    skuId: item.skuId,\n                                    img: item.imgUrl1 || this.$defaultGoodsImage,\n                                    price: item.discountPrice\n                                        ? item.discountPrice\n                                        : item.sellingPrice,\n                                    describe: item.name,\n                                    count: item.count,\n                                    id: `${item.id}`,\n                                    tempId: item.tempId,\n                                    freightAmount: item.freightAmount || 0,\n                                    goodsTax: item.goodsTax || 0,\n                                    selected: true,\n                                    attributes,\n                                };\n                                obj.child.unshift(childObj);\n                                this.list.push(obj);\n                            }\n                        });\n                    } else {\n                        let attributes = [];\n                        if (item.canSelectAttributes) {\n                            attributes = item.canSelectAttributes.skus.filter(\n                                (i) => i.skuId == item.skuId\n                            )[0];\n                        }\n                        let obj = {\n                            // skuId: item.skuId,\n                            key: item.sellerId,\n                            sort: item.storeName,\n                            checkedAll: true,\n                            checkedValue: [],\n                            moreNum: 2,\n                            child: [],\n                        };\n                        let childObj = {\n                            coverImg: item.coverImg,\n                            skuId: item.skuId,\n                            img: item.imgUrl1 || this.$defaultGoodsImage,\n                            price: item.discountPrice\n                                ? item.discountPrice\n                                : item.sellingPrice,\n                            describe: item.name,\n                            count: item.count,\n                            id: item.id,\n                            freightAmount: item.freightAmount || 0,\n                            goodsTax: item.goodsTax || 0,\n                            selected: true,\n                            attributes,\n                        };\n                        obj.child.unshift(childObj);\n                        this.list.unshift(obj);\n                    }\n                });\n                for (var i = 0; i < this.list.length - 1; i++) {\n                    for (var j = i + 1; j < this.list.length; j++) {\n                        if (this.list[i].sort == this.list[j].sort) {\n                            this.list.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n                this.$ls.set(\"cartList\", this.list);\n            }\n            // }\n\n            //全选\n            this.handleCheckAll();\n        },\n        //跳转确认页,购买\n        toBuy() {\n            const notSelected = this.list.find((item) =>\n                item.child.find((sub) => sub.selected)\n            );\n            if (!notSelected) return Toast(this.$t(\"未选中任何商品\"));\n            const tempArr = [];\n            this.list.forEach((item) => {\n                if (item.checkedAll) {\n                    item.child = item.child.filter((sub) => sub.selected);\n                    tempArr.push(item);\n                }\n            });\n            // let productList = this.$ls.get(\"productList\");\n            // productList.map(item => {\n            //     console.log('item.id ::>> ', item.id)\n            // })\n            // 清除productList\n            this.$ls.set(\"cartList\", tempArr);\n            this.list = [];\n            this.$router.push(\"/orderComnfirmation?isCart=1\");\n            // this.$router.push(\"/commodity\");\n        },\n        // 单选\n        handlecheckItemClick(item, index, n) {\n            this.list[index].child[n].selected = !this.list[index].child[n].selected;\n            let count = 0;\n            let num = 0;\n            let len = this.list[index].child.length;\n            this.list[index].child.forEach((item) => {\n                if (item.selected) count += 1;\n                else num += 1;\n                if (count != 0) this.list[index].checkedAll = true;\n                if (num == len) this.list[index].checkedAll = false;\n            });\n        },\n        //类全选\n        handleCheckItemAll(value, index) {\n            this.list[index].checkedValue = [];\n            this.$nextTick(() => {\n                this.list[index].child.forEach((item, num) => {\n                    item.selected = value;\n                    value && this.list[index].checkedValue.push(item.tempId);\n                });\n            });\n            // if (value) {\n            // if (num < this.list[index].moreNum) {\n            //     this.list[index].checkedValue.push(item.id);\n            // }\n            // }\n        },\n        //全选\n        handleCheckAll() {\n            this.list.forEach((i) => {\n                i.checkedValue = [];\n                i.checkedAll = this.checkedAllTotol;\n                i.child?.forEach((j) => {\n                    j.selected = this.checkedAllTotol;\n                    this.checkedAllTotol && i.checkedValue.push(j.tempId);\n                });\n            });\n        },\n        onRefresh() {\n            // 清空列表数据\n            this.finished = false;\n            this.list = [];\n            this.loading = true;\n            this.onLoad();\n        },\n        onLoad() {\n            if (this.refreshing) {\n                this.list = [];\n                this.refreshing = false;\n            }\n            this.getCartlist();\n        },\n        // tuanduimingxi_post() {\n        //   this.page_no++\n        //   var data = {\n        //     'pageNum': this.page_no,\n        //     'pageSize': 10,\n        //   }\n        //   goods_list_action_post(data).then(res => {\n\n        //   })\n        // },\n        qiehuan() {\n            this.list = [];\n            this.loading = false;\n            this.finished = false;\n            this.refreshing = false;\n            this.page_no = 0;\n            // this.onLoad()\n        },\n        goods_points_action() {\n            this.show = true;\n            goods_points_action_post({}).then((res) => {\n\n\n                this.show = false;\n                this.goods_points_action_data = res.points;\n            });\n        },\n        touzi(e) {\n\n            this.$router.push(\"/InvestmentDetails?goodsId=\" + e);\n        },\n        onClickLeft() {\n            this.$router.push(\"/me\");\n        },\n    },\n    watch: {\n        list: {\n            handler(val) {\n                this.checkedAllTotol = val.every((item) =>\n                    item.child.every((sub) => sub.selected)\n                );\n            },\n            deep: true,\n        },\n    },\n};\n</script>\n<style lang=\"scss\" scoped>\n.attribute {\n    font-size: 12px;\n    color: #333;\n    margin-right: 10px;\n}\n\n.mall {\n    position: relative;\n    background: #f5f5f7;\n    min-height: 100%;\n    font-size: 14px;\n    box-sizing: border-box;\n\n    .mall-refresh {\n        min-height: calc(100vh - 46px - 60px);\n        // overflow-y: scroll;\n    }\n\n    .mall-detail {\n        // height:calc(100vh - 46px - 60px);\n        margin-bottom: 20px;\n        padding: 0 15px;\n\n        .mall-title {\n            font-size: 14px;\n            margin: 14px 0;\n        }\n\n        .mall-item {\n            width: 345px;\n            background: #fff;\n\n            .mall-item-child {\n                width: 100%;\n                display: flex;\n                justify-content: space-around;\n                align-items: center;\n\n                .mall-item-child-img {\n                    width: 62px;\n                    height: 62px;\n                    display: table-cell;\n\n                    img {\n                        max-width: 100%;\n                        max-height: 100%;\n                        display: block;\n                        margin: auto;\n                    }\n                }\n\n                .price {\n                    color: var(--main-color);\n                    font-size: 16px;\n                    font-weight: 500;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    margin-top: 10px;\n                }\n\n                .describe {\n                    font-size: 14px;\n                    color: #000;\n\n                    display: -webkit-box;\n                    width: 195px;\n                    -webkit-box-orient: vertical;\n                    -moz-box-orient: vertical;\n                    box-orient: vertical;\n                    -webkit-line-clamp: 2;\n                    line-clamp: 2;\n                    overflow: hidden;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                }\n\n                .stepper {\n                    display: flex;\n                    justify-content: flex-end;\n                    align-items: center;\n                    margin-right: 10px;\n                }\n            }\n        }\n\n        .mall-item-checkbox {\n            border-bottom: 1px solid #eeeeee;\n            // padding: 20px 0;\n            width: 345px;\n            // height: 107px;\n            padding: 10px 0;\n\n            .sku_box {\n                display: flex;\n                flex-wrap: wrap;\n            }\n        }\n\n        .mall-item-checkbox:nth-last-child(2) {\n            border: none;\n        }\n\n        .show-more {\n            color: #000;\n            font-size: 12px;\n            text-align: center;\n\n            img {\n                width: 16px;\n                height: 16px;\n            }\n        }\n    }\n\n    .mall-bottom {\n        width: 100%;\n        background: #fff;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        font-size: 14px;\n        padding: 4px 7px;\n        position: fixed;\n        bottom: 56px;\n\n        .mid {\n            display: flex;\n            flex-direction: column;\n\n        }\n\n        .checkbox_cn {\n            font-size: 14px;\n            margin: 14px 0;\n\n            :deep(.van-checkbox__label) {\n                transform: translateX(-10px);\n            }\n        }\n\n        .checkbox {\n            font-size: 14px;\n\n            // margin: 14px 0;\n            transform: translateX(-10px);\n\n            :deep(.van-checkbox__label) {\n                transform: translateX(-10px);\n            }\n        }\n\n        .price {\n            color: var(--main-color);\n            font-size: 16px;\n            font-weight: 600;\n        }\n\n        .piece {\n            color: var(--main-color);\n        }\n    }\n\n    .mall-empty {\n        height: calc(100vh - 30vh);\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\n        .img {\n            width: 100px;\n        }\n\n        .text {\n            font-size: 16px;\n            margin: 20px 0;\n        }\n\n        .button {\n            height: 40px;\n            margin: 0 !important;\n            background: var(--main-color) !important;\n        }\n    }\n}\n\n/deep/ .van-checkbox__icon--checked .van-icon {\n    background-color: var(--main-color) !important;\n    border-color: var(--main-color) !important;\n}\n\n/deep/ .van-checkbox__icon {\n    font-size: 16px !important;\n    padding: 0 11px;\n}\n\n/deep/ .van-checkbox__label {\n    flex-grow: 1;\n}\n\n/deep/ .van-button {\n    margin-right: 14px;\n}\n\n/deep/ .van-stepper {\n    margin-right: 13px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}