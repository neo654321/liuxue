{"ast":null,"code":"import _toConsumableArray from \"/Users/neo/Desktop/mallV2/app-h5/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nvar getStorgeSearchData = function getStorgeSearchData() {\n  var storgeData = localStorage.getItem('searchHistory');\n  return storgeData && storgeData.length ? JSON.parse(storgeData) : [];\n};\nvar hasInArr = function hasInArr(arr, val) {\n  if (arr.length) {\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i].goodsId === val.goodsId) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n};\nexport default {\n  state: {\n    searchHistory: []\n  },\n  getters: {\n    searchHistory: function searchHistory(state) {\n      return state.searchHistory.length ? state.searchHistory : getStorgeSearchData();\n    }\n  },\n  mutations: {\n    SET_SEARCH_HISTORY: function SET_SEARCH_HISTORY(state, arr) {\n      var arrStr = JSON.stringify(arr);\n      state.searchHistory = arr;\n      localStorage.setItem('searchHistory', arrStr);\n    },\n    CLEAR_SEARCH_HISTORY: function CLEAR_SEARCH_HISTORY(state) {\n      state.searchHistory = [];\n      localStorage.removeItem('searchHistory');\n    }\n  },\n  actions: {\n    setSearchHistory: function setSearchHistory(_ref, val) {\n      var commit = _ref.commit,\n        state = _ref.state;\n      var storeData = state.searchHistory.length ? state.searchHistory : getStorgeSearchData();\n      var data = _toConsumableArray(storeData);\n      if (!hasInArr(storeData, val)) {\n        data.push(val);\n      }\n      commit('SET_SEARCH_HISTORY', data);\n    },\n    clearSearchHistory: function clearSearchHistory(_ref2) {\n      var commit = _ref2.commit;\n      commit('CLEAR_SEARCH_HISTORY');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}