{"ast":null,"code":"import _Dropdown2 from \"element-ui/lib/theme-chalk/dropdown.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dropdown from \"element-ui/lib/dropdown\";\nimport _DropdownItem2 from \"element-ui/lib/theme-chalk/dropdown-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownItem from \"element-ui/lib/dropdown-item\";\nimport _DropdownMenu2 from \"element-ui/lib/theme-chalk/dropdown-menu.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _DropdownMenu from \"element-ui/lib/dropdown-menu\";\nimport _objectSpread from \"/Users/neo/Desktop/mall_vue/app-h5/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapGetters, mapMutations } from \"vuex\";\nexport default {\n  name: 'mer-chant-header',\n  data() {\n    return {\n      logo: require(\"@/assets/\".concat(process.env.VUE_APP_ITEM_NAME, \"/logo.\").concat(this.$store.state.multiItem[process.env.VUE_APP_ITEM_NAME].suffix)),\n      lang: [{\n        title: '简体中文',\n        key: 'cn',\n        icon: require('@/assets/image/language/cn.png')\n      }, {\n        title: 'English',\n        key: 'en',\n        icon: require('@/assets/image/language/usa.png')\n      }, {\n        title: '繁体中文',\n        key: 'tw',\n        icon: require('@/assets/image/language/tw.png')\n      }]\n    };\n  },\n  computed: _objectSpread({\n    languageIcon() {\n      var language = this.$store.getters.language || 'tw';\n      var icon = {\n        'cn': require('@/assets/image/language/cn.png'),\n        'en': require('@/assets/image/language/usa.png'),\n        'tw': require('@/assets/image/language/tw.png')\n      };\n      return icon[language];\n    }\n  }, mapGetters({\n    activeLang: 'language'\n  })),\n  created() {},\n  components: {\n    [_DropdownMenu.name]: _DropdownMenu,\n    [_DropdownItem.name]: _DropdownItem,\n    [_Dropdown.name]: _Dropdown\n  },\n  methods: _objectSpread(_objectSpread({}, mapMutations(['setLanguage'])), {}, {\n    handleSetLang(index) {\n      console.log(index);\n      // 设置i18n.locale 组件库会按照上面的配置使用对应的文案文件\n      this.$i18n.locale = this.lang[index].key;\n      // // 提交mutations\n      this.setLanguage(this.lang[index].key);\n    }\n  })\n};","map":null,"metadata":{},"sourceType":"module"}