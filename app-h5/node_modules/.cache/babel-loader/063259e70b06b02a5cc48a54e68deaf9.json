{"ast":null,"code":"import _regeneratorRuntime from \"/Users/neo/Desktop/mall_vue/app-h5/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/neo/Desktop/mall_vue/app-h5/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { updateOldAndNewPsw } from \"@/API/user\";\nimport { isLogin } from '@/utils/utis';\nimport Vcode from \"vue-puzzle-vcode\";\nimport router from '@/router/router';\nexport default {\n  data() {\n    return {\n      img1: require('@/assets/image/slider/1.png'),\n      img2: require('@/assets/image/slider/2.png'),\n      img3: require('@/assets/image/slider/3.png'),\n      img4: require('@/assets/image/slider/4.png'),\n      img5: require('@/assets/image/slider/5.png'),\n      show: false,\n      it: {\n        input1: '',\n        input2: '',\n        input3: ''\n      }\n    };\n  },\n  components: {\n    [_NavBar.name]: _NavBar,\n    Vcode\n  },\n  created() {\n    if (!isLogin()) {\n      this.$router.push('/');\n    }\n  },\n  methods: {\n    onClickLeft() {\n      this.$router.push({\n        path: '/Setting',\n        dir: 'left'\n      });\n    },\n    biaodantijiao() {\n      var t = this;\n      if (t.it.input1 === '') {\n        _Toast(t.$t('请输入原密码'));\n        return;\n      }\n      if (t.it.input2 === '') {\n        _Toast(t.$t('请输入新密码'));\n        return;\n      }\n      var reg = /^[a-zA-Z0-9!@#$%^&*()_+{}\\[\\]:;'\"\\\\|,.<>?~`\\-=/]{6,12}$/;\n      if (!reg.test(t.it.input2)) {\n        _Toast(t.$t('请输入 6-12 位由数字或字母组成的密码'));\n        return;\n      }\n      if (t.it.input3 !== t.it.input2) {\n        _Toast(t.$t('两次密码输入不一致'));\n        return;\n      }\n      this.submitHandle();\n      //   this.show = true\n    },\n    onSuccess() {\n      this.submitHandle();\n      this.show = false;\n    },\n    submitHandle() {\n      var _this = this;\n      _Toast.loading({\n        duration: 0,\n        message: this.$t('提交中'),\n        forbidClick: true\n      });\n      var params = {\n        old_password: encodeURIComponent(this.it.input1),\n        password: encodeURIComponent(this.it.input2),\n        re_password: encodeURIComponent(this.it.input3)\n      };\n      updateOldAndNewPsw(params).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _Toast.success(_this.$t('修改成功'));\n              _context.next = 3;\n              return _this.$store.dispatch('getUserInfo');\n            case 3:\n              _this.onClickLeft();\n              // localStorage.removeItem('token')\n              // this.$router.push('/login')\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))).catch(function (err) {\n        _Toast.clear();\n        // Toast.fail(err.msg)\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}